<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1125"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1125"> </text>
<g id="frames">
<g>
<title>all (90,156 samples, 100.00%)</title><rect x="10.0" y="1091.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1102.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=441328] (1,077 samples, 1.19%)</title><rect x="10.0" y="1075.0" width="14.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>[no_Java_frame] (21 samples, 0.02%)</title><rect x="10.1" y="1059.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.1" y="1070.0"></text>
</g>
<g>
<title>start_thread (1,023 samples, 1.13%)</title><rect x="10.7" y="1059.0" width="13.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,023 samples, 1.13%)</title><rect x="10.7" y="1043.0" width="13.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.7" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,023 samples, 1.13%)</title><rect x="10.7" y="1027.0" width="13.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.7" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,023 samples, 1.13%)</title><rect x="10.7" y="1011.0" width="13.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.7" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,023 samples, 1.13%)</title><rect x="10.7" y="995.0" width="13.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.7" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,023 samples, 1.13%)</title><rect x="10.7" y="979.0" width="13.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.7" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,017 samples, 1.13%)</title><rect x="10.8" y="963.0" width="13.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.8" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,008 samples, 1.12%)</title><rect x="10.9" y="947.0" width="13.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (994 samples, 1.10%)</title><rect x="11.0" y="931.0" width="13.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="14.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (987 samples, 1.09%)</title><rect x="11.1" y="915.0" width="12.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="14.1" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (976 samples, 1.08%)</title><rect x="11.2" y="899.0" width="12.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.2" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (957 samples, 1.06%)</title><rect x="11.5" y="883.0" width="12.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="14.5" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (925 samples, 1.03%)</title><rect x="11.8" y="867.0" width="12.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.8" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (780 samples, 0.87%)</title><rect x="13.6" y="851.0" width="10.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (631 samples, 0.70%)</title><rect x="15.5" y="835.0" width="8.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.5" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (516 samples, 0.57%)</title><rect x="17.0" y="819.0" width="6.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="20.0" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (406 samples, 0.45%)</title><rect x="18.4" y="803.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.4" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (300 samples, 0.33%)</title><rect x="19.8" y="787.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="22.8" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (269 samples, 0.30%)</title><rect x="20.1" y="771.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="23.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (235 samples, 0.26%)</title><rect x="20.6" y="755.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="23.6" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (214 samples, 0.24%)</title><rect x="20.8" y="739.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (196 samples, 0.22%)</title><rect x="21.0" y="723.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="24.0" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (177 samples, 0.20%)</title><rect x="21.3" y="707.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.3" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (157 samples, 0.17%)</title><rect x="21.5" y="691.0" width="2.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="24.5" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (136 samples, 0.15%)</title><rect x="21.8" y="675.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="24.8" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (112 samples, 0.12%)</title><rect x="22.0" y="659.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="25.0" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (94 samples, 0.10%)</title><rect x="22.2" y="643.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="25.2" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (76 samples, 0.08%)</title><rect x="22.5" y="627.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.5" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (70 samples, 0.08%)</title><rect x="22.5" y="611.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="25.5" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (60 samples, 0.07%)</title><rect x="22.7" y="595.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="25.7" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (51 samples, 0.06%)</title><rect x="22.7" y="579.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="25.7" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (45 samples, 0.05%)</title><rect x="22.8" y="563.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="25.8" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (34 samples, 0.04%)</title><rect x="23.0" y="547.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="26.0" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (25 samples, 0.03%)</title><rect x="23.1" y="531.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="26.1" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="23.1" y="515.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="26.1" y="526.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="23.1" y="499.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="26.1" y="510.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.02%)</title><rect x="23.1" y="483.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="26.1" y="494.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=441327] (5,932 samples, 6.58%)</title><rect x="24.1" y="1075.0" width="77.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="27.1" y="1086.0">[C2 Compi..</text>
</g>
<g>
<title>start_thread (5,888 samples, 6.53%)</title><rect x="24.7" y="1059.0" width="77.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="27.7" y="1070.0">start_thr..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,888 samples, 6.53%)</title><rect x="24.7" y="1043.0" width="77.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="27.7" y="1054.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,888 samples, 6.53%)</title><rect x="24.7" y="1027.0" width="77.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="27.7" y="1038.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,888 samples, 6.53%)</title><rect x="24.7" y="1011.0" width="77.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.7" y="1022.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,888 samples, 6.53%)</title><rect x="24.7" y="995.0" width="77.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="27.7" y="1006.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,887 samples, 6.53%)</title><rect x="24.7" y="979.0" width="77.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="27.7" y="990.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,883 samples, 6.53%)</title><rect x="24.7" y="963.0" width="77.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.7" y="974.0">/usr/lib..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,877 samples, 6.52%)</title><rect x="24.8" y="947.0" width="76.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="27.8" y="958.0">/usr/lib..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,869 samples, 6.51%)</title><rect x="24.9" y="931.0" width="76.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="27.9" y="942.0">/usr/lib..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,836 samples, 6.47%)</title><rect x="25.1" y="915.0" width="76.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="28.1" y="926.0">/usr/lib..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,587 samples, 6.20%)</title><rect x="28.0" y="899.0" width="73.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="31.0" y="910.0">/usr/lib..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3,864 samples, 4.29%)</title><rect x="50.3" y="883.0" width="50.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="53.3" y="894.0">/usr/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,291 samples, 2.54%)</title><rect x="70.6" y="867.0" width="30.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="73.6" y="878.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,522 samples, 1.69%)</title><rect x="80.6" y="851.0" width="19.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="83.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,177 samples, 1.31%)</title><rect x="85.0" y="835.0" width="15.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="88.0" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,000 samples, 1.11%)</title><rect x="87.3" y="819.0" width="13.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="90.3" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (901 samples, 1.00%)</title><rect x="88.5" y="803.0" width="11.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="91.5" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (834 samples, 0.93%)</title><rect x="89.4" y="787.0" width="10.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="92.4" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (784 samples, 0.87%)</title><rect x="90.0" y="771.0" width="10.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="93.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (743 samples, 0.82%)</title><rect x="90.5" y="755.0" width="9.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="93.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (706 samples, 0.78%)</title><rect x="91.0" y="739.0" width="9.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="94.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (671 samples, 0.74%)</title><rect x="91.4" y="723.0" width="8.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="94.4" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (636 samples, 0.71%)</title><rect x="91.9" y="707.0" width="8.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="94.9" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (597 samples, 0.66%)</title><rect x="92.4" y="691.0" width="7.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="95.4" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (571 samples, 0.63%)</title><rect x="92.7" y="675.0" width="7.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="95.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (552 samples, 0.61%)</title><rect x="92.9" y="659.0" width="7.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="95.9" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (527 samples, 0.58%)</title><rect x="93.3" y="643.0" width="6.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="96.3" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (497 samples, 0.55%)</title><rect x="93.6" y="627.0" width="6.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="96.6" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (474 samples, 0.53%)</title><rect x="93.9" y="611.0" width="6.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="96.9" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (449 samples, 0.50%)</title><rect x="94.3" y="595.0" width="5.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="97.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (423 samples, 0.47%)</title><rect x="94.6" y="579.0" width="5.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="97.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (399 samples, 0.44%)</title><rect x="94.9" y="563.0" width="5.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="97.9" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (373 samples, 0.41%)</title><rect x="95.2" y="547.0" width="4.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="98.2" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (352 samples, 0.39%)</title><rect x="95.4" y="531.0" width="4.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="98.4" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (325 samples, 0.36%)</title><rect x="95.8" y="515.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="98.8" y="526.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (302 samples, 0.33%)</title><rect x="96.1" y="499.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="99.1" y="510.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (288 samples, 0.32%)</title><rect x="96.2" y="483.0" width="3.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="99.2" y="494.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (275 samples, 0.31%)</title><rect x="96.4" y="467.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="99.4" y="478.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (256 samples, 0.28%)</title><rect x="96.6" y="451.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="99.6" y="462.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (231 samples, 0.26%)</title><rect x="96.9" y="435.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="99.9" y="446.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (212 samples, 0.24%)</title><rect x="97.1" y="419.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="100.1" y="430.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (192 samples, 0.21%)</title><rect x="97.4" y="403.0" width="2.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="100.4" y="414.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (176 samples, 0.20%)</title><rect x="97.6" y="387.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="100.6" y="398.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (157 samples, 0.17%)</title><rect x="97.8" y="371.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="100.8" y="382.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (145 samples, 0.16%)</title><rect x="98.0" y="355.0" width="1.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="101.0" y="366.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (133 samples, 0.15%)</title><rect x="98.1" y="339.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="101.1" y="350.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (125 samples, 0.14%)</title><rect x="98.2" y="323.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="101.2" y="334.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (114 samples, 0.13%)</title><rect x="98.4" y="307.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="101.4" y="318.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (105 samples, 0.12%)</title><rect x="98.5" y="291.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="101.5" y="302.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (98 samples, 0.11%)</title><rect x="98.6" y="275.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="101.6" y="286.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (91 samples, 0.10%)</title><rect x="98.7" y="259.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="101.7" y="270.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="98.8" y="243.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="101.8" y="254.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.08%)</title><rect x="98.9" y="227.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="101.9" y="238.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (69 samples, 0.08%)</title><rect x="99.0" y="211.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="102.0" y="222.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (65 samples, 0.07%)</title><rect x="99.0" y="195.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="102.0" y="206.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (56 samples, 0.06%)</title><rect x="99.1" y="179.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="102.1" y="190.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (48 samples, 0.05%)</title><rect x="99.2" y="163.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="102.2" y="174.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (43 samples, 0.05%)</title><rect x="99.3" y="147.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="102.3" y="158.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (40 samples, 0.04%)</title><rect x="99.3" y="131.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="102.3" y="142.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (40 samples, 0.04%)</title><rect x="99.3" y="115.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="102.3" y="126.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (36 samples, 0.04%)</title><rect x="99.4" y="99.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="102.4" y="110.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (27 samples, 0.03%)</title><rect x="99.5" y="83.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="102.5" y="94.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (26 samples, 0.03%)</title><rect x="99.5" y="67.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="102.5" y="78.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (23 samples, 0.03%)</title><rect x="99.5" y="51.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="102.5" y="62.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="99.5" y="35.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="102.5" y="46.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (28 samples, 0.03%)</title><rect x="101.1" y="899.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="104.1" y="910.0"></text>
</g>
<g>
<title>[DestroyJavaVM tid=441317] (10,189 samples, 11.30%)</title><rect x="101.7" y="1075.0" width="133.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="104.7" y="1086.0">[DestroyJavaVM ti..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (114 samples, 0.13%)</title><rect x="101.7" y="1059.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="104.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (112 samples, 0.12%)</title><rect x="101.8" y="1043.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="104.8" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (110 samples, 0.12%)</title><rect x="101.8" y="1027.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="104.8" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (108 samples, 0.12%)</title><rect x="101.8" y="1011.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="104.8" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (23 samples, 0.03%)</title><rect x="101.8" y="995.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="104.8" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="101.8" y="979.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="104.8" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="101.9" y="963.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="104.9" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="101.9" y="947.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="104.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (84 samples, 0.09%)</title><rect x="102.1" y="995.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="105.1" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.cli.ClientMain.&lt;clinit&gt; (32 samples, 0.04%)</title><rect x="103.5" y="1059.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="106.5" y="1070.0"></text>
</g>
<g>
<title>org.slf4j.LoggerFactory.getLogger (30 samples, 0.03%)</title><rect x="103.5" y="1043.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="106.5" y="1054.0"></text>
</g>
<g>
<title>org.slf4j.LoggerFactory.getLogger (30 samples, 0.03%)</title><rect x="103.5" y="1027.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="106.5" y="1038.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerFactory.getLogger (24 samples, 0.03%)</title><rect x="103.6" y="1011.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="106.6" y="1022.0"></text>
</g>
<g>
<title>org.apache.log4j.LogManager.&lt;clinit&gt; (22 samples, 0.02%)</title><rect x="103.6" y="995.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="106.6" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.cli.ClientMain.main (9,975 samples, 11.06%)</title><rect x="103.9" y="1059.0" width="130.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="106.9" y="1070.0">com.turn.ttorren..</text>
</g>
<g>
<title>com.turn.ttorrent.client.SimpleClient.downloadTorrent (9,925 samples, 11.01%)</title><rect x="104.1" y="1043.0" width="129.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.1" y="1054.0">com.turn.ttorren..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.addTorrent (9,903 samples, 10.98%)</title><rect x="104.1" y="1027.0" width="129.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="107.1" y="1038.0">com.turn.ttorren..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.addTorrent (9,902 samples, 10.98%)</title><rect x="104.1" y="1011.0" width="129.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="107.1" y="1022.0">com.turn.ttorren..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.addTorrent (273 samples, 0.30%)</title><rect x="104.1" y="995.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="107.1" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.forceAnnounceAndLogError (270 samples, 0.30%)</title><rect x="104.1" y="979.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="107.1" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.Announce.forceAnnounce (270 samples, 0.30%)</title><rect x="104.1" y="963.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="107.1" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.TrackerClient.announceAllInterfaces (269 samples, 0.30%)</title><rect x="104.1" y="947.0" width="3.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="107.1" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.announce (269 samples, 0.30%)</title><rect x="104.1" y="931.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="107.1" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.sendAnnounce (253 samples, 0.28%)</title><rect x="104.1" y="915.0" width="3.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="107.1" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.sendAnnounce (253 samples, 0.28%)</title><rect x="104.1" y="899.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="107.1" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.openConnectionCheckRedirects (236 samples, 0.26%)</title><rect x="104.4" y="883.0" width="3.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="107.4" y="894.0"></text>
</g>
<g>
<title>java.net.URL.openConnection (88 samples, 0.10%)</title><rect x="104.4" y="867.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="107.4" y="878.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.Handler.openConnection (88 samples, 0.10%)</title><rect x="104.4" y="851.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="107.4" y="862.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.Handler.openConnection (88 samples, 0.10%)</title><rect x="104.4" y="835.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="107.4" y="846.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsURLConnectionImpl.&lt;init&gt; (88 samples, 0.10%)</title><rect x="104.4" y="819.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="107.4" y="830.0"></text>
</g>
<g>
<title>javax.net.ssl.HttpsURLConnection.&lt;init&gt; (85 samples, 0.09%)</title><rect x="104.4" y="803.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="107.4" y="814.0"></text>
</g>
<g>
<title>javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory (85 samples, 0.09%)</title><rect x="104.4" y="787.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="107.4" y="798.0"></text>
</g>
<g>
<title>javax.net.ssl.SSLSocketFactory.getDefault (85 samples, 0.09%)</title><rect x="104.4" y="771.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="107.4" y="782.0"></text>
</g>
<g>
<title>javax.net.ssl.SSLContext.getDefault (84 samples, 0.09%)</title><rect x="104.4" y="755.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="107.4" y="766.0"></text>
</g>
<g>
<title>javax.net.ssl.SSLContext.getInstance (84 samples, 0.09%)</title><rect x="104.4" y="739.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="107.4" y="750.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance.getInstance (84 samples, 0.09%)</title><rect x="104.4" y="723.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="107.4" y="734.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance.getInstance (83 samples, 0.09%)</title><rect x="104.4" y="707.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="107.4" y="718.0"></text>
</g>
<g>
<title>java.security.Provider$Service.newInstance (83 samples, 0.09%)</title><rect x="104.4" y="691.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="107.4" y="702.0"></text>
</g>
<g>
<title>java.security.Provider$Service.getImplClass (37 samples, 0.04%)</title><rect x="104.4" y="675.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="107.4" y="686.0"></text>
</g>
<g>
<title>java.lang.Class.forName (37 samples, 0.04%)</title><rect x="104.4" y="659.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="107.4" y="670.0"></text>
</g>
<g>
<title>java.lang.Class.forName0 (37 samples, 0.04%)</title><rect x="104.4" y="643.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="107.4" y="654.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLContextImpl$AbstractTLSContext.&lt;clinit&gt; (34 samples, 0.04%)</title><rect x="104.4" y="627.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="107.4" y="638.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLContextImpl.getApplicableSupportedCipherSuites (30 samples, 0.03%)</title><rect x="104.4" y="611.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="107.4" y="622.0"></text>
</g>
<g>
<title>sun.security.ssl.CipherSuite.&lt;clinit&gt; (20 samples, 0.02%)</title><rect x="104.4" y="595.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.4" y="606.0"></text>
</g>
<g>
<title>java.security.Provider.newInstanceUtil (46 samples, 0.05%)</title><rect x="104.9" y="675.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="107.9" y="686.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor.newInstance (46 samples, 0.05%)</title><rect x="104.9" y="659.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="107.9" y="670.0"></text>
</g>
<g>
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance (46 samples, 0.05%)</title><rect x="104.9" y="643.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="107.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance (46 samples, 0.05%)</title><rect x="104.9" y="627.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="107.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0 (46 samples, 0.05%)</title><rect x="104.9" y="611.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="107.9" y="622.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLContextImpl$DefaultSSLContext.&lt;init&gt; (46 samples, 0.05%)</title><rect x="104.9" y="595.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="107.9" y="606.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLContextImpl$DefaultManagersHolder.&lt;clinit&gt; (45 samples, 0.05%)</title><rect x="104.9" y="579.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="107.9" y="590.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLContextImpl$DefaultManagersHolder.getTrustManagers (44 samples, 0.05%)</title><rect x="104.9" y="563.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="107.9" y="574.0"></text>
</g>
<g>
<title>javax.net.ssl.TrustManagerFactory.init (44 samples, 0.05%)</title><rect x="104.9" y="547.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="107.9" y="558.0"></text>
</g>
<g>
<title>sun.security.ssl.TrustManagerFactoryImpl.engineInit (44 samples, 0.05%)</title><rect x="104.9" y="531.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.9" y="542.0"></text>
</g>
<g>
<title>sun.security.ssl.TrustStoreManager.getTrustedCerts (44 samples, 0.05%)</title><rect x="104.9" y="515.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="107.9" y="526.0"></text>
</g>
<g>
<title>sun.security.ssl.TrustStoreManager$TrustAnchorManager.getTrustedCerts (43 samples, 0.05%)</title><rect x="104.9" y="499.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="107.9" y="510.0"></text>
</g>
<g>
<title>sun.security.ssl.TrustStoreManager$TrustAnchorManager.loadKeyStore (41 samples, 0.05%)</title><rect x="104.9" y="483.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="107.9" y="494.0"></text>
</g>
<g>
<title>java.security.KeyStore.load (40 samples, 0.04%)</title><rect x="104.9" y="467.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="107.9" y="478.0"></text>
</g>
<g>
<title>sun.security.util.KeyStoreDelegator.engineLoad (40 samples, 0.04%)</title><rect x="104.9" y="451.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="107.9" y="462.0"></text>
</g>
<g>
<title>sun.security.provider.JavaKeyStore.engineLoad (39 samples, 0.04%)</title><rect x="104.9" y="435.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="107.9" y="446.0"></text>
</g>
<g>
<title>java.security.cert.CertificateFactory.generateCertificate (39 samples, 0.04%)</title><rect x="104.9" y="419.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="107.9" y="430.0"></text>
</g>
<g>
<title>sun.security.provider.X509Factory.engineGenerateCertificate (39 samples, 0.04%)</title><rect x="104.9" y="403.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="107.9" y="414.0"></text>
</g>
<g>
<title>sun.security.x509.X509CertImpl.&lt;init&gt; (35 samples, 0.04%)</title><rect x="105.0" y="387.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="108.0" y="398.0"></text>
</g>
<g>
<title>sun.security.x509.X509CertImpl.parse (35 samples, 0.04%)</title><rect x="105.0" y="371.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="108.0" y="382.0"></text>
</g>
<g>
<title>sun.security.x509.X509CertInfo.&lt;init&gt; (33 samples, 0.04%)</title><rect x="105.0" y="355.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="108.0" y="366.0"></text>
</g>
<g>
<title>sun.security.x509.X509CertInfo.parse (33 samples, 0.04%)</title><rect x="105.0" y="339.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="108.0" y="350.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode (148 samples, 0.16%)</title><rect x="105.5" y="867.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.5" y="878.0"></text>
</g>
<g>
<title>java.net.HttpURLConnection.getResponseCode (148 samples, 0.16%)</title><rect x="105.5" y="851.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="108.5" y="862.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getInputStream (148 samples, 0.16%)</title><rect x="105.5" y="835.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="108.5" y="846.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getInputStream0 (148 samples, 0.16%)</title><rect x="105.5" y="819.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="108.5" y="830.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect (141 samples, 0.16%)</title><rect x="105.6" y="803.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="108.6" y="814.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.plainConnect (32 samples, 0.04%)</title><rect x="105.6" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="108.6" y="798.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.plainConnect0 (32 samples, 0.04%)</title><rect x="105.6" y="771.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="108.6" y="782.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient (32 samples, 0.04%)</title><rect x="105.6" y="755.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="108.6" y="766.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsClient.New (31 samples, 0.03%)</title><rect x="105.6" y="739.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.6" y="750.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsClient.&lt;init&gt; (31 samples, 0.03%)</title><rect x="105.6" y="723.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="108.6" y="734.0"></text>
</g>
<g>
<title>sun.net.www.http.HttpClient.openServer (31 samples, 0.03%)</title><rect x="105.6" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>sun.net.www.http.HttpClient.openServer (31 samples, 0.03%)</title><rect x="105.6" y="691.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.6" y="702.0"></text>
</g>
<g>
<title>sun.net.NetworkClient.doConnect (31 samples, 0.03%)</title><rect x="105.6" y="675.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="108.6" y="686.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.connect (25 samples, 0.03%)</title><rect x="105.7" y="659.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="108.7" y="670.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.doneConnect (24 samples, 0.03%)</title><rect x="105.7" y="643.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.7" y="654.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.useImplicitHost (23 samples, 0.03%)</title><rect x="105.7" y="627.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="108.7" y="638.0"></text>
</g>
<g>
<title>sun.security.ssl.Utilities.addToSNIServerNameList (23 samples, 0.03%)</title><rect x="105.7" y="611.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.7" y="622.0"></text>
</g>
<g>
<title>sun.security.ssl.Utilities.rawToSNIHostName (23 samples, 0.03%)</title><rect x="105.7" y="595.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="108.7" y="606.0"></text>
</g>
<g>
<title>javax.net.ssl.SNIHostName.&lt;init&gt; (22 samples, 0.02%)</title><rect x="105.7" y="579.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="108.7" y="590.0"></text>
</g>
<g>
<title>java.net.IDN.&lt;clinit&gt; (21 samples, 0.02%)</title><rect x="105.8" y="563.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="108.8" y="574.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsClient.afterConnect (109 samples, 0.12%)</title><rect x="106.0" y="787.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="109.0" y="798.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.startHandshake (107 samples, 0.12%)</title><rect x="106.1" y="771.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="109.1" y="782.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.readHandshakeRecord (64 samples, 0.07%)</title><rect x="106.1" y="755.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="109.1" y="766.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.decode (64 samples, 0.07%)</title><rect x="106.1" y="739.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="109.1" y="750.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLTransport.decode (64 samples, 0.07%)</title><rect x="106.1" y="723.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="109.1" y="734.0"></text>
</g>
<g>
<title>sun.security.ssl.TransportContext.dispatch (63 samples, 0.07%)</title><rect x="106.1" y="707.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="109.1" y="718.0"></text>
</g>
<g>
<title>sun.security.ssl.HandshakeContext.dispatch (63 samples, 0.07%)</title><rect x="106.1" y="691.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="109.1" y="702.0"></text>
</g>
<g>
<title>sun.security.ssl.HandshakeContext.dispatch (63 samples, 0.07%)</title><rect x="106.1" y="675.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="109.1" y="686.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLHandshake.consume (63 samples, 0.07%)</title><rect x="106.1" y="659.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="109.1" y="670.0"></text>
</g>
<g>
<title>sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume (36 samples, 0.04%)</title><rect x="106.1" y="643.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="109.1" y="654.0"></text>
</g>
<g>
<title>sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate (36 samples, 0.04%)</title><rect x="106.1" y="627.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="109.1" y="638.0"></text>
</g>
<g>
<title>sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts (35 samples, 0.04%)</title><rect x="106.1" y="611.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.1" y="622.0"></text>
</g>
<g>
<title>sun.security.ssl.X509TrustManagerImpl.checkServerTrusted (35 samples, 0.04%)</title><rect x="106.1" y="595.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="109.1" y="606.0"></text>
</g>
<g>
<title>sun.security.ssl.X509TrustManagerImpl.checkTrusted (35 samples, 0.04%)</title><rect x="106.1" y="579.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="109.1" y="590.0"></text>
</g>
<g>
<title>sun.security.ssl.ServerHelloDone$ServerHelloDoneConsumer.consume (22 samples, 0.02%)</title><rect x="106.6" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="109.6" y="654.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLHandshake.produce (22 samples, 0.02%)</title><rect x="106.6" y="627.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="109.6" y="638.0"></text>
</g>
<g>
<title>sun.security.ssl.TransportContext.kickstart (43 samples, 0.05%)</title><rect x="106.9" y="755.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="109.9" y="766.0"></text>
</g>
<g>
<title>sun.security.ssl.ClientHandshakeContext.kickstart (33 samples, 0.04%)</title><rect x="107.0" y="739.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="110.0" y="750.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLHandshake.kickstart (33 samples, 0.04%)</title><rect x="107.0" y="723.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="110.0" y="734.0"></text>
</g>
<g>
<title>sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce (33 samples, 0.04%)</title><rect x="107.0" y="707.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="110.0" y="718.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLExtensions.produce (26 samples, 0.03%)</title><rect x="107.1" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="110.1" y="702.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLExtension.produce (26 samples, 0.03%)</title><rect x="107.1" y="675.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="110.1" y="686.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FairPieceStorageFactory.createStorage (9,616 samples, 10.67%)</title><rect x="107.8" y="995.0" width="125.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="110.8" y="1006.0">com.turn.ttorre..</text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.read (259 samples, 0.29%)</title><rect x="108.0" y="979.0" width="3.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="111.0" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.read (254 samples, 0.28%)</title><rect x="108.0" y="963.0" width="3.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="111.0" y="974.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.read (249 samples, 0.28%)</title><rect x="108.1" y="947.0" width="3.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="111.1" y="958.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.readInternal (248 samples, 0.28%)</title><rect x="108.1" y="931.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="111.1" y="942.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.read (236 samples, 0.26%)</title><rect x="108.2" y="915.0" width="3.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="111.2" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (218 samples, 0.24%)</title><rect x="108.3" y="899.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="111.3" y="910.0"></text>
</g>
<g>
<title>java.nio.DirectByteBuffer.get (215 samples, 0.24%)</title><rect x="108.3" y="883.0" width="2.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="111.3" y="894.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.copyMemory (215 samples, 0.24%)</title><rect x="108.3" y="867.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="111.3" y="878.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.copyMemory0 (214 samples, 0.24%)</title><rect x="108.3" y="851.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="111.3" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (214 samples, 0.24%)</title><rect x="108.3" y="835.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="111.3" y="846.0"></text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (9,316 samples, 10.33%)</title><rect x="111.4" y="979.0" width="121.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="114.4" y="990.0">com.turn.ttorre..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (9,316 samples, 10.33%)</title><rect x="111.4" y="963.0" width="121.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="114.4" y="974.0">org.apache.comm..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (9,316 samples, 10.33%)</title><rect x="111.4" y="947.0" width="121.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="114.4" y="958.0">org.apache.comm..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (9,261 samples, 10.27%)</title><rect x="111.4" y="931.0" width="121.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="114.4" y="942.0">java.security.M..</text>
</g>
<g>
<title>java.security.MessageDigest.update (9,257 samples, 10.27%)</title><rect x="111.4" y="915.0" width="121.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="114.4" y="926.0">java.security.M..</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (9,257 samples, 10.27%)</title><rect x="111.4" y="899.0" width="121.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="114.4" y="910.0">java.security.M..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (9,257 samples, 10.27%)</title><rect x="111.4" y="883.0" width="121.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="114.4" y="894.0">sun.security.pr..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (9,257 samples, 10.27%)</title><rect x="111.4" y="867.0" width="121.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="114.4" y="878.0">sun.security.pr..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (9,227 samples, 10.23%)</title><rect x="111.6" y="851.0" width="120.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="114.6" y="862.0">sun.security.pr..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (9,201 samples, 10.21%)</title><rect x="111.8" y="835.0" width="120.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="114.8" y="846.0">sun.security.pr..</text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (20 samples, 0.02%)</title><rect x="112.0" y="819.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="115.0" y="830.0"></text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (8,784 samples, 9.74%)</title><rect x="112.2" y="819.0" width="115.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="115.2" y="830.0">sun.security.p..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (385 samples, 0.43%)</title><rect x="227.2" y="819.0" width="5.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="230.2" y="830.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (367 samples, 0.41%)</title><rect x="227.4" y="803.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="230.4" y="814.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (55 samples, 0.06%)</title><rect x="232.6" y="931.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="235.6" y="942.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (55 samples, 0.06%)</title><rect x="232.6" y="915.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="235.6" y="926.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (55 samples, 0.06%)</title><rect x="232.6" y="899.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="235.6" y="910.0"></text>
</g>
<g>
<title>java.security.Security.getImpl (52 samples, 0.06%)</title><rect x="232.6" y="883.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="235.6" y="894.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance.getInstance (48 samples, 0.05%)</title><rect x="232.6" y="867.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="235.6" y="878.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance.getInstance (35 samples, 0.04%)</title><rect x="232.6" y="851.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="235.6" y="862.0"></text>
</g>
<g>
<title>java.security.Provider$Service.newInstance (32 samples, 0.04%)</title><rect x="232.7" y="835.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="235.7" y="846.0"></text>
</g>
<g>
<title>java.security.Provider.newInstanceUtil (30 samples, 0.03%)</title><rect x="232.7" y="819.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="235.7" y="830.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor.newInstance (24 samples, 0.03%)</title><rect x="232.8" y="803.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="235.8" y="814.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.allocate (28 samples, 0.03%)</title><rect x="233.3" y="979.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="236.3" y="990.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.&lt;init&gt; (28 samples, 0.03%)</title><rect x="233.3" y="963.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="236.3" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.03%)</title><rect x="233.3" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="236.3" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.03%)</title><rect x="233.3" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="236.3" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.03%)</title><rect x="233.3" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="236.3" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.03%)</title><rect x="233.3" y="899.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="236.3" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (20 samples, 0.02%)</title><rect x="233.4" y="883.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="236.4" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.start (21 samples, 0.02%)</title><rect x="233.7" y="1027.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="236.7" y="1038.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.start (20 samples, 0.02%)</title><rect x="233.7" y="1011.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="236.7" y="1022.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.start (20 samples, 0.02%)</title><rect x="233.7" y="995.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="236.7" y="1006.0"></text>
</g>
<g>
<title>org.apache.log4j.PatternLayout.&lt;init&gt; (24 samples, 0.03%)</title><rect x="234.2" y="1043.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="237.2" y="1054.0"></text>
</g>
<g>
<title>org.apache.log4j.helpers.PatternParser.parse (20 samples, 0.02%)</title><rect x="234.2" y="1027.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="237.2" y="1038.0"></text>
</g>
<g>
<title>org.apache.log4j.helpers.PatternParser.finalizeConverter (20 samples, 0.02%)</title><rect x="234.2" y="1011.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="237.2" y="1022.0"></text>
</g>
<g>
<title>org.apache.log4j.helpers.ISO8601DateFormat.&lt;init&gt; (20 samples, 0.02%)</title><rect x="234.2" y="995.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="237.2" y="1006.0"></text>
</g>
<g>
<title>org.apache.log4j.helpers.AbsoluteTimeDateFormat.&lt;init&gt; (20 samples, 0.02%)</title><rect x="234.2" y="979.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="237.2" y="990.0"></text>
</g>
<g>
<title>sun.launcher.LauncherHelper.checkAndLoadMain (31 samples, 0.03%)</title><rect x="234.5" y="1059.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="237.5" y="1070.0"></text>
</g>
<g>
<title>sun.launcher.LauncherHelper.loadMainClass (30 samples, 0.03%)</title><rect x="234.5" y="1043.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="237.5" y="1054.0"></text>
</g>
<g>
<title>sun.launcher.LauncherHelper.getMainClassFromJar (24 samples, 0.03%)</title><rect x="234.6" y="1027.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="237.6" y="1038.0"></text>
</g>
<g>
<title>java.util.jar.JarFile.&lt;init&gt; (21 samples, 0.02%)</title><rect x="234.6" y="1011.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="237.6" y="1022.0"></text>
</g>
<g>
<title>java.util.jar.JarFile.&lt;init&gt; (21 samples, 0.02%)</title><rect x="234.6" y="995.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="237.6" y="1006.0"></text>
</g>
<g>
<title>java.util.jar.JarFile.&lt;init&gt; (21 samples, 0.02%)</title><rect x="234.6" y="979.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="237.6" y="990.0"></text>
</g>
<g>
<title>java.util.zip.ZipFile.&lt;init&gt; (21 samples, 0.02%)</title><rect x="234.6" y="963.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="237.6" y="974.0"></text>
</g>
<g>
<title>java.util.zip.ZipFile.&lt;init&gt; (21 samples, 0.02%)</title><rect x="234.6" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="237.6" y="958.0"></text>
</g>
<g>
<title>[G1 Conc#0 tid=441320] (482 samples, 0.53%)</title><rect x="235.1" y="1075.0" width="6.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="238.1" y="1086.0"></text>
</g>
<g>
<title>start_thread (481 samples, 0.53%)</title><rect x="235.1" y="1059.0" width="6.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="238.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (481 samples, 0.53%)</title><rect x="235.1" y="1043.0" width="6.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="238.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (481 samples, 0.53%)</title><rect x="235.1" y="1027.0" width="6.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="238.1" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (481 samples, 0.53%)</title><rect x="235.1" y="1011.0" width="6.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="238.1" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (480 samples, 0.53%)</title><rect x="235.1" y="995.0" width="6.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="238.1" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (468 samples, 0.52%)</title><rect x="235.3" y="979.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="238.3" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (398 samples, 0.44%)</title><rect x="236.2" y="963.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="239.2" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (261 samples, 0.29%)</title><rect x="237.8" y="947.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="240.8" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (135 samples, 0.15%)</title><rect x="239.1" y="931.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="242.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (58 samples, 0.06%)</title><rect x="240.1" y="915.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="243.1" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (21 samples, 0.02%)</title><rect x="240.9" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="243.9" y="942.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=441318] (281 samples, 0.31%)</title><rect x="241.4" y="1075.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="244.4" y="1086.0"></text>
</g>
<g>
<title>start_thread (271 samples, 0.30%)</title><rect x="241.5" y="1059.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="244.5" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (271 samples, 0.30%)</title><rect x="241.5" y="1043.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="244.5" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (271 samples, 0.30%)</title><rect x="241.5" y="1027.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="244.5" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (271 samples, 0.30%)</title><rect x="241.5" y="1011.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="244.5" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (270 samples, 0.30%)</title><rect x="241.5" y="995.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="244.5" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (268 samples, 0.30%)</title><rect x="241.5" y="979.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="244.5" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (255 samples, 0.28%)</title><rect x="241.7" y="963.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="244.7" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (132 samples, 0.15%)</title><rect x="243.3" y="947.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="246.3" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (109 samples, 0.12%)</title><rect x="243.6" y="931.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="246.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (99 samples, 0.11%)</title><rect x="243.7" y="915.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="246.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (94 samples, 0.10%)</title><rect x="243.8" y="899.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="246.8" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.08%)</title><rect x="244.1" y="883.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="247.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (38 samples, 0.04%)</title><rect x="244.5" y="867.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="247.5" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (23 samples, 0.03%)</title><rect x="244.7" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="247.7" y="862.0"></text>
</g>
<g>
<title>[Sweeper thread tid=441329] (23 samples, 0.03%)</title><rect x="245.1" y="1075.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="248.1" y="1086.0"></text>
</g>
<g>
<title>start_thread (22 samples, 0.02%)</title><rect x="245.1" y="1059.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="248.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="245.1" y="1043.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="248.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="245.1" y="1027.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="248.1" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="245.1" y="1011.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="248.1" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="245.1" y="995.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="248.1" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="245.1" y="979.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="248.1" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="245.1" y="963.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="248.1" y="974.0"></text>
</g>
<g>
<title>[VM Thread tid=441323] (105 samples, 0.12%)</title><rect x="245.4" y="1075.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="248.4" y="1086.0"></text>
</g>
<g>
<title>start_thread (84 samples, 0.09%)</title><rect x="245.7" y="1059.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="248.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (84 samples, 0.09%)</title><rect x="245.7" y="1043.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="248.7" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (84 samples, 0.09%)</title><rect x="245.7" y="1027.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="248.7" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (84 samples, 0.09%)</title><rect x="245.7" y="1011.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="248.7" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (84 samples, 0.09%)</title><rect x="245.7" y="995.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="248.7" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (83 samples, 0.09%)</title><rect x="245.7" y="979.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="248.7" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.08%)</title><rect x="245.8" y="963.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="248.8" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (69 samples, 0.08%)</title><rect x="245.9" y="947.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="248.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (64 samples, 0.07%)</title><rect x="245.9" y="931.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="248.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (56 samples, 0.06%)</title><rect x="246.0" y="915.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="249.0" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.05%)</title><rect x="246.1" y="899.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (26 samples, 0.03%)</title><rect x="246.4" y="883.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="249.4" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.02%)</title><rect x="246.4" y="867.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="249.4" y="878.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=441335] (17,901 samples, 19.86%)</title><rect x="246.8" y="1075.0" width="234.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="249.8" y="1086.0">[pool-1-thread-1 tid=441335]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (334 samples, 0.37%)</title><rect x="246.8" y="1059.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="249.8" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (301 samples, 0.33%)</title><rect x="247.2" y="1043.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="250.2" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (286 samples, 0.32%)</title><rect x="247.4" y="1027.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="250.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (270 samples, 0.30%)</title><rect x="247.6" y="1011.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="250.6" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (175 samples, 0.19%)</title><rect x="247.8" y="995.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="250.8" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (148 samples, 0.16%)</title><rect x="248.1" y="979.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="251.1" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (93 samples, 0.10%)</title><rect x="248.8" y="963.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="251.8" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (65 samples, 0.07%)</title><rect x="249.1" y="947.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="252.1" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (56 samples, 0.06%)</title><rect x="249.2" y="931.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="252.2" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (48 samples, 0.05%)</title><rect x="249.3" y="915.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="252.3" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (31 samples, 0.03%)</title><rect x="249.6" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="252.6" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (77 samples, 0.09%)</title><rect x="250.1" y="995.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="253.1" y="1006.0"></text>
</g>
<g>
<title>[not_walkable_Java] (97 samples, 0.11%)</title><rect x="251.2" y="1059.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="254.2" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (97 samples, 0.11%)</title><rect x="251.2" y="1043.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="254.2" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (86 samples, 0.10%)</title><rect x="251.4" y="1027.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="254.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="251.4" y="1011.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="254.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (63 samples, 0.07%)</title><rect x="251.6" y="995.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="254.6" y="1006.0"></text>
</g>
<g>
<title>[unknown_Java] (114 samples, 0.13%)</title><rect x="252.5" y="1059.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="255.5" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (85 samples, 0.09%)</title><rect x="252.8" y="1043.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="255.8" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (31 samples, 0.03%)</title><rect x="253.5" y="1027.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="256.5" y="1038.0"></text>
</g>
<g>
<title>[vdso] (28 samples, 0.03%)</title><rect x="253.6" y="1011.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="256.6" y="1022.0"></text>
</g>
<g>
<title>java.lang.Thread.run (17,345 samples, 19.24%)</title><rect x="254.1" y="1059.0" width="227.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="257.1" y="1070.0">java.lang.Thread.run</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (17,345 samples, 19.24%)</title><rect x="254.1" y="1043.0" width="227.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="257.1" y="1054.0">java.util.concurrent.ThreadPoo..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (17,345 samples, 19.24%)</title><rect x="254.1" y="1027.0" width="227.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="257.1" y="1038.0">java.util.concurrent.ThreadPoo..</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (17,345 samples, 19.24%)</title><rect x="254.1" y="1011.0" width="227.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="257.1" y="1022.0">java.util.concurrent.FutureTas..</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (17,345 samples, 19.24%)</title><rect x="254.1" y="995.0" width="227.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="257.1" y="1006.0">java.util.concurrent.Executors..</text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.run (17,343 samples, 19.24%)</title><rect x="254.1" y="979.0" width="227.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="257.1" y="990.0">com.turn.ttorrent.network.Conn..</text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.connectToPeersFromQueue (202 samples, 0.22%)</title><rect x="258.7" y="963.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="261.7" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.processWriteTasks (35 samples, 0.04%)</title><rect x="259.8" y="947.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="262.8" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.poll (55 samples, 0.06%)</title><rect x="260.3" y="947.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="263.3" y="958.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectorImpl.select (24 samples, 0.03%)</title><rect x="261.0" y="947.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="264.0" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.needRunCleanup (144 samples, 0.16%)</title><rect x="261.4" y="963.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="264.4" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (53 samples, 0.06%)</title><rect x="262.0" y="947.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="265.0" y="958.0"></text>
</g>
<g>
<title>gettimeofday (41 samples, 0.05%)</title><rect x="262.2" y="931.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="265.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (37 samples, 0.04%)</title><rect x="262.3" y="915.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="265.3" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.processSelectedKeys (28 samples, 0.03%)</title><rect x="262.7" y="947.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="265.7" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.processSelectedKeys (7,199 samples, 7.99%)</title><rect x="263.2" y="963.0" width="94.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="266.2" y="974.0">com.turn.tt..</text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.processSelectedKey (6,488 samples, 7.20%)</title><rect x="263.8" y="947.0" width="85.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="266.8" y="958.0">com.turn.t..</text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.AcceptableKeyProcessor.accept (30 samples, 0.03%)</title><rect x="265.2" y="931.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="268.2" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessor.processSelected (244 samples, 0.27%)</title><rect x="265.6" y="931.0" width="3.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="268.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (85 samples, 0.09%)</title><rect x="265.6" y="915.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="268.6" y="926.0"></text>
</g>
<g>
<title>gettimeofday (71 samples, 0.08%)</title><rect x="265.8" y="899.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="268.8" y="910.0"></text>
</g>
<g>
<title>[vdso] (62 samples, 0.07%)</title><rect x="265.9" y="883.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="268.9" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.KeyProcessorUtil.getAttachmentAsTimeoutOrNull (35 samples, 0.04%)</title><rect x="266.9" y="915.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="269.9" y="926.0"></text>
</g>
<g>
<title>gettimeofday (101 samples, 0.11%)</title><rect x="267.4" y="915.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="270.4" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.ConnectableKeyProcessor.accept (27 samples, 0.03%)</title><rect x="268.7" y="931.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="271.7" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.InvalidKeyProcessor.accept (83 samples, 0.09%)</title><rect x="269.2" y="931.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="272.2" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.ReadableKeyProcessor.accept (34 samples, 0.04%)</title><rect x="270.3" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="273.3" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.ReadableKeyProcessor.process (5,287 samples, 5.86%)</title><rect x="270.7" y="931.0" width="69.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="273.7" y="942.0">com.tur..</text>
</g>
<g>
<title>com.turn.ttorrent.client.network.OutgoingConnectionListener.onNewDataAvailable (5,153 samples, 5.72%)</title><rect x="271.3" y="915.0" width="67.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="274.3" y="926.0">com.tur..</text>
</g>
<g>
<title>com.turn.ttorrent.client.network.HandshakeReceiver.processAndGetNext (29 samples, 0.03%)</title><rect x="271.5" y="899.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="274.5" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver.processAndGetNext (5,110 samples, 5.67%)</title><rect x="271.8" y="899.0" width="66.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="274.8" y="910.0">com.tur..</text>
</g>
<g>
<title>com.turn.ttorrent.client.PeersStorage.getSharingPeer (46 samples, 0.05%)</title><rect x="274.1" y="883.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="277.1" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap.get (34 samples, 0.04%)</title><rect x="274.3" y="867.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="277.3" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.common.PeerUID.hashCode (26 samples, 0.03%)</title><rect x="274.4" y="851.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="277.4" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.TorrentsStorage.getTorrent (93 samples, 0.10%)</title><rect x="274.7" y="883.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="277.7" y="894.0"></text>
</g>
<g>
<title>java.util.HashMap.get (51 samples, 0.06%)</title><rect x="274.9" y="867.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="277.9" y="878.0"></text>
</g>
<g>
<title>java.util.HashMap.getNode (44 samples, 0.05%)</title><rect x="274.9" y="851.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="277.9" y="862.0"></text>
</g>
<g>
<title>java.lang.String.equals (39 samples, 0.04%)</title><rect x="275.0" y="835.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="278.0" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock (23 samples, 0.03%)</title><rect x="275.6" y="867.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="278.6" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared (23 samples, 0.03%)</title><rect x="275.6" y="851.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="278.6" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync.tryAcquireShared (23 samples, 0.03%)</title><rect x="275.6" y="835.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="278.6" y="846.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.TorrentsStorage.hasTorrent (55 samples, 0.06%)</title><rect x="276.0" y="883.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="279.0" y="894.0"></text>
</g>
<g>
<title>java.util.HashMap.containsKey (30 samples, 0.03%)</title><rect x="276.0" y="867.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="279.0" y="878.0"></text>
</g>
<g>
<title>java.util.HashMap.getNode (22 samples, 0.02%)</title><rect x="276.0" y="851.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="279.0" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.ShutdownAndRemovePeerProcessor.&lt;init&gt; (41 samples, 0.05%)</title><rect x="276.7" y="883.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="279.7" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.ShutdownAndRemovePeerProcessor.processAndGetNext (21 samples, 0.02%)</title><rect x="277.2" y="883.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="280.2" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.ShutdownAndRemovePeerProcessor.removePeer (21 samples, 0.02%)</title><rect x="277.2" y="867.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="280.2" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.unbind (21 samples, 0.02%)</title><rect x="277.2" y="851.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="280.2" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerDisconnected (20 samples, 0.02%)</title><rect x="277.2" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="280.2" y="846.0"></text>
</g>
<g>
<title>com.turn.ttorrent.common.protocol.PeerMessage.parse (46 samples, 0.05%)</title><rect x="277.5" y="883.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="280.5" y="894.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.allocate (132 samples, 0.15%)</title><rect x="278.5" y="883.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.5" y="894.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.&lt;init&gt; (128 samples, 0.14%)</title><rect x="278.5" y="867.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.5" y="878.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.&lt;init&gt; (77 samples, 0.09%)</title><rect x="279.2" y="851.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="282.2" y="862.0"></text>
</g>
<g>
<title>java.nio.Buffer.&lt;init&gt; (49 samples, 0.05%)</title><rect x="279.4" y="835.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="282.4" y="846.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (37 samples, 0.04%)</title><rect x="279.5" y="819.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="282.5" y="830.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (29 samples, 0.03%)</title><rect x="279.6" y="803.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="282.6" y="814.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.wrap (46 samples, 0.05%)</title><rect x="280.6" y="883.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="283.6" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (29 samples, 0.03%)</title><rect x="280.8" y="867.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="283.8" y="878.0"></text>
</g>
<g>
<title>java.util.Arrays.copyOf (56 samples, 0.06%)</title><rect x="281.6" y="883.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="284.6" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.AbstractExecutorService.submit (803 samples, 0.89%)</title><rect x="282.3" y="883.0" width="10.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="285.3" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.execute (798 samples, 0.89%)</title><rect x="282.4" y="867.0" width="10.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="285.4" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (792 samples, 0.88%)</title><rect x="282.4" y="851.0" width="10.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="285.4" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (685 samples, 0.76%)</title><rect x="283.1" y="835.0" width="9.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="286.1" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (77 samples, 0.09%)</title><rect x="283.1" y="819.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="286.1" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal (28 samples, 0.03%)</title><rect x="283.1" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="286.1" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal (20 samples, 0.02%)</title><rect x="283.2" y="787.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="286.2" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.isHeldExclusively (48 samples, 0.05%)</title><rect x="283.5" y="803.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="286.5" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lock (33 samples, 0.04%)</title><rect x="284.1" y="819.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="287.1" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (29 samples, 0.03%)</title><rect x="284.2" y="803.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="287.2" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (572 samples, 0.63%)</title><rect x="284.6" y="819.0" width="7.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="287.6" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (569 samples, 0.63%)</title><rect x="284.6" y="803.0" width="7.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="287.6" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (565 samples, 0.63%)</title><rect x="284.7" y="787.0" width="7.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="287.7" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (563 samples, 0.62%)</title><rect x="284.7" y="771.0" width="7.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="287.7" y="782.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (563 samples, 0.62%)</title><rect x="284.7" y="755.0" width="7.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="287.7" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (338 samples, 0.37%)</title><rect x="284.9" y="739.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="287.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (138 samples, 0.15%)</title><rect x="286.5" y="723.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="289.5" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (56 samples, 0.06%)</title><rect x="288.5" y="723.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="291.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (171 samples, 0.19%)</title><rect x="289.3" y="739.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="292.3" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lock (32 samples, 0.04%)</title><rect x="292.2" y="835.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="295.2" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (32 samples, 0.04%)</title><rect x="292.2" y="819.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="295.2" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire (32 samples, 0.04%)</title><rect x="292.2" y="803.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="295.2" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire (32 samples, 0.04%)</title><rect x="292.2" y="787.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="295.2" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread (21 samples, 0.02%)</title><rect x="292.2" y="771.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="295.2" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (20 samples, 0.02%)</title><rect x="292.2" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="295.2" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (585 samples, 0.65%)</title><rect x="292.9" y="883.0" width="7.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="295.9" y="894.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (216 samples, 0.24%)</title><rect x="300.6" y="883.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="303.6" y="894.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.isTraceEnabled (184 samples, 0.20%)</title><rect x="301.0" y="867.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="304.0" y="878.0"></text>
</g>
<g>
<title>org.apache.log4j.Logger.isTraceEnabled (153 samples, 0.17%)</title><rect x="301.5" y="851.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="304.5" y="862.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.getEffectiveLevel (62 samples, 0.07%)</title><rect x="302.4" y="835.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="305.4" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketChannelImpl.read (2,695 samples, 2.99%)</title><rect x="303.5" y="883.0" width="35.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="306.5" y="894.0">sun..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lock (66 samples, 0.07%)</title><rect x="304.8" y="867.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="307.8" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (63 samples, 0.07%)</title><rect x="304.8" y="851.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="307.8" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire (60 samples, 0.07%)</title><rect x="304.8" y="835.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="307.8" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire (60 samples, 0.07%)</title><rect x="304.8" y="819.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="307.8" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState (28 samples, 0.03%)</title><rect x="305.2" y="803.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="308.2" y="814.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LII_Z (28 samples, 0.03%)</title><rect x="305.2" y="787.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="308.2" y="798.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.compareAndSet (28 samples, 0.03%)</title><rect x="305.2" y="771.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="308.2" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (412 samples, 0.46%)</title><rect x="305.6" y="867.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.6" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (411 samples, 0.46%)</title><rect x="305.6" y="851.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="308.6" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (359 samples, 0.40%)</title><rect x="305.9" y="835.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="308.9" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.tryRelease (31 samples, 0.03%)</title><rect x="310.6" y="835.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="313.6" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.read (2,110 samples, 2.34%)</title><rect x="311.1" y="867.0" width="27.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="314.1" y="878.0">s..</text>
</g>
<g>
<title>sun.nio.ch.IOUtil.read (2,106 samples, 2.34%)</title><rect x="311.1" y="851.0" width="27.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="314.1" y="862.0">s..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (678 samples, 0.75%)</title><rect x="312.6" y="835.0" width="8.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="315.6" y="846.0"></text>
</g>
<g>
<title>java.nio.DirectByteBuffer.get (649 samples, 0.72%)</title><rect x="313.0" y="819.0" width="8.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="316.0" y="830.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.get (28 samples, 0.03%)</title><rect x="313.3" y="803.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="316.3" y="814.0"></text>
</g>
<g>
<title>java.nio.MappedByteBuffer.position (542 samples, 0.60%)</title><rect x="313.6" y="803.0" width="7.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="316.6" y="814.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (542 samples, 0.60%)</title><rect x="313.6" y="787.0" width="7.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="316.6" y="798.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (542 samples, 0.60%)</title><rect x="313.6" y="771.0" width="7.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="316.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (423 samples, 0.47%)</title><rect x="313.7" y="755.0" width="5.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="316.7" y="766.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (23 samples, 0.03%)</title><rect x="319.3" y="755.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="322.3" y="766.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (46 samples, 0.05%)</title><rect x="319.8" y="755.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="322.8" y="766.0"></text>
</g>
<g>
<title>unsafe_arraycopy (28 samples, 0.03%)</title><rect x="320.4" y="755.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="323.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.copyMemory (57 samples, 0.06%)</title><rect x="320.7" y="803.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="323.7" y="814.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.copyMemoryChecks (57 samples, 0.06%)</title><rect x="320.7" y="787.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="323.7" y="798.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.checkPrimitivePointer (57 samples, 0.06%)</title><rect x="320.7" y="771.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="323.7" y="782.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.checkPrimitiveArray (57 samples, 0.06%)</title><rect x="320.7" y="755.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="323.7" y="766.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.readIntoNativeBuffer (1,109 samples, 1.23%)</title><rect x="321.5" y="835.0" width="14.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="324.5" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketDispatcher.read (1,053 samples, 1.17%)</title><rect x="322.3" y="819.0" width="13.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="325.3" y="830.0"></text>
</g>
<g>
<title>sun.nio.ch.FileDispatcherImpl.read0 (1,050 samples, 1.16%)</title><rect x="322.3" y="803.0" width="13.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="325.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so (76 samples, 0.08%)</title><rect x="323.8" y="787.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="326.8" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (67 samples, 0.07%)</title><rect x="324.8" y="787.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="327.8" y="798.0"></text>
</g>
<g>
<title>read (781 samples, 0.87%)</title><rect x="325.8" y="787.0" width="10.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="328.8" y="798.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (128 samples, 0.14%)</title><rect x="336.0" y="835.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="339.0" y="846.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (70 samples, 0.08%)</title><rect x="336.2" y="819.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="339.2" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (22 samples, 0.02%)</title><rect x="336.8" y="803.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="339.8" y="814.0"></text>
</g>
<g>
<title>sun.nio.ch.Util$BufferCache.get (45 samples, 0.05%)</title><rect x="337.1" y="819.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="340.1" y="830.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.offerFirstTemporaryDirectBuffer (73 samples, 0.08%)</title><rect x="337.7" y="835.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="340.7" y="846.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (29 samples, 0.03%)</title><rect x="337.8" y="819.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="340.8" y="830.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (30 samples, 0.03%)</title><rect x="338.2" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="341.2" y="830.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (90 samples, 0.10%)</title><rect x="338.7" y="915.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="341.7" y="926.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.isTraceEnabled (90 samples, 0.10%)</title><rect x="338.7" y="899.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="341.7" y="910.0"></text>
</g>
<g>
<title>org.apache.log4j.Logger.isTraceEnabled (80 samples, 0.09%)</title><rect x="338.9" y="883.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="341.9" y="894.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.getEffectiveLevel (75 samples, 0.08%)</title><rect x="338.9" y="867.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="341.9" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver.processAndGetNext (36 samples, 0.04%)</title><rect x="339.4" y="851.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="342.4" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.WritableKeyProcessor.accept (44 samples, 0.05%)</title><rect x="339.9" y="931.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="342.9" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.keyProcessors.WritableKeyProcessor.process (406 samples, 0.45%)</title><rect x="340.5" y="931.0" width="5.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="343.5" y="942.0"></text>
</g>
<g>
<title>java.util.AbstractQueue.remove (39 samples, 0.04%)</title><rect x="340.6" y="915.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="343.6" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.poll (39 samples, 0.04%)</title><rect x="340.6" y="899.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="343.6" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.peek (40 samples, 0.04%)</title><rect x="341.1" y="915.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="344.1" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (32 samples, 0.04%)</title><rect x="341.2" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="344.2" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (27 samples, 0.03%)</title><rect x="341.3" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="344.3" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl.interestOps (20 samples, 0.02%)</title><rect x="341.7" y="915.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="344.7" y="926.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketChannelImpl.write (296 samples, 0.33%)</title><rect x="341.9" y="915.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="344.9" y="926.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (286 samples, 0.32%)</title><rect x="342.1" y="899.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="345.1" y="910.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (286 samples, 0.32%)</title><rect x="342.1" y="883.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="345.1" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.writeFromNativeBuffer (257 samples, 0.29%)</title><rect x="342.3" y="867.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="345.3" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketDispatcher.write (256 samples, 0.28%)</title><rect x="342.3" y="851.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="345.3" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.FileDispatcherImpl.write0 (256 samples, 0.28%)</title><rect x="342.3" y="835.0" width="3.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="345.3" y="846.0"></text>
</g>
<g>
<title>__write (226 samples, 0.25%)</title><rect x="342.7" y="819.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="345.7" y="830.0"></text>
</g>
<g>
<title>itable stub (181 samples, 0.20%)</title><rect x="345.8" y="931.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="348.8" y="942.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (33 samples, 0.04%)</title><rect x="348.8" y="947.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="351.8" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator.next (196 samples, 0.22%)</title><rect x="349.2" y="947.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="352.2" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$HashIterator.nextNode (195 samples, 0.22%)</title><rect x="349.2" y="931.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="352.2" y="942.0"></text>
</g>
<g>
<title>sun.nio.ch.Util$2.clear (110 samples, 0.12%)</title><rect x="351.9" y="947.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="354.9" y="958.0"></text>
</g>
<g>
<title>java.util.HashSet.clear (88 samples, 0.10%)</title><rect x="352.2" y="931.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.2" y="942.0"></text>
</g>
<g>
<title>java.util.HashMap.clear (88 samples, 0.10%)</title><rect x="352.2" y="915.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="355.2" y="926.0"></text>
</g>
<g>
<title>sun.nio.ch.Util$2.iterator (318 samples, 0.35%)</title><rect x="353.3" y="947.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="356.3" y="958.0"></text>
</g>
<g>
<title>java.util.HashSet.iterator (316 samples, 0.35%)</title><rect x="353.3" y="931.0" width="4.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="356.3" y="942.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet.iterator (170 samples, 0.19%)</title><rect x="353.4" y="915.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="356.4" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator.&lt;init&gt; (153 samples, 0.17%)</title><rect x="353.6" y="899.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="356.6" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap$HashIterator.&lt;init&gt; (153 samples, 0.17%)</title><rect x="353.6" y="883.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="356.6" y="894.0"></text>
</g>
<g>
<title>java.util.HashMap.keySet (143 samples, 0.16%)</title><rect x="355.6" y="915.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="358.6" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap.clear (22 samples, 0.02%)</title><rect x="357.2" y="899.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="360.2" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.processWriteTasks (6,053 samples, 6.71%)</title><rect x="357.5" y="963.0" width="79.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="360.5" y="974.0">com.turn...</text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (90 samples, 0.10%)</title><rect x="360.6" y="947.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="363.6" y="958.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (82 samples, 0.09%)</title><rect x="360.7" y="931.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="363.7" y="942.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (59 samples, 0.07%)</title><rect x="361.0" y="915.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="364.0" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (55 samples, 0.06%)</title><rect x="361.0" y="899.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="364.0" y="910.0"></text>
</g>
<g>
<title>java.nio.channels.spi.AbstractSelectableChannel.keyFor (150 samples, 0.17%)</title><rect x="361.8" y="947.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="364.8" y="958.0"></text>
</g>
<g>
<title>java.nio.channels.spi.AbstractSelectableChannel.findKey (63 samples, 0.07%)</title><rect x="362.9" y="931.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="365.9" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Itr.hasNext (48 samples, 0.05%)</title><rect x="363.8" y="947.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="366.8" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Itr.next (3,295 samples, 3.65%)</title><rect x="364.4" y="947.0" width="43.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="367.4" y="958.0">java..</text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.fullyLock (2,682 samples, 2.97%)</title><rect x="372.2" y="931.0" width="35.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="375.2" y="942.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lock (2,681 samples, 2.97%)</title><rect x="372.2" y="915.0" width="35.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="375.2" y="926.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (2,679 samples, 2.97%)</title><rect x="372.2" y="899.0" width="35.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="375.2" y="910.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (117 samples, 0.13%)</title><rect x="372.5" y="883.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="375.5" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt (44 samples, 0.05%)</title><rect x="372.9" y="867.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="375.9" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (41 samples, 0.05%)</title><rect x="372.9" y="851.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="375.9" y="862.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (41 samples, 0.05%)</title><rect x="372.9" y="835.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="375.9" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (27 samples, 0.03%)</title><rect x="373.0" y="819.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="376.0" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire (45 samples, 0.05%)</title><rect x="373.5" y="867.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="376.5" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire (45 samples, 0.05%)</title><rect x="373.5" y="851.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="376.5" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread (28 samples, 0.03%)</title><rect x="373.7" y="835.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="376.7" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (1,601 samples, 1.78%)</title><rect x="374.1" y="883.0" width="20.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="377.1" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.&lt;init&gt; (1,210 samples, 1.34%)</title><rect x="374.8" y="867.0" width="15.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="377.8" y="878.0"></text>
</g>
<g>
<title>java.lang.Object.&lt;init&gt; (555 samples, 0.62%)</title><rect x="375.5" y="851.0" width="7.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="378.5" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LL_V (604 samples, 0.67%)</title><rect x="382.7" y="851.0" width="8.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="385.7" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.setPrevRelaxed (158 samples, 0.18%)</title><rect x="390.7" y="867.0" width="2.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="393.7" y="878.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LL_V (158 samples, 0.18%)</title><rect x="390.7" y="851.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="393.7" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.set (158 samples, 0.18%)</title><rect x="390.7" y="835.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="393.7" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail (175 samples, 0.19%)</title><rect x="392.7" y="867.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="395.7" y="878.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LLL_Z (121 samples, 0.13%)</title><rect x="393.4" y="851.0" width="1.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="396.4" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarForm.getMemberName (73 samples, 0.08%)</title><rect x="393.4" y="835.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="396.4" y="846.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet (47 samples, 0.05%)</title><rect x="394.4" y="835.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="397.4" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire (935 samples, 1.04%)</title><rect x="395.0" y="883.0" width="12.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="398.0" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire (903 samples, 1.00%)</title><rect x="395.4" y="867.0" width="11.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="398.4" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread (235 samples, 0.26%)</title><rect x="403.4" y="851.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="406.4" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState (55 samples, 0.06%)</title><rect x="406.5" y="851.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="409.5" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LII_Z (33 samples, 0.04%)</title><rect x="406.8" y="835.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="409.8" y="846.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.compareAndSet (33 samples, 0.04%)</title><rect x="406.8" y="819.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="409.8" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.fullyUnlock (20 samples, 0.02%)</title><rect x="407.3" y="931.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="410.3" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (20 samples, 0.02%)</title><rect x="407.3" y="915.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="410.3" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (20 samples, 0.02%)</title><rect x="407.3" y="899.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="410.3" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Itr.remove (1,229 samples, 1.36%)</title><rect x="407.5" y="947.0" width="16.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="410.5" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.fullyLock (110 samples, 0.12%)</title><rect x="409.0" y="931.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="412.0" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lock (109 samples, 0.12%)</title><rect x="409.0" y="915.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="412.0" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (108 samples, 0.12%)</title><rect x="409.0" y="899.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="412.0" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (93 samples, 0.10%)</title><rect x="409.2" y="883.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="412.2" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail (42 samples, 0.05%)</title><rect x="409.9" y="867.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="412.9" y="878.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LLL_Z (42 samples, 0.05%)</title><rect x="409.9" y="851.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="412.9" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet (42 samples, 0.05%)</title><rect x="409.9" y="835.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="412.9" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.fullyUnlock (979 samples, 1.09%)</title><rect x="410.4" y="931.0" width="12.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="413.4" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (957 samples, 1.06%)</title><rect x="410.7" y="915.0" width="12.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="413.7" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (957 samples, 1.06%)</title><rect x="410.7" y="899.0" width="12.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="413.7" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (957 samples, 1.06%)</title><rect x="410.7" y="883.0" width="12.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="413.7" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (24 samples, 0.03%)</title><rect x="422.9" y="867.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="425.9" y="878.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (24 samples, 0.03%)</title><rect x="422.9" y="851.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="425.9" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.unlink (27 samples, 0.03%)</title><rect x="423.3" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="426.3" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.iterator (740 samples, 0.82%)</title><rect x="423.6" y="947.0" width="9.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="426.6" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Itr.&lt;init&gt; (649 samples, 0.72%)</title><rect x="423.8" y="931.0" width="8.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="426.8" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.fullyLock (326 samples, 0.36%)</title><rect x="428.0" y="915.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="431.0" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lock (326 samples, 0.36%)</title><rect x="428.0" y="899.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="431.0" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (325 samples, 0.36%)</title><rect x="428.0" y="883.0" width="4.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="431.0" y="894.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (132 samples, 0.15%)</title><rect x="428.0" y="867.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="431.0" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.setHead (42 samples, 0.05%)</title><rect x="428.6" y="851.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="431.6" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire (43 samples, 0.05%)</title><rect x="429.2" y="851.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="432.2" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire (43 samples, 0.05%)</title><rect x="429.2" y="835.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="432.2" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState (41 samples, 0.05%)</title><rect x="429.2" y="819.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="432.2" y="830.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LII_Z (20 samples, 0.02%)</title><rect x="429.5" y="803.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="432.5" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (172 samples, 0.19%)</title><rect x="429.7" y="867.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="432.7" y="878.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.&lt;init&gt; (25 samples, 0.03%)</title><rect x="430.5" y="851.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="433.5" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.setPrevRelaxed (46 samples, 0.05%)</title><rect x="430.8" y="851.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="433.8" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LL_V (46 samples, 0.05%)</title><rect x="430.8" y="835.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="433.8" y="846.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.set (34 samples, 0.04%)</title><rect x="430.9" y="819.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="433.9" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail (45 samples, 0.05%)</title><rect x="431.4" y="851.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="434.4" y="862.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleGuards.guard_LLL_Z (44 samples, 0.05%)</title><rect x="431.4" y="835.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="434.4" y="846.0"></text>
</g>
<g>
<title>java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet (36 samples, 0.04%)</title><rect x="431.5" y="819.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="434.5" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Itr.next (76 samples, 0.08%)</title><rect x="432.3" y="931.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="435.3" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (121 samples, 0.13%)</title><rect x="433.3" y="947.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="436.3" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger.get (28 samples, 0.03%)</title><rect x="434.4" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="437.4" y="942.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (129 samples, 0.14%)</title><rect x="434.9" y="947.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="437.9" y="958.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.isTraceEnabled (125 samples, 0.14%)</title><rect x="435.0" y="931.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="438.0" y="942.0"></text>
</g>
<g>
<title>org.apache.log4j.Logger.isTraceEnabled (125 samples, 0.14%)</title><rect x="435.0" y="915.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="438.0" y="926.0"></text>
</g>
<g>
<title>org.apache.log4j.Hierarchy.isDisabled (20 samples, 0.02%)</title><rect x="435.6" y="899.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="438.6" y="910.0"></text>
</g>
<g>
<title>org.apache.log4j.Priority.isGreaterOrEqual (54 samples, 0.06%)</title><rect x="435.9" y="899.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="438.9" y="910.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (165 samples, 0.18%)</title><rect x="436.9" y="963.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="439.9" y="974.0"></text>
</g>
<g>
<title>java.lang.AbstractStringBuilder.append (133 samples, 0.15%)</title><rect x="437.3" y="947.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="440.3" y="958.0"></text>
</g>
<g>
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal (58 samples, 0.06%)</title><rect x="437.5" y="931.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="440.5" y="942.0"></text>
</g>
<g>
<title>java.lang.Integer.stringSize (40 samples, 0.04%)</title><rect x="438.5" y="931.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="441.5" y="942.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.toString (49 samples, 0.05%)</title><rect x="439.1" y="963.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="442.1" y="974.0"></text>
</g>
<g>
<title>java.lang.StringLatin1.newString (33 samples, 0.04%)</title><rect x="439.3" y="947.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="442.3" y="958.0"></text>
</g>
<g>
<title>java.lang.Thread.currentThread (35 samples, 0.04%)</title><rect x="439.7" y="963.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="442.7" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (121 samples, 0.13%)</title><rect x="440.2" y="963.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="443.2" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (107 samples, 0.12%)</title><rect x="440.4" y="947.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="443.4" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (32 samples, 0.04%)</title><rect x="440.5" y="931.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="443.5" y="942.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (69 samples, 0.08%)</title><rect x="440.9" y="931.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="443.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.05%)</title><rect x="441.0" y="915.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="444.0" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (26 samples, 0.03%)</title><rect x="441.8" y="963.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="444.8" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (40 samples, 0.04%)</title><rect x="442.1" y="963.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="445.1" y="974.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (109 samples, 0.12%)</title><rect x="442.7" y="963.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="445.7" y="974.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.log (80 samples, 0.09%)</title><rect x="443.0" y="947.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="446.0" y="958.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.getEffectiveLevel (28 samples, 0.03%)</title><rect x="443.7" y="931.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="446.7" y="942.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectorImpl.select (2,826 samples, 3.13%)</title><rect x="444.1" y="963.0" width="37.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="447.1" y="974.0">sun..</text>
</g>
<g>
<title>sun.nio.ch.SelectorImpl.lockAndDoSelect (2,813 samples, 3.12%)</title><rect x="444.3" y="947.0" width="36.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="447.3" y="958.0">sun..</text>
</g>
<g>
<title>sun.nio.ch.EPollSelectorImpl.doSelect (2,802 samples, 3.11%)</title><rect x="444.4" y="931.0" width="36.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="447.4" y="942.0">sun..</text>
</g>
<g>
<title>sun.nio.ch.EPoll.wait (1,746 samples, 1.94%)</title><rect x="445.0" y="915.0" width="22.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="448.0" y="926.0">s..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (75 samples, 0.08%)</title><rect x="447.3" y="899.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="450.3" y="910.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (65 samples, 0.07%)</title><rect x="448.3" y="899.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="451.3" y="910.0"></text>
</g>
<g>
<title>epoll_wait (1,427 samples, 1.58%)</title><rect x="449.1" y="899.0" width="18.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="452.1" y="910.0"></text>
</g>
<g>
<title>sun.nio.ch.EPollSelectorImpl.processEvents (273 samples, 0.30%)</title><rect x="467.8" y="915.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="470.8" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap.get (65 samples, 0.07%)</title><rect x="468.3" y="899.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="471.3" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap.getNode (35 samples, 0.04%)</title><rect x="468.3" y="883.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="471.3" y="894.0"></text>
</g>
<g>
<title>java.util.HashMap.hash (29 samples, 0.03%)</title><rect x="468.7" y="883.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="471.7" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.EPoll.getDescriptor (25 samples, 0.03%)</title><rect x="469.1" y="899.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="472.1" y="910.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectorImpl.processReadyEvents (141 samples, 0.16%)</title><rect x="469.5" y="899.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="472.5" y="910.0"></text>
</g>
<g>
<title>java.util.HashSet.add (135 samples, 0.15%)</title><rect x="469.6" y="883.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="472.6" y="894.0"></text>
</g>
<g>
<title>java.util.HashMap.put (134 samples, 0.15%)</title><rect x="469.6" y="867.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="472.6" y="878.0"></text>
</g>
<g>
<title>java.util.HashMap.hash (43 samples, 0.05%)</title><rect x="469.6" y="851.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="472.6" y="862.0"></text>
</g>
<g>
<title>java.util.HashMap.putVal (91 samples, 0.10%)</title><rect x="470.1" y="851.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="473.1" y="862.0"></text>
</g>
<g>
<title>java.util.HashMap.newNode (69 samples, 0.08%)</title><rect x="470.4" y="835.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="473.4" y="846.0"></text>
</g>
<g>
<title>java.util.HashMap$Node.&lt;init&gt; (58 samples, 0.06%)</title><rect x="470.6" y="819.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="473.6" y="830.0"></text>
</g>
<g>
<title>sun.nio.ch.EPollSelectorImpl.processUpdateQueue (264 samples, 0.29%)</title><rect x="471.4" y="915.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="474.4" y="926.0"></text>
</g>
<g>
<title>java.util.ArrayDeque.pollFirst (33 samples, 0.04%)</title><rect x="472.5" y="899.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="475.5" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap.put (54 samples, 0.06%)</title><rect x="473.0" y="899.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="476.0" y="910.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl.translateInterestOps (54 samples, 0.06%)</title><rect x="474.1" y="899.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="477.1" y="910.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectorImpl.begin (24 samples, 0.03%)</title><rect x="474.8" y="915.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="477.8" y="926.0"></text>
</g>
<g>
<title>java.nio.channels.spi.AbstractSelector.begin (24 samples, 0.03%)</title><rect x="474.8" y="899.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="477.8" y="910.0"></text>
</g>
<g>
<title>java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn (20 samples, 0.02%)</title><rect x="474.9" y="883.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="477.9" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectorImpl.processDeregisterQueue (445 samples, 0.49%)</title><rect x="475.2" y="915.0" width="5.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="478.2" y="926.0"></text>
</g>
<g>
<title>java.util.HashSet.isEmpty (58 samples, 0.06%)</title><rect x="480.2" y="899.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="483.2" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="480.2" y="883.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="483.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime (30 samples, 0.03%)</title><rect x="480.5" y="883.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="483.5" y="894.0"></text>
</g>
<g>
<title>[pool-1-thread-10 tid=441365] (1,270 samples, 1.41%)</title><rect x="481.1" y="1075.0" width="16.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="484.1" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.09%)</title><rect x="481.1" y="1059.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="484.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (75 samples, 0.08%)</title><rect x="481.1" y="1043.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="484.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.08%)</title><rect x="481.1" y="1027.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="484.1" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (59 samples, 0.07%)</title><rect x="481.3" y="1011.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="484.3" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (45 samples, 0.05%)</title><rect x="481.5" y="995.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="484.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,176 samples, 1.30%)</title><rect x="482.3" y="1059.0" width="15.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="485.3" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,176 samples, 1.30%)</title><rect x="482.3" y="1043.0" width="15.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="485.3" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,175 samples, 1.30%)</title><rect x="482.3" y="1027.0" width="15.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="485.3" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (592 samples, 0.66%)</title><rect x="483.3" y="1011.0" width="7.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="486.3" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (560 samples, 0.62%)</title><rect x="483.7" y="995.0" width="7.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="486.7" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (553 samples, 0.61%)</title><rect x="483.7" y="979.0" width="7.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="486.7" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (300 samples, 0.33%)</title><rect x="483.8" y="963.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="486.8" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (86 samples, 0.10%)</title><rect x="484.0" y="947.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="487.0" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (85 samples, 0.09%)</title><rect x="484.1" y="931.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="487.1" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (81 samples, 0.09%)</title><rect x="484.1" y="915.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="487.1" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (81 samples, 0.09%)</title><rect x="484.1" y="899.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="487.1" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (81 samples, 0.09%)</title><rect x="484.1" y="883.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="487.1" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (75 samples, 0.08%)</title><rect x="485.2" y="947.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="488.2" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (73 samples, 0.08%)</title><rect x="485.2" y="931.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="488.2" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (48 samples, 0.05%)</title><rect x="485.2" y="915.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="488.2" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (39 samples, 0.04%)</title><rect x="485.3" y="899.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="488.3" y="910.0"></text>
</g>
<g>
<title>java.util.BitSet.get (25 samples, 0.03%)</title><rect x="485.5" y="883.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="488.5" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (25 samples, 0.03%)</title><rect x="485.9" y="915.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="488.9" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (23 samples, 0.03%)</title><rect x="485.9" y="899.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="488.9" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (44 samples, 0.05%)</title><rect x="486.5" y="947.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="489.5" y="958.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (23 samples, 0.03%)</title><rect x="487.4" y="947.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="490.4" y="958.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.log (20 samples, 0.02%)</title><rect x="487.4" y="931.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="490.4" y="942.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (242 samples, 0.27%)</title><rect x="487.8" y="963.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="490.8" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (235 samples, 0.26%)</title><rect x="487.9" y="947.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="490.9" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (71 samples, 0.08%)</title><rect x="488.2" y="931.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="491.2" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (60 samples, 0.07%)</title><rect x="488.3" y="915.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="491.3" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (37 samples, 0.04%)</title><rect x="488.6" y="899.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="491.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 0.13%)</title><rect x="489.1" y="931.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="492.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (48 samples, 0.05%)</title><rect x="489.2" y="915.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="492.2" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (28 samples, 0.03%)</title><rect x="489.4" y="899.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="492.4" y="910.0"></text>
</g>
<g>
<title>prctl (57 samples, 0.06%)</title><rect x="489.9" y="915.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.9" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (479 samples, 0.53%)</title><rect x="491.3" y="1011.0" width="6.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="494.3" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (474 samples, 0.53%)</title><rect x="491.4" y="995.0" width="6.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="494.4" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (395 samples, 0.44%)</title><rect x="491.4" y="979.0" width="5.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="494.4" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.02%)</title><rect x="491.9" y="963.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="494.9" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (32 samples, 0.04%)</title><rect x="492.2" y="963.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="495.2" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (32 samples, 0.04%)</title><rect x="492.2" y="947.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="495.2" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (30 samples, 0.03%)</title><rect x="492.2" y="931.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="495.2" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (26 samples, 0.03%)</title><rect x="492.3" y="915.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="495.3" y="926.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (25 samples, 0.03%)</title><rect x="492.3" y="899.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="495.3" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (304 samples, 0.34%)</title><rect x="492.6" y="963.0" width="4.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="495.6" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (303 samples, 0.34%)</title><rect x="492.6" y="947.0" width="4.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="495.6" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (209 samples, 0.23%)</title><rect x="492.8" y="931.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="495.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (68 samples, 0.08%)</title><rect x="493.3" y="915.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="496.3" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (59 samples, 0.07%)</title><rect x="494.2" y="915.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="497.2" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (32 samples, 0.04%)</title><rect x="495.0" y="915.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="498.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 0.09%)</title><rect x="495.5" y="931.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="498.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (59 samples, 0.07%)</title><rect x="495.6" y="915.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="498.6" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (39 samples, 0.04%)</title><rect x="496.6" y="979.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="499.6" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (39 samples, 0.04%)</title><rect x="496.6" y="963.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="499.6" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (30 samples, 0.03%)</title><rect x="496.7" y="947.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="499.7" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (33 samples, 0.04%)</title><rect x="497.1" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="500.1" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (33 samples, 0.04%)</title><rect x="497.1" y="963.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="500.1" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 0.04%)</title><rect x="497.1" y="947.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="500.1" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (33 samples, 0.04%)</title><rect x="497.1" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="500.1" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (33 samples, 0.04%)</title><rect x="497.1" y="915.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="500.1" y="926.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=441357] (1,255 samples, 1.39%)</title><rect x="497.7" y="1075.0" width="16.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="500.7" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (74 samples, 0.08%)</title><rect x="497.7" y="1059.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="500.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (71 samples, 0.08%)</title><rect x="497.8" y="1043.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="500.8" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (68 samples, 0.08%)</title><rect x="497.8" y="1027.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="500.8" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (56 samples, 0.06%)</title><rect x="497.9" y="1011.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="500.9" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (43 samples, 0.05%)</title><rect x="498.1" y="995.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="501.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,173 samples, 1.30%)</title><rect x="498.8" y="1059.0" width="15.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="501.8" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,173 samples, 1.30%)</title><rect x="498.8" y="1043.0" width="15.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="501.8" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,173 samples, 1.30%)</title><rect x="498.8" y="1027.0" width="15.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="501.8" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (585 samples, 0.65%)</title><rect x="500.3" y="1011.0" width="7.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="503.3" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (565 samples, 0.63%)</title><rect x="500.5" y="995.0" width="7.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="503.5" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (540 samples, 0.60%)</title><rect x="500.7" y="979.0" width="7.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="503.7" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (292 samples, 0.32%)</title><rect x="500.7" y="963.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="503.7" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (97 samples, 0.11%)</title><rect x="501.1" y="947.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="504.1" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (97 samples, 0.11%)</title><rect x="501.1" y="931.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="504.1" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (88 samples, 0.10%)</title><rect x="501.2" y="915.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="504.2" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (88 samples, 0.10%)</title><rect x="501.2" y="899.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="504.2" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (87 samples, 0.10%)</title><rect x="501.2" y="883.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="504.2" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (66 samples, 0.07%)</title><rect x="502.4" y="947.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="505.4" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (65 samples, 0.07%)</title><rect x="502.4" y="931.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="505.4" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (42 samples, 0.05%)</title><rect x="502.4" y="915.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="505.4" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (31 samples, 0.03%)</title><rect x="502.5" y="899.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="505.5" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (22 samples, 0.02%)</title><rect x="503.0" y="915.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="506.0" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (20 samples, 0.02%)</title><rect x="503.0" y="899.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="506.0" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (38 samples, 0.04%)</title><rect x="503.4" y="947.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="506.4" y="958.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (24 samples, 0.03%)</title><rect x="504.0" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="507.0" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (24 samples, 0.03%)</title><rect x="504.0" y="931.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="507.0" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (24 samples, 0.03%)</title><rect x="504.0" y="915.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="507.0" y="926.0"></text>
</g>
<g>
<title>java.lang.String.format (23 samples, 0.03%)</title><rect x="504.0" y="899.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="507.0" y="910.0"></text>
</g>
<g>
<title>java.util.Formatter.format (21 samples, 0.02%)</title><rect x="504.0" y="883.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="507.0" y="894.0"></text>
</g>
<g>
<title>java.util.Formatter.format (21 samples, 0.02%)</title><rect x="504.0" y="867.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="507.0" y="878.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (238 samples, 0.26%)</title><rect x="504.6" y="963.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="507.6" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (229 samples, 0.25%)</title><rect x="504.7" y="947.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="507.7" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (71 samples, 0.08%)</title><rect x="505.1" y="931.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="508.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (55 samples, 0.06%)</title><rect x="505.2" y="915.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="508.2" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (34 samples, 0.04%)</title><rect x="505.5" y="899.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="508.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 0.12%)</title><rect x="506.0" y="931.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="509.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (48 samples, 0.05%)</title><rect x="506.0" y="915.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="509.0" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (30 samples, 0.03%)</title><rect x="506.2" y="899.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="509.2" y="910.0"></text>
</g>
<g>
<title>prctl (37 samples, 0.04%)</title><rect x="506.9" y="915.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="509.9" y="926.0"></text>
</g>
<g>
<title>_IO_default_xsputn (21 samples, 0.02%)</title><rect x="507.4" y="931.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="510.4" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (447 samples, 0.50%)</title><rect x="508.2" y="1011.0" width="5.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="511.2" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (444 samples, 0.49%)</title><rect x="508.3" y="995.0" width="5.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="511.3" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (363 samples, 0.40%)</title><rect x="508.4" y="979.0" width="4.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="511.4" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (304 samples, 0.34%)</title><rect x="509.1" y="963.0" width="4.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="512.1" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (300 samples, 0.33%)</title><rect x="509.2" y="947.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="512.2" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (203 samples, 0.23%)</title><rect x="509.3" y="931.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="512.3" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (69 samples, 0.08%)</title><rect x="509.9" y="915.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="512.9" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (53 samples, 0.06%)</title><rect x="510.9" y="915.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="513.9" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (29 samples, 0.03%)</title><rect x="511.6" y="915.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="514.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 0.10%)</title><rect x="512.0" y="931.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="515.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (70 samples, 0.08%)</title><rect x="512.0" y="915.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="515.0" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (35 samples, 0.04%)</title><rect x="513.1" y="979.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="516.1" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (35 samples, 0.04%)</title><rect x="513.1" y="963.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="516.1" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (30 samples, 0.03%)</title><rect x="513.2" y="947.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="516.2" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (21 samples, 0.02%)</title><rect x="513.2" y="931.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.2" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (38 samples, 0.04%)</title><rect x="513.6" y="979.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="516.6" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (38 samples, 0.04%)</title><rect x="513.6" y="963.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="516.6" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 0.04%)</title><rect x="513.6" y="947.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="516.6" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (37 samples, 0.04%)</title><rect x="513.6" y="931.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.6" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (37 samples, 0.04%)</title><rect x="513.6" y="915.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.6" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.03%)</title><rect x="513.6" y="899.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="516.6" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-3 tid=441358] (1,269 samples, 1.41%)</title><rect x="514.1" y="1075.0" width="16.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="517.1" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (85 samples, 0.09%)</title><rect x="514.1" y="1059.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="517.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="514.2" y="1043.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="517.2" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.09%)</title><rect x="514.2" y="1027.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="517.2" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (60 samples, 0.07%)</title><rect x="514.4" y="1011.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="517.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (40 samples, 0.04%)</title><rect x="514.6" y="995.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="517.6" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,177 samples, 1.31%)</title><rect x="515.3" y="1059.0" width="15.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="518.3" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,177 samples, 1.31%)</title><rect x="515.3" y="1043.0" width="15.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="518.3" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,177 samples, 1.31%)</title><rect x="515.3" y="1027.0" width="15.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="518.3" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (616 samples, 0.68%)</title><rect x="516.6" y="1011.0" width="8.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="519.6" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (599 samples, 0.66%)</title><rect x="516.8" y="995.0" width="7.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="519.8" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (582 samples, 0.65%)</title><rect x="516.8" y="979.0" width="7.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="519.8" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (310 samples, 0.34%)</title><rect x="516.9" y="963.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="519.9" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (99 samples, 0.11%)</title><rect x="517.2" y="947.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="520.2" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (95 samples, 0.11%)</title><rect x="517.2" y="931.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="520.2" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (86 samples, 0.10%)</title><rect x="517.4" y="915.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="520.4" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (85 samples, 0.09%)</title><rect x="517.4" y="899.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="520.4" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (85 samples, 0.09%)</title><rect x="517.4" y="883.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="520.4" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (72 samples, 0.08%)</title><rect x="518.6" y="947.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="521.6" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (71 samples, 0.08%)</title><rect x="518.6" y="931.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="521.6" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (42 samples, 0.05%)</title><rect x="518.6" y="915.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="521.6" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (31 samples, 0.03%)</title><rect x="518.7" y="899.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="521.7" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (27 samples, 0.03%)</title><rect x="519.1" y="915.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="522.1" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (26 samples, 0.03%)</title><rect x="519.1" y="899.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="522.1" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (43 samples, 0.05%)</title><rect x="519.7" y="947.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="522.7" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap.get (20 samples, 0.02%)</title><rect x="519.8" y="931.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="522.8" y="942.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (27 samples, 0.03%)</title><rect x="520.3" y="947.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="523.3" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (26 samples, 0.03%)</title><rect x="520.3" y="931.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="523.3" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (26 samples, 0.03%)</title><rect x="520.3" y="915.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="523.3" y="926.0"></text>
</g>
<g>
<title>java.lang.String.format (25 samples, 0.03%)</title><rect x="520.3" y="899.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="523.3" y="910.0"></text>
</g>
<g>
<title>java.util.Formatter.format (23 samples, 0.03%)</title><rect x="520.4" y="883.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="523.4" y="894.0"></text>
</g>
<g>
<title>java.util.Formatter.format (23 samples, 0.03%)</title><rect x="520.4" y="867.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="523.4" y="878.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (270 samples, 0.30%)</title><rect x="520.9" y="963.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="523.9" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (264 samples, 0.29%)</title><rect x="521.0" y="947.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="524.0" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (81 samples, 0.09%)</title><rect x="521.5" y="931.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (67 samples, 0.07%)</title><rect x="521.6" y="915.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="524.6" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (45 samples, 0.05%)</title><rect x="521.9" y="899.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="524.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 0.14%)</title><rect x="522.6" y="931.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="525.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (49 samples, 0.05%)</title><rect x="522.6" y="915.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="525.6" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (25 samples, 0.03%)</title><rect x="522.9" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="525.9" y="910.0"></text>
</g>
<g>
<title>prctl (59 samples, 0.07%)</title><rect x="523.4" y="915.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="526.4" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (440 samples, 0.49%)</title><rect x="525.0" y="1011.0" width="5.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="528.0" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (431 samples, 0.48%)</title><rect x="525.1" y="995.0" width="5.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="528.1" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (353 samples, 0.39%)</title><rect x="525.1" y="979.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="528.1" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (295 samples, 0.33%)</title><rect x="525.9" y="963.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="528.9" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (293 samples, 0.32%)</title><rect x="525.9" y="947.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="528.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (176 samples, 0.20%)</title><rect x="526.1" y="931.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="529.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (63 samples, 0.07%)</title><rect x="526.6" y="915.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="529.6" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (37 samples, 0.04%)</title><rect x="527.4" y="915.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="530.4" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (33 samples, 0.04%)</title><rect x="527.9" y="915.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="530.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 0.11%)</title><rect x="528.4" y="931.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="531.4" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (82 samples, 0.09%)</title><rect x="528.5" y="915.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="531.5" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (31 samples, 0.03%)</title><rect x="529.8" y="979.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="532.8" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (30 samples, 0.03%)</title><rect x="529.8" y="963.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="532.8" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (20 samples, 0.02%)</title><rect x="529.9" y="947.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="532.9" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (41 samples, 0.05%)</title><rect x="530.2" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="533.2" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (41 samples, 0.05%)</title><rect x="530.2" y="963.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="533.2" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (41 samples, 0.05%)</title><rect x="530.2" y="947.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="533.2" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (39 samples, 0.04%)</title><rect x="530.2" y="931.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="533.2" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (39 samples, 0.04%)</title><rect x="530.2" y="915.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="533.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.02%)</title><rect x="530.4" y="899.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="533.4" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=441359] (1,306 samples, 1.45%)</title><rect x="530.7" y="1075.0" width="17.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="533.7" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (87 samples, 0.10%)</title><rect x="530.7" y="1059.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="533.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (84 samples, 0.09%)</title><rect x="530.8" y="1043.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="533.8" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="530.8" y="1027.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="533.8" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.08%)</title><rect x="530.9" y="1011.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="533.9" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (58 samples, 0.06%)</title><rect x="531.1" y="995.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="534.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,211 samples, 1.34%)</title><rect x="532.0" y="1059.0" width="15.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="535.0" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,211 samples, 1.34%)</title><rect x="532.0" y="1043.0" width="15.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="535.0" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,211 samples, 1.34%)</title><rect x="532.0" y="1027.0" width="15.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="535.0" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (606 samples, 0.67%)</title><rect x="533.2" y="1011.0" width="8.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="536.2" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (583 samples, 0.65%)</title><rect x="533.5" y="995.0" width="7.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="536.5" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (572 samples, 0.63%)</title><rect x="533.6" y="979.0" width="7.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="536.6" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (291 samples, 0.32%)</title><rect x="533.6" y="963.0" width="3.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="536.6" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (89 samples, 0.10%)</title><rect x="533.9" y="947.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="536.9" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (85 samples, 0.09%)</title><rect x="533.9" y="931.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="536.9" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (79 samples, 0.09%)</title><rect x="534.0" y="915.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="537.0" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (79 samples, 0.09%)</title><rect x="534.0" y="899.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="537.0" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (79 samples, 0.09%)</title><rect x="534.0" y="883.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="537.0" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (69 samples, 0.08%)</title><rect x="535.0" y="947.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="538.0" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (66 samples, 0.07%)</title><rect x="535.1" y="931.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="538.1" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (34 samples, 0.04%)</title><rect x="535.1" y="915.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="538.1" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (24 samples, 0.03%)</title><rect x="535.2" y="899.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="538.2" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (29 samples, 0.03%)</title><rect x="535.6" y="915.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="538.6" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (29 samples, 0.03%)</title><rect x="535.6" y="899.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="538.6" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.send (23 samples, 0.03%)</title><rect x="535.6" y="883.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="538.6" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionManager.offerWrite (21 samples, 0.02%)</title><rect x="535.6" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="538.6" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.offerWrite (20 samples, 0.02%)</title><rect x="535.6" y="851.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="538.6" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.addTaskToQueue (20 samples, 0.02%)</title><rect x="535.6" y="835.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="538.6" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (20 samples, 0.02%)</title><rect x="535.6" y="819.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="538.6" y="830.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (41 samples, 0.05%)</title><rect x="536.2" y="947.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="539.2" y="958.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (21 samples, 0.02%)</title><rect x="537.1" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="540.1" y="958.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (272 samples, 0.30%)</title><rect x="537.5" y="963.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="540.5" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (258 samples, 0.29%)</title><rect x="537.7" y="947.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="540.7" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (65 samples, 0.07%)</title><rect x="538.0" y="931.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="541.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.05%)</title><rect x="538.2" y="915.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="541.2" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (36 samples, 0.04%)</title><rect x="538.3" y="899.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="541.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 0.16%)</title><rect x="538.9" y="931.0" width="1.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="541.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (55 samples, 0.06%)</title><rect x="539.0" y="915.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="542.0" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (35 samples, 0.04%)</title><rect x="539.2" y="899.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="542.2" y="910.0"></text>
</g>
<g>
<title>prctl (65 samples, 0.07%)</title><rect x="539.9" y="915.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="542.9" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.lock (24 samples, 0.03%)</title><rect x="541.2" y="1011.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="544.2" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (478 samples, 0.53%)</title><rect x="541.5" y="1011.0" width="6.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="544.5" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (467 samples, 0.52%)</title><rect x="541.6" y="995.0" width="6.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="544.6" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (395 samples, 0.44%)</title><rect x="541.7" y="979.0" width="5.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="544.7" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.02%)</title><rect x="542.1" y="963.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="545.1" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (20 samples, 0.02%)</title><rect x="542.3" y="963.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="545.3" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (20 samples, 0.02%)</title><rect x="542.3" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="545.3" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (323 samples, 0.36%)</title><rect x="542.6" y="963.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="545.6" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (322 samples, 0.36%)</title><rect x="542.6" y="947.0" width="4.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="545.6" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (219 samples, 0.24%)</title><rect x="542.8" y="931.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="545.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="543.2" y="915.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="546.2" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (53 samples, 0.06%)</title><rect x="544.4" y="915.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="547.4" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (35 samples, 0.04%)</title><rect x="545.1" y="915.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="548.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 0.10%)</title><rect x="545.7" y="931.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="548.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (61 samples, 0.07%)</title><rect x="545.8" y="915.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="548.8" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (30 samples, 0.03%)</title><rect x="546.8" y="979.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="549.8" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (28 samples, 0.03%)</title><rect x="546.9" y="963.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="549.9" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (23 samples, 0.03%)</title><rect x="546.9" y="947.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="549.9" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (38 samples, 0.04%)</title><rect x="547.2" y="979.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="550.2" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (37 samples, 0.04%)</title><rect x="547.3" y="963.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="550.3" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (37 samples, 0.04%)</title><rect x="547.3" y="947.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="550.3" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (37 samples, 0.04%)</title><rect x="547.3" y="931.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="550.3" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (37 samples, 0.04%)</title><rect x="547.3" y="915.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="550.3" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.02%)</title><rect x="547.3" y="899.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="550.3" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-5 tid=441360] (1,316 samples, 1.46%)</title><rect x="547.8" y="1075.0" width="17.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="550.8" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="547.8" y="1059.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="550.8" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.09%)</title><rect x="547.9" y="1043.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="550.9" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.08%)</title><rect x="548.0" y="1027.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="551.0" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (61 samples, 0.07%)</title><rect x="548.1" y="1011.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="551.1" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (48 samples, 0.05%)</title><rect x="548.3" y="995.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="551.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,225 samples, 1.36%)</title><rect x="549.0" y="1059.0" width="16.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="552.0" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,225 samples, 1.36%)</title><rect x="549.0" y="1043.0" width="16.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="552.0" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,225 samples, 1.36%)</title><rect x="549.0" y="1027.0" width="16.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="552.0" y="1038.0"></text>
</g>
<g>
<title>java.lang.Thread.interrupted (23 samples, 0.03%)</title><rect x="550.0" y="1011.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="553.0" y="1022.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (20 samples, 0.02%)</title><rect x="550.0" y="995.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="553.0" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (622 samples, 0.69%)</title><rect x="550.3" y="1011.0" width="8.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="553.3" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (597 samples, 0.66%)</title><rect x="550.6" y="995.0" width="7.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="553.6" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (587 samples, 0.65%)</title><rect x="550.6" y="979.0" width="7.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="553.6" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (333 samples, 0.37%)</title><rect x="550.7" y="963.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="553.7" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (88 samples, 0.10%)</title><rect x="551.0" y="947.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="554.0" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (87 samples, 0.10%)</title><rect x="551.0" y="931.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="554.0" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (79 samples, 0.09%)</title><rect x="551.1" y="915.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="554.1" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (79 samples, 0.09%)</title><rect x="551.1" y="899.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="554.1" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (79 samples, 0.09%)</title><rect x="551.1" y="883.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="554.1" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (100 samples, 0.11%)</title><rect x="552.3" y="947.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="555.3" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (99 samples, 0.11%)</title><rect x="552.3" y="931.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="555.3" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (35 samples, 0.04%)</title><rect x="552.3" y="915.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="555.3" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (32 samples, 0.04%)</title><rect x="552.3" y="899.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="555.3" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (63 samples, 0.07%)</title><rect x="552.8" y="915.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="555.8" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (59 samples, 0.07%)</title><rect x="552.8" y="899.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="555.8" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.send (49 samples, 0.05%)</title><rect x="552.8" y="883.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="555.8" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionManager.offerWrite (45 samples, 0.05%)</title><rect x="552.8" y="867.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="555.8" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.offerWrite (45 samples, 0.05%)</title><rect x="552.8" y="851.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="555.8" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.addTaskToQueue (45 samples, 0.05%)</title><rect x="552.8" y="835.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="555.8" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (39 samples, 0.04%)</title><rect x="552.8" y="819.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="555.8" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos (20 samples, 0.02%)</title><rect x="552.8" y="803.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="555.8" y="814.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (45 samples, 0.05%)</title><rect x="553.8" y="947.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="556.8" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap.get (21 samples, 0.02%)</title><rect x="554.0" y="931.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="557.0" y="942.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (26 samples, 0.03%)</title><rect x="554.5" y="947.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="557.5" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (25 samples, 0.03%)</title><rect x="554.5" y="931.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="557.5" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (25 samples, 0.03%)</title><rect x="554.5" y="915.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="557.5" y="926.0"></text>
</g>
<g>
<title>java.lang.String.format (25 samples, 0.03%)</title><rect x="554.5" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="557.5" y="910.0"></text>
</g>
<g>
<title>java.util.Formatter.format (23 samples, 0.03%)</title><rect x="554.6" y="883.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="557.6" y="894.0"></text>
</g>
<g>
<title>java.util.Formatter.format (23 samples, 0.03%)</title><rect x="554.6" y="867.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="557.6" y="878.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (244 samples, 0.27%)</title><rect x="555.1" y="963.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="558.1" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (237 samples, 0.26%)</title><rect x="555.2" y="947.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="558.2" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (85 samples, 0.09%)</title><rect x="555.6" y="931.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="558.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (71 samples, 0.08%)</title><rect x="555.6" y="915.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="558.6" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.05%)</title><rect x="555.9" y="899.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="558.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 0.12%)</title><rect x="556.7" y="931.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="559.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (53 samples, 0.06%)</title><rect x="556.7" y="915.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="559.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (33 samples, 0.04%)</title><rect x="556.9" y="899.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="559.9" y="910.0"></text>
</g>
<g>
<title>prctl (38 samples, 0.04%)</title><rect x="557.6" y="915.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="560.6" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.lock (20 samples, 0.02%)</title><rect x="558.4" y="1011.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="561.4" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (476 samples, 0.53%)</title><rect x="558.8" y="1011.0" width="6.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="561.8" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (465 samples, 0.52%)</title><rect x="558.9" y="995.0" width="6.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="561.9" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (382 samples, 0.42%)</title><rect x="559.0" y="979.0" width="5.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="562.0" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (24 samples, 0.03%)</title><rect x="559.6" y="963.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="562.6" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (24 samples, 0.03%)</title><rect x="559.6" y="947.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="562.6" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.03%)</title><rect x="559.6" y="931.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="562.6" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (22 samples, 0.02%)</title><rect x="559.6" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="562.6" y="926.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (22 samples, 0.02%)</title><rect x="559.6" y="899.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="562.6" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (309 samples, 0.34%)</title><rect x="559.9" y="963.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="562.9" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (309 samples, 0.34%)</title><rect x="559.9" y="947.0" width="4.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="562.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (195 samples, 0.22%)</title><rect x="560.2" y="931.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="563.2" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (69 samples, 0.08%)</title><rect x="560.6" y="915.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="563.6" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (53 samples, 0.06%)</title><rect x="561.6" y="915.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="564.6" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (26 samples, 0.03%)</title><rect x="562.3" y="915.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="565.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 0.11%)</title><rect x="562.7" y="931.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="565.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (65 samples, 0.07%)</title><rect x="562.8" y="915.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="565.8" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (35 samples, 0.04%)</title><rect x="564.0" y="979.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="567.0" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (34 samples, 0.04%)</title><rect x="564.0" y="963.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="567.0" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (30 samples, 0.03%)</title><rect x="564.0" y="947.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="567.0" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (23 samples, 0.03%)</title><rect x="564.0" y="931.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="567.0" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (36 samples, 0.04%)</title><rect x="564.5" y="979.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="567.5" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (36 samples, 0.04%)</title><rect x="564.5" y="963.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="567.5" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 0.04%)</title><rect x="564.5" y="947.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="567.5" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (35 samples, 0.04%)</title><rect x="564.5" y="931.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="567.5" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (35 samples, 0.04%)</title><rect x="564.5" y="915.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="567.5" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (25 samples, 0.03%)</title><rect x="564.5" y="899.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="567.5" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-6 tid=441361] (1,246 samples, 1.38%)</title><rect x="565.1" y="1075.0" width="16.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="568.1" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (106 samples, 0.12%)</title><rect x="565.1" y="1059.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="568.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (103 samples, 0.11%)</title><rect x="565.1" y="1043.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="568.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (98 samples, 0.11%)</title><rect x="565.2" y="1027.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="568.2" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="565.4" y="1011.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="568.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (71 samples, 0.08%)</title><rect x="565.5" y="995.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="568.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,129 samples, 1.25%)</title><rect x="566.6" y="1059.0" width="14.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="569.6" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,129 samples, 1.25%)</title><rect x="566.6" y="1043.0" width="14.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="569.6" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,129 samples, 1.25%)</title><rect x="566.6" y="1027.0" width="14.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="569.6" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (572 samples, 0.63%)</title><rect x="567.6" y="1011.0" width="7.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="570.6" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (544 samples, 0.60%)</title><rect x="567.9" y="995.0" width="7.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="570.9" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (526 samples, 0.58%)</title><rect x="568.0" y="979.0" width="6.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="571.0" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (305 samples, 0.34%)</title><rect x="568.1" y="963.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="571.1" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (103 samples, 0.11%)</title><rect x="568.5" y="947.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="571.5" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (101 samples, 0.11%)</title><rect x="568.5" y="931.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="571.5" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (94 samples, 0.10%)</title><rect x="568.6" y="915.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="571.6" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (94 samples, 0.10%)</title><rect x="568.6" y="899.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="571.6" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (94 samples, 0.10%)</title><rect x="568.6" y="883.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="571.6" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (49 samples, 0.05%)</title><rect x="569.9" y="947.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="572.9" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (46 samples, 0.05%)</title><rect x="569.9" y="931.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="572.9" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (30 samples, 0.03%)</title><rect x="569.9" y="915.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="572.9" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (27 samples, 0.03%)</title><rect x="570.0" y="899.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="573.0" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (45 samples, 0.05%)</title><rect x="570.7" y="947.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="573.7" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap.get (21 samples, 0.02%)</title><rect x="570.8" y="931.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="573.8" y="942.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (20 samples, 0.02%)</title><rect x="571.4" y="947.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="574.4" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (20 samples, 0.02%)</title><rect x="571.4" y="931.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="574.4" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (20 samples, 0.02%)</title><rect x="571.4" y="915.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="574.4" y="926.0"></text>
</g>
<g>
<title>org.slf4j.impl.Log4jLoggerAdapter.trace (25 samples, 0.03%)</title><rect x="571.7" y="947.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="574.7" y="958.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.log (22 samples, 0.02%)</title><rect x="571.8" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.8" y="942.0"></text>
</g>
<g>
<title>org.apache.log4j.Category.forcedLog (20 samples, 0.02%)</title><rect x="571.8" y="915.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="574.8" y="926.0"></text>
</g>
<g>
<title>org.apache.log4j.spi.LoggingEvent.&lt;init&gt; (20 samples, 0.02%)</title><rect x="571.8" y="899.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="574.8" y="910.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (211 samples, 0.23%)</title><rect x="572.1" y="963.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="575.1" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (202 samples, 0.22%)</title><rect x="572.2" y="947.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="575.2" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (66 samples, 0.07%)</title><rect x="572.4" y="931.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="575.4" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (51 samples, 0.06%)</title><rect x="572.6" y="915.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="575.6" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (34 samples, 0.04%)</title><rect x="572.8" y="899.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="575.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 0.12%)</title><rect x="573.3" y="931.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="576.3" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (44 samples, 0.05%)</title><rect x="573.3" y="915.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="576.3" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (27 samples, 0.03%)</title><rect x="573.5" y="899.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="576.5" y="910.0"></text>
</g>
<g>
<title>prctl (43 samples, 0.05%)</title><rect x="574.1" y="915.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="577.1" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (451 samples, 0.50%)</title><rect x="575.4" y="1011.0" width="5.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="578.4" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (446 samples, 0.49%)</title><rect x="575.4" y="995.0" width="5.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="578.4" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (364 samples, 0.40%)</title><rect x="575.5" y="979.0" width="4.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="578.5" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.02%)</title><rect x="575.7" y="963.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="578.7" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (23 samples, 0.03%)</title><rect x="576.0" y="963.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="579.0" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (23 samples, 0.03%)</title><rect x="576.0" y="947.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="579.0" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (298 samples, 0.33%)</title><rect x="576.3" y="963.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="579.3" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (294 samples, 0.33%)</title><rect x="576.4" y="947.0" width="3.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="579.4" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (189 samples, 0.21%)</title><rect x="576.5" y="931.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="579.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (64 samples, 0.07%)</title><rect x="576.9" y="915.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="579.9" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (50 samples, 0.06%)</title><rect x="577.8" y="915.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="580.8" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (21 samples, 0.02%)</title><rect x="578.5" y="915.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="581.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 0.11%)</title><rect x="579.0" y="931.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="582.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (73 samples, 0.08%)</title><rect x="579.0" y="915.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="582.0" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (44 samples, 0.05%)</title><rect x="580.3" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="583.3" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (43 samples, 0.05%)</title><rect x="580.3" y="963.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="583.3" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (34 samples, 0.04%)</title><rect x="580.3" y="947.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="583.3" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (23 samples, 0.03%)</title><rect x="580.4" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="583.4" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (31 samples, 0.03%)</title><rect x="580.8" y="979.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="583.8" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (31 samples, 0.03%)</title><rect x="580.8" y="963.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="583.8" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.03%)</title><rect x="580.8" y="947.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="583.8" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (30 samples, 0.03%)</title><rect x="580.9" y="931.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="583.9" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (30 samples, 0.03%)</title><rect x="580.9" y="915.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="583.9" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="580.9" y="899.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="583.9" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-7 tid=441362] (1,259 samples, 1.40%)</title><rect x="581.4" y="1075.0" width="16.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="584.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (90 samples, 0.10%)</title><rect x="581.4" y="1059.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="584.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (88 samples, 0.10%)</title><rect x="581.4" y="1043.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="584.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="581.5" y="1027.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="584.5" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (65 samples, 0.07%)</title><rect x="581.6" y="1011.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="584.6" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (44 samples, 0.05%)</title><rect x="581.9" y="995.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="584.9" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,161 samples, 1.29%)</title><rect x="582.7" y="1059.0" width="15.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="585.7" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,161 samples, 1.29%)</title><rect x="582.7" y="1043.0" width="15.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="585.7" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,161 samples, 1.29%)</title><rect x="582.7" y="1027.0" width="15.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="585.7" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (585 samples, 0.65%)</title><rect x="583.8" y="1011.0" width="7.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="586.8" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (564 samples, 0.63%)</title><rect x="584.1" y="995.0" width="7.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="587.1" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (546 samples, 0.61%)</title><rect x="584.1" y="979.0" width="7.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="587.1" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (315 samples, 0.35%)</title><rect x="584.2" y="963.0" width="4.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="587.2" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (104 samples, 0.12%)</title><rect x="584.5" y="947.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="587.5" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (102 samples, 0.11%)</title><rect x="584.6" y="931.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="587.6" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (90 samples, 0.10%)</title><rect x="584.7" y="915.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="587.7" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (89 samples, 0.10%)</title><rect x="584.7" y="899.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="587.7" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (89 samples, 0.10%)</title><rect x="584.7" y="883.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="587.7" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (68 samples, 0.08%)</title><rect x="586.0" y="947.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="589.0" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (67 samples, 0.07%)</title><rect x="586.0" y="931.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="589.0" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (49 samples, 0.05%)</title><rect x="586.0" y="915.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="589.0" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (46 samples, 0.05%)</title><rect x="586.1" y="899.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="589.1" y="910.0"></text>
</g>
<g>
<title>java.util.BitSet.get (26 samples, 0.03%)</title><rect x="586.3" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="589.3" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (46 samples, 0.05%)</title><rect x="587.1" y="947.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="590.1" y="958.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (24 samples, 0.03%)</title><rect x="587.7" y="947.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="590.7" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (24 samples, 0.03%)</title><rect x="587.7" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="590.7" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (24 samples, 0.03%)</title><rect x="587.7" y="915.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="590.7" y="926.0"></text>
</g>
<g>
<title>java.lang.String.format (20 samples, 0.02%)</title><rect x="587.8" y="899.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="590.8" y="910.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (221 samples, 0.25%)</title><rect x="588.4" y="963.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="591.4" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (215 samples, 0.24%)</title><rect x="588.5" y="947.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="591.5" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (71 samples, 0.08%)</title><rect x="588.7" y="931.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="591.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (59 samples, 0.07%)</title><rect x="588.8" y="915.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="591.8" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (42 samples, 0.05%)</title><rect x="589.0" y="899.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="592.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 0.12%)</title><rect x="589.6" y="931.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="592.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (40 samples, 0.04%)</title><rect x="589.6" y="915.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="592.6" y="926.0"></text>
</g>
<g>
<title>prctl (49 samples, 0.05%)</title><rect x="590.4" y="915.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="593.4" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (457 samples, 0.51%)</title><rect x="591.8" y="1011.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="594.8" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (450 samples, 0.50%)</title><rect x="591.9" y="995.0" width="5.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="594.9" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (362 samples, 0.40%)</title><rect x="591.9" y="979.0" width="4.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="594.9" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (23 samples, 0.03%)</title><rect x="592.3" y="963.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="595.3" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (23 samples, 0.03%)</title><rect x="592.6" y="963.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="595.6" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (23 samples, 0.03%)</title><rect x="592.6" y="947.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="595.6" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (289 samples, 0.32%)</title><rect x="592.9" y="963.0" width="3.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="595.9" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (287 samples, 0.32%)</title><rect x="592.9" y="947.0" width="3.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="595.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (196 samples, 0.22%)</title><rect x="593.0" y="931.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="596.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (71 samples, 0.08%)</title><rect x="593.4" y="915.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="596.4" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (55 samples, 0.06%)</title><rect x="594.4" y="915.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="597.4" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (23 samples, 0.03%)</title><rect x="595.1" y="915.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="598.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 0.09%)</title><rect x="595.6" y="931.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="598.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (61 samples, 0.07%)</title><rect x="595.6" y="915.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="598.6" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (37 samples, 0.04%)</title><rect x="596.7" y="979.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="599.7" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (36 samples, 0.04%)</title><rect x="596.7" y="963.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="599.7" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (29 samples, 0.03%)</title><rect x="596.7" y="947.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="599.7" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (45 samples, 0.05%)</title><rect x="597.2" y="979.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="600.2" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (44 samples, 0.05%)</title><rect x="597.2" y="963.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="600.2" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (43 samples, 0.05%)</title><rect x="597.2" y="947.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="600.2" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (40 samples, 0.04%)</title><rect x="597.2" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="600.2" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (40 samples, 0.04%)</title><rect x="597.2" y="915.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="600.2" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (27 samples, 0.03%)</title><rect x="597.2" y="899.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="600.2" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-8 tid=441363] (1,342 samples, 1.49%)</title><rect x="597.9" y="1075.0" width="17.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="600.9" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.09%)</title><rect x="597.9" y="1059.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="600.9" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (75 samples, 0.08%)</title><rect x="597.9" y="1043.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="600.9" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (70 samples, 0.08%)</title><rect x="597.9" y="1027.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="600.9" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (57 samples, 0.06%)</title><rect x="598.0" y="1011.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="601.0" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (47 samples, 0.05%)</title><rect x="598.2" y="995.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="601.2" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,256 samples, 1.39%)</title><rect x="599.0" y="1059.0" width="16.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="602.0" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,256 samples, 1.39%)</title><rect x="599.0" y="1043.0" width="16.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="602.0" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,256 samples, 1.39%)</title><rect x="599.0" y="1027.0" width="16.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="602.0" y="1038.0"></text>
</g>
<g>
<title>java.lang.Thread.interrupted (25 samples, 0.03%)</title><rect x="599.9" y="1011.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="602.9" y="1022.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (21 samples, 0.02%)</title><rect x="599.9" y="995.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="602.9" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (676 samples, 0.75%)</title><rect x="600.2" y="1011.0" width="8.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="603.2" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (653 samples, 0.72%)</title><rect x="600.5" y="995.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="603.5" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (637 samples, 0.71%)</title><rect x="600.5" y="979.0" width="8.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="603.5" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (347 samples, 0.38%)</title><rect x="600.5" y="963.0" width="4.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="603.5" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (99 samples, 0.11%)</title><rect x="600.8" y="947.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="603.8" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (96 samples, 0.11%)</title><rect x="600.8" y="931.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="603.8" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (91 samples, 0.10%)</title><rect x="600.9" y="915.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="603.9" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (91 samples, 0.10%)</title><rect x="600.9" y="899.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="603.9" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (91 samples, 0.10%)</title><rect x="600.9" y="883.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="603.9" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (97 samples, 0.11%)</title><rect x="602.1" y="947.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="605.1" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (94 samples, 0.10%)</title><rect x="602.2" y="931.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="605.2" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (32 samples, 0.04%)</title><rect x="602.2" y="915.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="605.2" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (28 samples, 0.03%)</title><rect x="602.2" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="605.2" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (62 samples, 0.07%)</title><rect x="602.6" y="915.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="605.6" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (62 samples, 0.07%)</title><rect x="602.6" y="899.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="605.6" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.send (54 samples, 0.06%)</title><rect x="602.6" y="883.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="605.6" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionManager.offerWrite (52 samples, 0.06%)</title><rect x="602.6" y="867.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="605.6" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.offerWrite (52 samples, 0.06%)</title><rect x="602.6" y="851.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="605.6" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.addTaskToQueue (52 samples, 0.06%)</title><rect x="602.6" y="835.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="605.6" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (49 samples, 0.05%)</title><rect x="602.6" y="819.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="605.6" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos (29 samples, 0.03%)</title><rect x="602.6" y="803.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="605.6" y="814.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (60 samples, 0.07%)</title><rect x="603.7" y="947.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="606.7" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap.get (29 samples, 0.03%)</title><rect x="603.9" y="931.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="606.9" y="942.0"></text>
</g>
<g>
<title>java.util.HashMap.hash (21 samples, 0.02%)</title><rect x="604.0" y="915.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="607.0" y="926.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (21 samples, 0.02%)</title><rect x="604.6" y="947.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="607.6" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (20 samples, 0.02%)</title><rect x="604.6" y="931.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="607.6" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (20 samples, 0.02%)</title><rect x="604.6" y="915.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="607.6" y="926.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (285 samples, 0.32%)</title><rect x="605.2" y="963.0" width="3.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="608.2" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (275 samples, 0.31%)</title><rect x="605.3" y="947.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="608.3" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (91 samples, 0.10%)</title><rect x="605.7" y="931.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="608.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (80 samples, 0.09%)</title><rect x="605.8" y="915.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="608.8" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.05%)</title><rect x="606.2" y="899.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="609.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 0.15%)</title><rect x="606.9" y="931.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="609.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (56 samples, 0.06%)</title><rect x="606.9" y="915.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="609.9" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (30 samples, 0.03%)</title><rect x="607.2" y="899.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="610.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.02%)</title><rect x="607.7" y="915.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="610.7" y="926.0"></text>
</g>
<g>
<title>prctl (57 samples, 0.06%)</title><rect x="607.9" y="915.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="610.9" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (456 samples, 0.51%)</title><rect x="609.4" y="1011.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="612.4" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (450 samples, 0.50%)</title><rect x="609.4" y="995.0" width="5.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="612.4" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (372 samples, 0.41%)</title><rect x="609.5" y="979.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="612.5" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.02%)</title><rect x="609.8" y="963.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="612.8" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (27 samples, 0.03%)</title><rect x="610.1" y="963.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="613.1" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (27 samples, 0.03%)</title><rect x="610.1" y="947.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="613.1" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.03%)</title><rect x="610.1" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="613.1" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (22 samples, 0.02%)</title><rect x="610.1" y="915.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="613.1" y="926.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (22 samples, 0.02%)</title><rect x="610.1" y="899.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="613.1" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (298 samples, 0.33%)</title><rect x="610.5" y="963.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="613.5" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (296 samples, 0.33%)</title><rect x="610.5" y="947.0" width="3.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="613.5" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (193 samples, 0.21%)</title><rect x="610.6" y="931.0" width="2.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="613.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (70 samples, 0.08%)</title><rect x="611.0" y="915.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="614.0" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (53 samples, 0.06%)</title><rect x="611.9" y="915.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="614.9" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (30 samples, 0.03%)</title><rect x="612.7" y="915.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="615.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 0.10%)</title><rect x="613.2" y="931.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="616.2" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (70 samples, 0.08%)</title><rect x="613.2" y="915.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="616.2" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (36 samples, 0.04%)</title><rect x="614.4" y="979.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="617.4" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (36 samples, 0.04%)</title><rect x="614.4" y="963.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="617.4" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly (26 samples, 0.03%)</title><rect x="614.5" y="947.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="617.5" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter (22 samples, 0.02%)</title><rect x="614.5" y="931.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="617.5" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (35 samples, 0.04%)</title><rect x="614.8" y="979.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="617.8" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (35 samples, 0.04%)</title><rect x="614.8" y="963.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="617.8" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.04%)</title><rect x="614.8" y="947.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="617.8" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (35 samples, 0.04%)</title><rect x="614.8" y="931.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="617.8" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (35 samples, 0.04%)</title><rect x="614.8" y="915.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="617.8" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="614.8" y="899.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="617.8" y="910.0"></text>
</g>
<g>
<title>[pool-1-thread-9 tid=441364] (1,354 samples, 1.50%)</title><rect x="615.4" y="1075.0" width="17.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="618.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.09%)</title><rect x="615.4" y="1059.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="618.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (80 samples, 0.09%)</title><rect x="615.4" y="1043.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="618.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.09%)</title><rect x="615.5" y="1027.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="618.5" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (64 samples, 0.07%)</title><rect x="615.6" y="1011.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="618.6" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (50 samples, 0.06%)</title><rect x="615.8" y="995.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="618.8" y="1006.0"></text>
</g>
<g>
<title>java.lang.Thread.run (1,260 samples, 1.40%)</title><rect x="616.6" y="1059.0" width="16.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="619.6" y="1070.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (1,260 samples, 1.40%)</title><rect x="616.6" y="1043.0" width="16.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="619.6" y="1054.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (1,260 samples, 1.40%)</title><rect x="616.6" y="1027.0" width="16.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="619.6" y="1038.0"></text>
</g>
<g>
<title>java.lang.Thread.interrupted (26 samples, 0.03%)</title><rect x="617.8" y="1011.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="620.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.Thread.isInterrupted (21 samples, 0.02%)</title><rect x="617.9" y="995.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="620.9" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (664 samples, 0.74%)</title><rect x="618.1" y="1011.0" width="8.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="621.1" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (651 samples, 0.72%)</title><rect x="618.3" y="995.0" width="8.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="621.3" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.network.WorkingReceiver$1.run (640 samples, 0.71%)</title><rect x="618.3" y="979.0" width="8.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="621.3" y="990.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.handleMessage (373 samples, 0.41%)</title><rect x="618.4" y="963.0" width="4.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="621.4" y="974.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.record (88 samples, 0.10%)</title><rect x="618.7" y="947.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="621.7" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer.put (85 samples, 0.09%)</title><rect x="618.7" y="931.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="621.7" y="942.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer.position (81 samples, 0.09%)</title><rect x="618.8" y="915.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="621.8" y="926.0"></text>
</g>
<g>
<title>java.nio.Buffer.position (81 samples, 0.09%)</title><rect x="618.8" y="899.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="621.8" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (80 samples, 0.09%)</title><rect x="618.8" y="883.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="621.8" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.firePeerReady (148 samples, 0.16%)</title><rect x="619.9" y="947.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="622.9" y="958.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.handlePeerReady (145 samples, 0.16%)</title><rect x="620.0" y="931.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="623.0" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.SharedTorrent.getRequestsCollection (54 samples, 0.06%)</title><rect x="620.0" y="915.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="623.0" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestStrategyImplAnyInteresting.choosePiece (43 samples, 0.05%)</title><rect x="620.1" y="899.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="623.1" y="910.0"></text>
</g>
<g>
<title>java.util.BitSet.get (24 samples, 0.03%)</title><rect x="620.4" y="883.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="623.4" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.strategy.RequestsCollectionImpl.sendAllRequests (89 samples, 0.10%)</title><rect x="620.7" y="915.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="623.7" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.downloadPiece (87 samples, 0.10%)</title><rect x="620.7" y="899.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="623.7" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.send (74 samples, 0.08%)</title><rect x="620.7" y="883.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="623.7" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionManager.offerWrite (69 samples, 0.08%)</title><rect x="620.8" y="867.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="623.8" y="878.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.offerWrite (68 samples, 0.08%)</title><rect x="620.8" y="851.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="623.8" y="862.0"></text>
</g>
<g>
<title>com.turn.ttorrent.network.ConnectionWorker.addTaskToQueue (68 samples, 0.08%)</title><rect x="620.8" y="835.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="623.8" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.offer (62 samples, 0.07%)</title><rect x="620.8" y="819.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="623.8" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos (42 samples, 0.05%)</title><rect x="620.8" y="803.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="623.8" y="814.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.peer.SharingPeer.removeBlockRequest (44 samples, 0.05%)</title><rect x="622.0" y="947.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="625.0" y="958.0"></text>
</g>
<g>
<title>java.lang.StringBuilder.append (24 samples, 0.03%)</title><rect x="622.7" y="947.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="625.7" y="958.0"></text>
</g>
<g>
<title>java.lang.String.valueOf (24 samples, 0.03%)</title><rect x="622.7" y="931.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="625.7" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.toString (24 samples, 0.03%)</title><rect x="622.7" y="915.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="625.7" y="926.0"></text>
</g>
<g>
<title>java.lang.String.format (22 samples, 0.02%)</title><rect x="622.8" y="899.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="625.8" y="910.0"></text>
</g>
<g>
<title>java.util.Formatter.format (21 samples, 0.02%)</title><rect x="622.8" y="883.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="625.8" y="894.0"></text>
</g>
<g>
<title>java.util.Formatter.format (21 samples, 0.02%)</title><rect x="622.8" y="867.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="625.8" y="878.0"></text>
</g>
<g>
<title>java.lang.Thread.setName (261 samples, 0.29%)</title><rect x="623.3" y="963.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="626.3" y="974.0"></text>
</g>
<g>
<title>java.lang.Thread.setNativeName (248 samples, 0.28%)</title><rect x="623.5" y="947.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="626.5" y="958.0"></text>
</g>
<g>
<title>JVM_SetNativeThreadName (74 samples, 0.08%)</title><rect x="624.0" y="931.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="627.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (62 samples, 0.07%)</title><rect x="624.1" y="915.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="627.1" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (40 samples, 0.04%)</title><rect x="624.4" y="899.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="627.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 0.13%)</title><rect x="625.0" y="931.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="628.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (43 samples, 0.05%)</title><rect x="625.0" y="915.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="628.0" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (29 samples, 0.03%)</title><rect x="625.2" y="899.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="628.2" y="910.0"></text>
</g>
<g>
<title>prctl (53 samples, 0.06%)</title><rect x="625.8" y="915.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="628.8" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.getTask (459 samples, 0.51%)</title><rect x="627.1" y="1011.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.1" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue.take (449 samples, 0.50%)</title><rect x="627.2" y="995.0" width="5.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="630.2" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (377 samples, 0.42%)</title><rect x="627.2" y="979.0" width="5.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="630.2" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (25 samples, 0.03%)</title><rect x="627.7" y="963.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="630.7" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (25 samples, 0.03%)</title><rect x="627.7" y="947.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="630.7" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.02%)</title><rect x="627.7" y="931.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="630.7" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (21 samples, 0.02%)</title><rect x="627.7" y="915.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="630.7" y="926.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (21 samples, 0.02%)</title><rect x="627.7" y="899.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="630.7" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.park (316 samples, 0.35%)</title><rect x="628.0" y="963.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="631.0" y="974.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.park (312 samples, 0.35%)</title><rect x="628.1" y="947.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="631.1" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (202 samples, 0.22%)</title><rect x="628.2" y="931.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="631.2" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (72 samples, 0.08%)</title><rect x="628.7" y="915.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="631.7" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (48 samples, 0.05%)</title><rect x="629.6" y="915.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="632.6" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (27 samples, 0.03%)</title><rect x="630.3" y="915.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="633.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 0.12%)</title><rect x="630.8" y="931.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="633.8" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (82 samples, 0.09%)</title><rect x="630.9" y="915.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="633.9" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (26 samples, 0.03%)</title><rect x="632.2" y="979.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="635.2" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (26 samples, 0.03%)</title><rect x="632.2" y="963.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="635.2" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock.unlock (41 samples, 0.05%)</title><rect x="632.5" y="979.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="635.5" y="990.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (40 samples, 0.04%)</title><rect x="632.5" y="963.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="635.5" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 0.04%)</title><rect x="632.5" y="947.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="635.5" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.LockSupport.unpark (40 samples, 0.04%)</title><rect x="632.5" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="635.5" y="942.0"></text>
</g>
<g>
<title>jdk.internal.misc.Unsafe.unpark (40 samples, 0.04%)</title><rect x="632.5" y="915.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="635.5" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (23 samples, 0.03%)</title><rect x="632.5" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="635.5" y="910.0"></text>
</g>
<g>
<title>[pool-2-thread-1 tid=441366] (4,204 samples, 4.66%)</title><rect x="633.1" y="1075.0" width="55.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="636.1" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,191 samples, 4.65%)</title><rect x="633.3" y="1059.0" width="54.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="636.3" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,191 samples, 4.65%)</title><rect x="633.3" y="1043.0" width="54.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="636.3" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,191 samples, 4.65%)</title><rect x="633.3" y="1027.0" width="54.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="636.3" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,180 samples, 4.64%)</title><rect x="633.4" y="1011.0" width="54.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="636.4" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,180 samples, 4.64%)</title><rect x="633.4" y="995.0" width="54.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="636.4" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,180 samples, 4.64%)</title><rect x="633.4" y="979.0" width="54.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="636.4" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,180 samples, 4.64%)</title><rect x="633.4" y="963.0" width="54.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="636.4" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,180 samples, 4.64%)</title><rect x="633.4" y="947.0" width="54.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="636.4" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (95 samples, 0.11%)</title><rect x="633.4" y="931.0" width="1.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="636.4" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (95 samples, 0.11%)</title><rect x="633.4" y="915.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="636.4" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (88 samples, 0.10%)</title><rect x="633.4" y="899.0" width="1.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="636.4" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (85 samples, 0.09%)</title><rect x="633.5" y="883.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="636.5" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (83 samples, 0.09%)</title><rect x="633.5" y="867.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="636.5" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (83 samples, 0.09%)</title><rect x="633.5" y="851.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="636.5" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (80 samples, 0.09%)</title><rect x="633.5" y="835.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="636.5" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (79 samples, 0.09%)</title><rect x="633.5" y="819.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="636.5" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (76 samples, 0.08%)</title><rect x="633.5" y="803.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="636.5" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (76 samples, 0.08%)</title><rect x="633.5" y="787.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="636.5" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (76 samples, 0.08%)</title><rect x="633.5" y="771.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="636.5" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,072 samples, 4.52%)</title><rect x="634.6" y="931.0" width="53.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="637.6" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,070 samples, 4.51%)</title><rect x="634.7" y="915.0" width="53.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="637.7" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,070 samples, 4.51%)</title><rect x="634.7" y="899.0" width="53.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="637.7" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,070 samples, 4.51%)</title><rect x="634.7" y="883.0" width="53.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="637.7" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,050 samples, 4.49%)</title><rect x="634.7" y="867.0" width="53.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="637.7" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,049 samples, 4.49%)</title><rect x="634.7" y="851.0" width="53.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="637.7" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,049 samples, 4.49%)</title><rect x="634.7" y="835.0" width="53.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="637.7" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,048 samples, 4.49%)</title><rect x="634.7" y="819.0" width="53.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="637.7" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,046 samples, 4.49%)</title><rect x="634.7" y="803.0" width="53.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="637.7" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,042 samples, 4.48%)</title><rect x="634.7" y="787.0" width="52.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="637.7" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,023 samples, 4.46%)</title><rect x="634.9" y="771.0" width="52.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="637.9" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,807 samples, 4.22%)</title><rect x="635.1" y="755.0" width="49.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="638.1" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (203 samples, 0.23%)</title><rect x="684.9" y="755.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="687.9" y="766.0"></text>
</g>
<g>
<title>java.util.Objects.requireNonNull (25 samples, 0.03%)</title><rect x="685.0" y="739.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="688.0" y="750.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (170 samples, 0.19%)</title><rect x="685.4" y="739.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="688.4" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (20 samples, 0.02%)</title><rect x="687.7" y="867.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="690.7" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (20 samples, 0.02%)</title><rect x="687.7" y="851.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="690.7" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (20 samples, 0.02%)</title><rect x="687.7" y="835.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="690.7" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-10 tid=441375] (4,277 samples, 4.74%)</title><rect x="688.2" y="1075.0" width="55.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="691.2" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,255 samples, 4.72%)</title><rect x="688.5" y="1059.0" width="55.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="691.5" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,255 samples, 4.72%)</title><rect x="688.5" y="1043.0" width="55.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="691.5" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,255 samples, 4.72%)</title><rect x="688.5" y="1027.0" width="55.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="691.5" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,248 samples, 4.71%)</title><rect x="688.5" y="1011.0" width="55.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="691.5" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,248 samples, 4.71%)</title><rect x="688.5" y="995.0" width="55.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="691.5" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,248 samples, 4.71%)</title><rect x="688.5" y="979.0" width="55.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="691.5" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,248 samples, 4.71%)</title><rect x="688.5" y="963.0" width="55.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="691.5" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,248 samples, 4.71%)</title><rect x="688.5" y="947.0" width="55.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="691.5" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (96 samples, 0.11%)</title><rect x="688.5" y="931.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="691.5" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (96 samples, 0.11%)</title><rect x="688.5" y="915.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="691.5" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (95 samples, 0.11%)</title><rect x="688.5" y="899.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="691.5" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (92 samples, 0.10%)</title><rect x="688.5" y="883.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="691.5" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (91 samples, 0.10%)</title><rect x="688.6" y="867.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="691.6" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (91 samples, 0.10%)</title><rect x="688.6" y="851.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="691.6" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (89 samples, 0.10%)</title><rect x="688.6" y="835.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="691.6" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (87 samples, 0.10%)</title><rect x="688.6" y="819.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="691.6" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (86 samples, 0.10%)</title><rect x="688.6" y="803.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="691.6" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (86 samples, 0.10%)</title><rect x="688.6" y="787.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="691.6" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (86 samples, 0.10%)</title><rect x="688.6" y="771.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="691.6" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,103 samples, 4.55%)</title><rect x="689.8" y="931.0" width="53.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="692.8" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,103 samples, 4.55%)</title><rect x="689.8" y="915.0" width="53.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="692.8" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,103 samples, 4.55%)</title><rect x="689.8" y="899.0" width="53.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="692.8" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,103 samples, 4.55%)</title><rect x="689.8" y="883.0" width="53.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="692.8" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,076 samples, 4.52%)</title><rect x="689.8" y="867.0" width="53.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="692.8" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,076 samples, 4.52%)</title><rect x="689.8" y="851.0" width="53.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="692.8" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,076 samples, 4.52%)</title><rect x="689.8" y="835.0" width="53.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="692.8" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,076 samples, 4.52%)</title><rect x="689.8" y="819.0" width="53.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="692.8" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,076 samples, 4.52%)</title><rect x="689.8" y="803.0" width="53.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="692.8" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,075 samples, 4.52%)</title><rect x="689.8" y="787.0" width="53.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="692.8" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,062 samples, 4.51%)</title><rect x="689.9" y="771.0" width="53.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="692.9" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,847 samples, 4.27%)</title><rect x="690.1" y="755.0" width="50.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="693.1" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (200 samples, 0.22%)</title><rect x="740.5" y="755.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="743.5" y="766.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (183 samples, 0.20%)</title><rect x="740.7" y="739.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="743.7" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (27 samples, 0.03%)</title><rect x="743.1" y="867.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="746.1" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (27 samples, 0.03%)</title><rect x="743.1" y="851.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="746.1" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (27 samples, 0.03%)</title><rect x="743.1" y="835.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="746.1" y="846.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.TrackerClient.announceAllInterfaces (30 samples, 0.03%)</title><rect x="743.6" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="746.6" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.announce (30 samples, 0.03%)</title><rect x="743.6" y="915.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="746.6" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.sendAnnounce (30 samples, 0.03%)</title><rect x="743.6" y="899.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="746.6" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.sendAnnounce (30 samples, 0.03%)</title><rect x="743.6" y="883.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="746.6" y="894.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.openConnectionCheckRedirects (29 samples, 0.03%)</title><rect x="743.6" y="867.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="746.6" y="878.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode (28 samples, 0.03%)</title><rect x="743.6" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="746.6" y="862.0"></text>
</g>
<g>
<title>java.net.HttpURLConnection.getResponseCode (28 samples, 0.03%)</title><rect x="743.6" y="835.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="746.6" y="846.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getInputStream (28 samples, 0.03%)</title><rect x="743.6" y="819.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="746.6" y="830.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getInputStream0 (28 samples, 0.03%)</title><rect x="743.6" y="803.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="746.6" y="814.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect (28 samples, 0.03%)</title><rect x="743.6" y="787.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="746.6" y="798.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsClient.afterConnect (28 samples, 0.03%)</title><rect x="743.6" y="771.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="746.6" y="782.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.startHandshake (28 samples, 0.03%)</title><rect x="743.6" y="755.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="746.6" y="766.0"></text>
</g>
<g>
<title>[pool-2-thread-2 tid=441367] (4,201 samples, 4.66%)</title><rect x="744.1" y="1075.0" width="55.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="747.1" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,195 samples, 4.65%)</title><rect x="744.2" y="1059.0" width="54.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="747.2" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,195 samples, 4.65%)</title><rect x="744.2" y="1043.0" width="54.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="747.2" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,195 samples, 4.65%)</title><rect x="744.2" y="1027.0" width="54.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="747.2" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,189 samples, 4.65%)</title><rect x="744.2" y="1011.0" width="54.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="747.2" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,188 samples, 4.65%)</title><rect x="744.3" y="995.0" width="54.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="747.3" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,187 samples, 4.64%)</title><rect x="744.3" y="979.0" width="54.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="747.3" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,186 samples, 4.64%)</title><rect x="744.3" y="963.0" width="54.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="747.3" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,186 samples, 4.64%)</title><rect x="744.3" y="947.0" width="54.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="747.3" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (75 samples, 0.08%)</title><rect x="744.5" y="931.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="747.5" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (75 samples, 0.08%)</title><rect x="744.5" y="915.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="747.5" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (73 samples, 0.08%)</title><rect x="744.5" y="899.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="747.5" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (73 samples, 0.08%)</title><rect x="744.5" y="883.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="747.5" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (72 samples, 0.08%)</title><rect x="744.5" y="867.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="747.5" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (72 samples, 0.08%)</title><rect x="744.5" y="851.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="747.5" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (71 samples, 0.08%)</title><rect x="744.5" y="835.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="747.5" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (68 samples, 0.08%)</title><rect x="744.5" y="819.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="747.5" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (68 samples, 0.08%)</title><rect x="744.5" y="803.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="747.5" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (68 samples, 0.08%)</title><rect x="744.5" y="787.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="747.5" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (68 samples, 0.08%)</title><rect x="744.5" y="771.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="747.5" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,082 samples, 4.53%)</title><rect x="745.5" y="931.0" width="53.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="748.5" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,082 samples, 4.53%)</title><rect x="745.5" y="915.0" width="53.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="748.5" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,082 samples, 4.53%)</title><rect x="745.5" y="899.0" width="53.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="748.5" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,082 samples, 4.53%)</title><rect x="745.5" y="883.0" width="53.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="748.5" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,054 samples, 4.50%)</title><rect x="745.5" y="867.0" width="53.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="748.5" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,052 samples, 4.49%)</title><rect x="745.5" y="851.0" width="53.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="748.5" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,052 samples, 4.49%)</title><rect x="745.5" y="835.0" width="53.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="748.5" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,052 samples, 4.49%)</title><rect x="745.5" y="819.0" width="53.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="748.5" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,047 samples, 4.49%)</title><rect x="745.5" y="803.0" width="53.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="748.5" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,045 samples, 4.49%)</title><rect x="745.5" y="787.0" width="53.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="748.5" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,035 samples, 4.48%)</title><rect x="745.7" y="771.0" width="52.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="748.7" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,821 samples, 4.24%)</title><rect x="745.9" y="755.0" width="50.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="748.9" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (197 samples, 0.22%)</title><rect x="795.9" y="755.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="798.9" y="766.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (164 samples, 0.18%)</title><rect x="796.3" y="739.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="799.3" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (28 samples, 0.03%)</title><rect x="798.5" y="867.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="801.5" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (28 samples, 0.03%)</title><rect x="798.5" y="851.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="801.5" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (28 samples, 0.03%)</title><rect x="798.5" y="835.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="801.5" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-3 tid=441368] (4,171 samples, 4.63%)</title><rect x="799.1" y="1075.0" width="54.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="802.1" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,166 samples, 4.62%)</title><rect x="799.2" y="1059.0" width="54.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="802.2" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,166 samples, 4.62%)</title><rect x="799.2" y="1043.0" width="54.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="802.2" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,166 samples, 4.62%)</title><rect x="799.2" y="1027.0" width="54.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="802.2" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,157 samples, 4.61%)</title><rect x="799.3" y="1011.0" width="54.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="802.3" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,157 samples, 4.61%)</title><rect x="799.3" y="995.0" width="54.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="802.3" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,157 samples, 4.61%)</title><rect x="799.3" y="979.0" width="54.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="802.3" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,157 samples, 4.61%)</title><rect x="799.3" y="963.0" width="54.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="802.3" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,157 samples, 4.61%)</title><rect x="799.3" y="947.0" width="54.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="802.3" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (99 samples, 0.11%)</title><rect x="799.4" y="931.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="802.4" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (99 samples, 0.11%)</title><rect x="799.4" y="915.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="802.4" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (96 samples, 0.11%)</title><rect x="799.4" y="899.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="802.4" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (93 samples, 0.10%)</title><rect x="799.4" y="883.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="802.4" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (88 samples, 0.10%)</title><rect x="799.5" y="867.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="802.5" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (88 samples, 0.10%)</title><rect x="799.5" y="851.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="802.5" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (85 samples, 0.09%)</title><rect x="799.5" y="835.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="802.5" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (82 samples, 0.09%)</title><rect x="799.6" y="819.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="802.6" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (81 samples, 0.09%)</title><rect x="799.6" y="803.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="802.6" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (81 samples, 0.09%)</title><rect x="799.6" y="787.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="802.6" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (81 samples, 0.09%)</title><rect x="799.6" y="771.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="802.6" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,036 samples, 4.48%)</title><rect x="800.7" y="931.0" width="52.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="803.7" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,036 samples, 4.48%)</title><rect x="800.7" y="915.0" width="52.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="803.7" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,036 samples, 4.48%)</title><rect x="800.7" y="899.0" width="52.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="803.7" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,036 samples, 4.48%)</title><rect x="800.7" y="883.0" width="52.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="803.7" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,015 samples, 4.45%)</title><rect x="800.7" y="867.0" width="52.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="803.7" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,015 samples, 4.45%)</title><rect x="800.7" y="851.0" width="52.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="803.7" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,015 samples, 4.45%)</title><rect x="800.7" y="835.0" width="52.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="803.7" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,015 samples, 4.45%)</title><rect x="800.7" y="819.0" width="52.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="803.7" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,012 samples, 4.45%)</title><rect x="800.7" y="803.0" width="52.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="803.7" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,010 samples, 4.45%)</title><rect x="800.7" y="787.0" width="52.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="803.7" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (3,999 samples, 4.44%)</title><rect x="800.8" y="771.0" width="52.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="803.8" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,793 samples, 4.21%)</title><rect x="801.1" y="755.0" width="49.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="804.1" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (188 samples, 0.21%)</title><rect x="850.7" y="755.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="853.7" y="766.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (163 samples, 0.18%)</title><rect x="851.0" y="739.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="854.0" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (21 samples, 0.02%)</title><rect x="853.2" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="856.2" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (21 samples, 0.02%)</title><rect x="853.2" y="851.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="856.2" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (21 samples, 0.02%)</title><rect x="853.2" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="856.2" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-4 tid=441369] (4,156 samples, 4.61%)</title><rect x="853.7" y="1075.0" width="54.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="856.7" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,146 samples, 4.60%)</title><rect x="853.8" y="1059.0" width="54.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="856.8" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,146 samples, 4.60%)</title><rect x="853.8" y="1043.0" width="54.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="856.8" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,146 samples, 4.60%)</title><rect x="853.8" y="1027.0" width="54.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="856.8" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,141 samples, 4.59%)</title><rect x="853.8" y="1011.0" width="54.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="856.8" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,141 samples, 4.59%)</title><rect x="853.8" y="995.0" width="54.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="856.8" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,141 samples, 4.59%)</title><rect x="853.8" y="979.0" width="54.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="856.8" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,141 samples, 4.59%)</title><rect x="853.8" y="963.0" width="54.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="856.8" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,141 samples, 4.59%)</title><rect x="853.8" y="947.0" width="54.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="856.8" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (90 samples, 0.10%)</title><rect x="854.0" y="931.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="857.0" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (89 samples, 0.10%)</title><rect x="854.0" y="915.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="857.0" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (87 samples, 0.10%)</title><rect x="854.0" y="899.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="857.0" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (87 samples, 0.10%)</title><rect x="854.0" y="883.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="857.0" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (85 samples, 0.09%)</title><rect x="854.1" y="867.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="857.1" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (84 samples, 0.09%)</title><rect x="854.1" y="851.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="857.1" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (81 samples, 0.09%)</title><rect x="854.1" y="835.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="857.1" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (79 samples, 0.09%)</title><rect x="854.2" y="819.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="857.2" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (78 samples, 0.09%)</title><rect x="854.2" y="803.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="857.2" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (78 samples, 0.09%)</title><rect x="854.2" y="787.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="857.2" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (78 samples, 0.09%)</title><rect x="854.2" y="771.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="857.2" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,022 samples, 4.46%)</title><rect x="855.2" y="931.0" width="52.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="858.2" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,021 samples, 4.46%)</title><rect x="855.2" y="915.0" width="52.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="858.2" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,021 samples, 4.46%)</title><rect x="855.2" y="899.0" width="52.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="858.2" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,021 samples, 4.46%)</title><rect x="855.2" y="883.0" width="52.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="858.2" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (3,995 samples, 4.43%)</title><rect x="855.2" y="867.0" width="52.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="858.2" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (3,995 samples, 4.43%)</title><rect x="855.2" y="851.0" width="52.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="858.2" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (3,995 samples, 4.43%)</title><rect x="855.2" y="835.0" width="52.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="858.2" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (3,994 samples, 4.43%)</title><rect x="855.2" y="819.0" width="52.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="858.2" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (3,990 samples, 4.43%)</title><rect x="855.3" y="803.0" width="52.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="858.3" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (3,988 samples, 4.42%)</title><rect x="855.3" y="787.0" width="52.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="858.3" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (3,972 samples, 4.41%)</title><rect x="855.5" y="771.0" width="52.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="858.5" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,745 samples, 4.15%)</title><rect x="855.7" y="755.0" width="49.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="858.7" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (209 samples, 0.23%)</title><rect x="904.7" y="755.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="907.7" y="766.0"></text>
</g>
<g>
<title>java.util.Objects.requireNonNull (23 samples, 0.03%)</title><rect x="904.8" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="907.8" y="750.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (182 samples, 0.20%)</title><rect x="905.1" y="739.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="908.1" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (26 samples, 0.03%)</title><rect x="907.5" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="910.5" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (26 samples, 0.03%)</title><rect x="907.5" y="851.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="910.5" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (26 samples, 0.03%)</title><rect x="907.5" y="835.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="910.5" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-5 tid=441370] (4,263 samples, 4.73%)</title><rect x="908.1" y="1075.0" width="55.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="911.1" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,256 samples, 4.72%)</title><rect x="908.2" y="1059.0" width="55.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="911.2" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,256 samples, 4.72%)</title><rect x="908.2" y="1043.0" width="55.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="911.2" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,256 samples, 4.72%)</title><rect x="908.2" y="1027.0" width="55.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="911.2" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,244 samples, 4.71%)</title><rect x="908.3" y="1011.0" width="55.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="911.3" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,244 samples, 4.71%)</title><rect x="908.3" y="995.0" width="55.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="911.3" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,244 samples, 4.71%)</title><rect x="908.3" y="979.0" width="55.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="911.3" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,244 samples, 4.71%)</title><rect x="908.3" y="963.0" width="55.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="911.3" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,244 samples, 4.71%)</title><rect x="908.3" y="947.0" width="55.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="911.3" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (84 samples, 0.09%)</title><rect x="908.4" y="931.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="911.4" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (84 samples, 0.09%)</title><rect x="908.4" y="915.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="911.4" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (82 samples, 0.09%)</title><rect x="908.4" y="899.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="911.4" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (82 samples, 0.09%)</title><rect x="908.4" y="883.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="911.4" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (81 samples, 0.09%)</title><rect x="908.4" y="867.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="911.4" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (79 samples, 0.09%)</title><rect x="908.4" y="851.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="911.4" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (77 samples, 0.09%)</title><rect x="908.5" y="835.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="911.5" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (75 samples, 0.08%)</title><rect x="908.5" y="819.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="911.5" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (74 samples, 0.08%)</title><rect x="908.5" y="803.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="911.5" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (74 samples, 0.08%)</title><rect x="908.5" y="787.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="911.5" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (74 samples, 0.08%)</title><rect x="908.5" y="771.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="911.5" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,134 samples, 4.59%)</title><rect x="909.5" y="931.0" width="54.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="912.5" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,133 samples, 4.58%)</title><rect x="909.5" y="915.0" width="54.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="912.5" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,133 samples, 4.58%)</title><rect x="909.5" y="899.0" width="54.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="912.5" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,133 samples, 4.58%)</title><rect x="909.5" y="883.0" width="54.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="912.5" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,109 samples, 4.56%)</title><rect x="909.5" y="867.0" width="53.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="912.5" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,108 samples, 4.56%)</title><rect x="909.5" y="851.0" width="53.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="912.5" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,108 samples, 4.56%)</title><rect x="909.5" y="835.0" width="53.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="912.5" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,108 samples, 4.56%)</title><rect x="909.5" y="819.0" width="53.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="912.5" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,104 samples, 4.55%)</title><rect x="909.6" y="803.0" width="53.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="912.6" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,096 samples, 4.54%)</title><rect x="909.7" y="787.0" width="53.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="912.7" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,084 samples, 4.53%)</title><rect x="909.8" y="771.0" width="53.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="912.8" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,861 samples, 4.28%)</title><rect x="910.1" y="755.0" width="50.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="913.1" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (204 samples, 0.23%)</title><rect x="960.6" y="755.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="963.6" y="766.0"></text>
</g>
<g>
<title>java.util.Objects.requireNonNull (20 samples, 0.02%)</title><rect x="960.8" y="739.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="963.8" y="750.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (171 samples, 0.19%)</title><rect x="961.0" y="739.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="964.0" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (24 samples, 0.03%)</title><rect x="963.3" y="867.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="966.3" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (24 samples, 0.03%)</title><rect x="963.3" y="851.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="966.3" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (23 samples, 0.03%)</title><rect x="963.3" y="835.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="966.3" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-6 tid=441371] (4,338 samples, 4.81%)</title><rect x="963.9" y="1075.0" width="56.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="966.9" y="1086.0">[pool-..</text>
</g>
<g>
<title>java.lang.Thread.run (4,321 samples, 4.79%)</title><rect x="964.1" y="1059.0" width="56.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="967.1" y="1070.0">java.l..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,321 samples, 4.79%)</title><rect x="964.1" y="1043.0" width="56.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="967.1" y="1054.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,321 samples, 4.79%)</title><rect x="964.1" y="1027.0" width="56.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="967.1" y="1038.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,308 samples, 4.78%)</title><rect x="964.2" y="1011.0" width="56.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="967.2" y="1022.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,308 samples, 4.78%)</title><rect x="964.2" y="995.0" width="56.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="967.2" y="1006.0">java.u..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,308 samples, 4.78%)</title><rect x="964.2" y="979.0" width="56.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="967.2" y="990.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,308 samples, 4.78%)</title><rect x="964.2" y="963.0" width="56.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="967.2" y="974.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,308 samples, 4.78%)</title><rect x="964.2" y="947.0" width="56.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="967.2" y="958.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (83 samples, 0.09%)</title><rect x="964.3" y="931.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="967.3" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (83 samples, 0.09%)</title><rect x="964.3" y="915.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="967.3" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (80 samples, 0.09%)</title><rect x="964.4" y="899.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="967.4" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (79 samples, 0.09%)</title><rect x="964.4" y="883.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="967.4" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (78 samples, 0.09%)</title><rect x="964.4" y="867.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="967.4" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (78 samples, 0.09%)</title><rect x="964.4" y="851.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="967.4" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (75 samples, 0.08%)</title><rect x="964.4" y="835.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="967.4" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (72 samples, 0.08%)</title><rect x="964.4" y="819.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="967.4" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (72 samples, 0.08%)</title><rect x="964.4" y="803.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="967.4" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (71 samples, 0.08%)</title><rect x="964.4" y="787.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="967.4" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (71 samples, 0.08%)</title><rect x="964.4" y="771.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="967.4" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,202 samples, 4.66%)</title><rect x="965.4" y="931.0" width="55.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="968.4" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,202 samples, 4.66%)</title><rect x="965.4" y="915.0" width="55.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="968.4" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,202 samples, 4.66%)</title><rect x="965.4" y="899.0" width="55.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="968.4" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,202 samples, 4.66%)</title><rect x="965.4" y="883.0" width="55.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="968.4" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,177 samples, 4.63%)</title><rect x="965.4" y="867.0" width="54.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="968.4" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,173 samples, 4.63%)</title><rect x="965.5" y="851.0" width="54.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="968.5" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,173 samples, 4.63%)</title><rect x="965.5" y="835.0" width="54.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="968.5" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,173 samples, 4.63%)</title><rect x="965.5" y="819.0" width="54.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="968.5" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,170 samples, 4.63%)</title><rect x="965.5" y="803.0" width="54.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="968.5" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,167 samples, 4.62%)</title><rect x="965.5" y="787.0" width="54.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="968.5" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,150 samples, 4.60%)</title><rect x="965.7" y="771.0" width="54.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="968.7" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,937 samples, 4.37%)</title><rect x="966.0" y="755.0" width="51.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="969.0" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (191 samples, 0.21%)</title><rect x="1017.5" y="755.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1020.5" y="766.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (160 samples, 0.18%)</title><rect x="1018.0" y="739.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1021.0" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (25 samples, 0.03%)</title><rect x="1020.1" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1023.1" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (25 samples, 0.03%)</title><rect x="1020.1" y="851.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1023.1" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (25 samples, 0.03%)</title><rect x="1020.1" y="835.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1023.1" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-7 tid=441372] (4,170 samples, 4.63%)</title><rect x="1020.7" y="1075.0" width="54.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1023.7" y="1086.0">[pool..</text>
</g>
<g>
<title>java.lang.Thread.run (4,159 samples, 4.61%)</title><rect x="1020.8" y="1059.0" width="54.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1023.8" y="1070.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,159 samples, 4.61%)</title><rect x="1020.8" y="1043.0" width="54.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1023.8" y="1054.0">java...</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,159 samples, 4.61%)</title><rect x="1020.8" y="1027.0" width="54.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1023.8" y="1038.0">java...</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,149 samples, 4.60%)</title><rect x="1020.9" y="1011.0" width="54.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1023.9" y="1022.0">java...</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,149 samples, 4.60%)</title><rect x="1020.9" y="995.0" width="54.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1023.9" y="1006.0">java...</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,149 samples, 4.60%)</title><rect x="1020.9" y="979.0" width="54.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1023.9" y="990.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,149 samples, 4.60%)</title><rect x="1020.9" y="963.0" width="54.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1023.9" y="974.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,149 samples, 4.60%)</title><rect x="1020.9" y="947.0" width="54.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1023.9" y="958.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (87 samples, 0.10%)</title><rect x="1020.9" y="931.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1023.9" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (87 samples, 0.10%)</title><rect x="1020.9" y="915.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1023.9" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (87 samples, 0.10%)</title><rect x="1020.9" y="899.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1023.9" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (87 samples, 0.10%)</title><rect x="1020.9" y="883.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1023.9" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (86 samples, 0.10%)</title><rect x="1021.0" y="867.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1024.0" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (86 samples, 0.10%)</title><rect x="1021.0" y="851.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1024.0" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (84 samples, 0.09%)</title><rect x="1021.0" y="835.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1024.0" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (81 samples, 0.09%)</title><rect x="1021.0" y="819.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1024.0" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (81 samples, 0.09%)</title><rect x="1021.0" y="803.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1024.0" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (81 samples, 0.09%)</title><rect x="1021.0" y="787.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1024.0" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (81 samples, 0.09%)</title><rect x="1021.0" y="771.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1024.0" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,042 samples, 4.48%)</title><rect x="1022.1" y="931.0" width="52.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1025.1" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,041 samples, 4.48%)</title><rect x="1022.1" y="915.0" width="52.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1025.1" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,041 samples, 4.48%)</title><rect x="1022.1" y="899.0" width="52.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1025.1" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,041 samples, 4.48%)</title><rect x="1022.1" y="883.0" width="52.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1025.1" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,022 samples, 4.46%)</title><rect x="1022.1" y="867.0" width="52.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1025.1" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,022 samples, 4.46%)</title><rect x="1022.1" y="851.0" width="52.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1025.1" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,022 samples, 4.46%)</title><rect x="1022.1" y="835.0" width="52.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1025.1" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,022 samples, 4.46%)</title><rect x="1022.1" y="819.0" width="52.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1025.1" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,020 samples, 4.46%)</title><rect x="1022.1" y="803.0" width="52.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1025.1" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,018 samples, 4.46%)</title><rect x="1022.1" y="787.0" width="52.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1025.1" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,003 samples, 4.44%)</title><rect x="1022.3" y="771.0" width="52.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1025.3" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,813 samples, 4.23%)</title><rect x="1022.5" y="755.0" width="49.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1025.5" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (174 samples, 0.19%)</title><rect x="1072.4" y="755.0" width="2.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1075.4" y="766.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (153 samples, 0.17%)</title><rect x="1072.7" y="739.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1075.7" y="750.0"></text>
</g>
<g>
<title>[pool-2-thread-8 tid=441373] (4,305 samples, 4.78%)</title><rect x="1075.3" y="1075.0" width="56.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1078.3" y="1086.0">[pool-..</text>
</g>
<g>
<title>java.lang.Thread.run (4,296 samples, 4.77%)</title><rect x="1075.4" y="1059.0" width="56.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1078.4" y="1070.0">java.l..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,296 samples, 4.77%)</title><rect x="1075.4" y="1043.0" width="56.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1078.4" y="1054.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,296 samples, 4.77%)</title><rect x="1075.4" y="1027.0" width="56.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1078.4" y="1038.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,287 samples, 4.76%)</title><rect x="1075.4" y="1011.0" width="56.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1078.4" y="1022.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,287 samples, 4.76%)</title><rect x="1075.4" y="995.0" width="56.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1078.4" y="1006.0">java.u..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,287 samples, 4.76%)</title><rect x="1075.4" y="979.0" width="56.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1078.4" y="990.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,287 samples, 4.76%)</title><rect x="1075.4" y="963.0" width="56.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1078.4" y="974.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,287 samples, 4.76%)</title><rect x="1075.4" y="947.0" width="56.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1078.4" y="958.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (101 samples, 0.11%)</title><rect x="1075.5" y="931.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1078.5" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (100 samples, 0.11%)</title><rect x="1075.5" y="915.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1078.5" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (97 samples, 0.11%)</title><rect x="1075.5" y="899.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1078.5" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (95 samples, 0.11%)</title><rect x="1075.5" y="883.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1078.5" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (93 samples, 0.10%)</title><rect x="1075.5" y="867.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1078.5" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (93 samples, 0.10%)</title><rect x="1075.5" y="851.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1078.5" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (89 samples, 0.10%)</title><rect x="1075.6" y="835.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1078.6" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (86 samples, 0.10%)</title><rect x="1075.6" y="819.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1078.6" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (85 samples, 0.09%)</title><rect x="1075.6" y="803.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1078.6" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (85 samples, 0.09%)</title><rect x="1075.6" y="787.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1078.6" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (85 samples, 0.09%)</title><rect x="1075.6" y="771.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1078.6" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,161 samples, 4.62%)</title><rect x="1076.8" y="931.0" width="54.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1079.8" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,160 samples, 4.61%)</title><rect x="1076.8" y="915.0" width="54.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1079.8" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,160 samples, 4.61%)</title><rect x="1076.8" y="899.0" width="54.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1079.8" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,160 samples, 4.61%)</title><rect x="1076.8" y="883.0" width="54.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1079.8" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,135 samples, 4.59%)</title><rect x="1076.8" y="867.0" width="54.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1079.8" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,134 samples, 4.59%)</title><rect x="1076.8" y="851.0" width="54.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1079.8" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,134 samples, 4.59%)</title><rect x="1076.8" y="835.0" width="54.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1079.8" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,134 samples, 4.59%)</title><rect x="1076.8" y="819.0" width="54.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1079.8" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,134 samples, 4.59%)</title><rect x="1076.8" y="803.0" width="54.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1079.8" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,129 samples, 4.58%)</title><rect x="1076.9" y="787.0" width="54.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1079.9" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,113 samples, 4.56%)</title><rect x="1077.0" y="771.0" width="53.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1080.0" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,892 samples, 4.32%)</title><rect x="1077.3" y="755.0" width="50.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1080.3" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (200 samples, 0.22%)</title><rect x="1128.2" y="755.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1131.2" y="766.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (176 samples, 0.20%)</title><rect x="1128.5" y="739.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1131.5" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (25 samples, 0.03%)</title><rect x="1130.9" y="867.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1133.9" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (25 samples, 0.03%)</title><rect x="1130.9" y="851.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1133.9" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (25 samples, 0.03%)</title><rect x="1130.9" y="835.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1133.9" y="846.0"></text>
</g>
<g>
<title>[pool-2-thread-9 tid=441374] (4,310 samples, 4.78%)</title><rect x="1131.6" y="1075.0" width="56.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1134.6" y="1086.0">[pool-..</text>
</g>
<g>
<title>java.lang.Thread.run (4,300 samples, 4.77%)</title><rect x="1131.7" y="1059.0" width="56.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1134.7" y="1070.0">java.l..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (4,300 samples, 4.77%)</title><rect x="1131.7" y="1043.0" width="56.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1134.7" y="1054.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (4,300 samples, 4.77%)</title><rect x="1131.7" y="1027.0" width="56.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1134.7" y="1038.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.FutureTask.run (4,289 samples, 4.76%)</title><rect x="1131.8" y="1011.0" width="56.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1134.8" y="1022.0">java.u..</text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter.call (4,287 samples, 4.76%)</title><rect x="1131.8" y="995.0" width="56.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1134.8" y="1006.0">java.u..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager$1.run (4,287 samples, 4.76%)</title><rect x="1131.8" y="979.0" width="56.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1134.8" y="990.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.access$000 (4,287 samples, 4.76%)</title><rect x="1131.8" y="963.0" width="56.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1134.8" y="974.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.CommunicationManager.validatePieceAsync (4,287 samples, 4.76%)</title><rect x="1131.8" y="947.0" width="56.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1134.8" y="958.0">com.tu..</text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.finish (87 samples, 0.10%)</title><rect x="1131.9" y="931.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1134.9" y="942.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.PieceStorageImpl.savePiece (87 samples, 0.10%)</title><rect x="1131.9" y="915.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1134.9" y="926.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileCollectionStorage.write (87 samples, 0.10%)</title><rect x="1131.9" y="899.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1134.9" y="910.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.storage.FileStorage.write (84 samples, 0.09%)</title><rect x="1131.9" y="883.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1134.9" y="894.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.write (83 samples, 0.09%)</title><rect x="1132.0" y="867.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1135.0" y="878.0"></text>
</g>
<g>
<title>sun.nio.ch.FileChannelImpl.writeInternal (82 samples, 0.09%)</title><rect x="1132.0" y="851.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1135.0" y="862.0"></text>
</g>
<g>
<title>sun.nio.ch.IOUtil.write (81 samples, 0.09%)</title><rect x="1132.0" y="835.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1135.0" y="846.0"></text>
</g>
<g>
<title>sun.nio.ch.Util.getTemporaryDirectBuffer (78 samples, 0.09%)</title><rect x="1132.0" y="819.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1135.0" y="830.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal.get (77 samples, 0.09%)</title><rect x="1132.0" y="803.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1135.0" y="814.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (77 samples, 0.09%)</title><rect x="1132.0" y="787.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1135.0" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (77 samples, 0.09%)</title><rect x="1132.0" y="771.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1135.0" y="782.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.Piece.validate (4,183 samples, 4.64%)</title><rect x="1133.0" y="931.0" width="54.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1136.0" y="942.0">com.t..</text>
</g>
<g>
<title>com.turn.ttorrent.common.TorrentUtils.calculateSha1Hash (4,182 samples, 4.64%)</title><rect x="1133.1" y="915.0" width="54.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1136.1" y="926.0">com.t..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha (4,182 samples, 4.64%)</title><rect x="1133.1" y="899.0" width="54.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1136.1" y="910.0">org.a..</text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.sha1 (4,182 samples, 4.64%)</title><rect x="1133.1" y="883.0" width="54.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1136.1" y="894.0">org.a..</text>
</g>
<g>
<title>java.security.MessageDigest.digest (4,158 samples, 4.61%)</title><rect x="1133.1" y="867.0" width="54.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1136.1" y="878.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest.update (4,156 samples, 4.61%)</title><rect x="1133.1" y="851.0" width="54.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1136.1" y="862.0">java...</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate.engineUpdate (4,156 samples, 4.61%)</title><rect x="1133.1" y="835.0" width="54.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1136.1" y="846.0">java...</text>
</g>
<g>
<title>sun.security.provider.DigestBase.engineUpdate (4,156 samples, 4.61%)</title><rect x="1133.1" y="819.0" width="54.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1136.1" y="830.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock (4,152 samples, 4.61%)</title><rect x="1133.1" y="803.0" width="54.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1136.1" y="814.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.DigestBase.implCompressMultiBlock0 (4,144 samples, 4.60%)</title><rect x="1133.2" y="787.0" width="54.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1136.2" y="798.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress (4,129 samples, 4.58%)</title><rect x="1133.4" y="771.0" width="54.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1136.4" y="782.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompress0 (3,917 samples, 4.34%)</title><rect x="1133.6" y="755.0" width="51.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1136.6" y="766.0">sun.s..</text>
</g>
<g>
<title>sun.security.provider.SHA.implCompressCheck (191 samples, 0.21%)</title><rect x="1184.9" y="755.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>java.util.Objects.requireNonNull (21 samples, 0.02%)</title><rect x="1185.0" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1188.0" y="750.0"></text>
</g>
<g>
<title>sun.security.provider.ByteArrayAccess.b2iBig64 (160 samples, 0.18%)</title><rect x="1185.3" y="739.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1188.3" y="750.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getSha1Digest (24 samples, 0.03%)</title><rect x="1187.5" y="867.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>org.apache.commons.codec.digest.DigestUtils.getDigest (24 samples, 0.03%)</title><rect x="1187.5" y="851.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1190.5" y="862.0"></text>
</g>
<g>
<title>java.security.MessageDigest.getInstance (24 samples, 0.03%)</title><rect x="1187.5" y="835.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1190.5" y="846.0"></text>
</g>
<g>
<title>[tid=441322] (82 samples, 0.09%)</title><rect x="1188.2" y="1075.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1191.2" y="1086.0"></text>
</g>
<g>
<title>start_thread (79 samples, 0.09%)</title><rect x="1188.2" y="1059.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1191.2" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (79 samples, 0.09%)</title><rect x="1188.2" y="1043.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1191.2" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (79 samples, 0.09%)</title><rect x="1188.2" y="1027.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.2" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (79 samples, 0.09%)</title><rect x="1188.2" y="1011.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.2" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (79 samples, 0.09%)</title><rect x="1188.2" y="995.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.2" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.09%)</title><rect x="1188.2" y="979.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.2" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (75 samples, 0.08%)</title><rect x="1188.3" y="963.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1191.3" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (55 samples, 0.06%)</title><rect x="1188.5" y="947.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1191.5" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (30 samples, 0.03%)</title><rect x="1188.8" y="931.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1191.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.02%)</title><rect x="1188.9" y="915.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1191.9" y="926.0"></text>
</g>
<g>
<title>[torrent tracker announce thread tid=441336] (58 samples, 0.06%)</title><rect x="1189.2" y="1075.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1192.2" y="1086.0"></text>
</g>
<g>
<title>java.lang.Thread.run (55 samples, 0.06%)</title><rect x="1189.3" y="1059.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1192.3" y="1070.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.Announce.run (55 samples, 0.06%)</title><rect x="1189.3" y="1043.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.3" y="1054.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.Announce.announceAllTorrents (54 samples, 0.06%)</title><rect x="1189.3" y="1027.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.3" y="1038.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.multiAnnounce (54 samples, 0.06%)</title><rect x="1189.3" y="1011.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1192.3" y="1022.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.sendAnnounce (51 samples, 0.06%)</title><rect x="1189.3" y="995.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.3" y="1006.0"></text>
</g>
<g>
<title>com.turn.ttorrent.client.announce.HTTPTrackerClient.openConnectionCheckRedirects (50 samples, 0.06%)</title><rect x="1189.3" y="979.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1192.3" y="990.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream (25 samples, 0.03%)</title><rect x="1189.3" y="963.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.3" y="974.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getOutputStream (25 samples, 0.03%)</title><rect x="1189.3" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.3" y="958.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getOutputStream0 (25 samples, 0.03%)</title><rect x="1189.3" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1192.3" y="942.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect (24 samples, 0.03%)</title><rect x="1189.3" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsClient.afterConnect (23 samples, 0.03%)</title><rect x="1189.3" y="899.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>sun.security.ssl.SSLSocketImpl.startHandshake (22 samples, 0.02%)</title><rect x="1189.3" y="883.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
<g>
<title>sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode (24 samples, 0.03%)</title><rect x="1189.6" y="963.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1192.6" y="974.0"></text>
</g>
<g>
<title>java.net.HttpURLConnection.getResponseCode (24 samples, 0.03%)</title><rect x="1189.6" y="947.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1192.6" y="958.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getInputStream (23 samples, 0.03%)</title><rect x="1189.6" y="931.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1192.6" y="942.0"></text>
</g>
<g>
<title>sun.net.www.protocol.http.HttpURLConnection.getInputStream0 (23 samples, 0.03%)</title><rect x="1189.6" y="915.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1192.6" y="926.0"></text>
</g>
</g>
</svg>
