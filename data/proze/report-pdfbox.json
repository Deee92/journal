[
  {
    "testClassName": "org.apache.pdfbox.examples.interactive.form.TestCreateSimpleForms",
    "testName": "testCreateSimpleForm",
    "signature": "testCreateSimpleForm()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"SampleField\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "textBox.setValue(\"Łódź\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.interactive.form.TestCreateSimpleForms",
    "testName": "testAddBorderToField",
    "signature": "testAddBorderToField()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"SampleField\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "new PDFRenderer(doc2).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDTextField) (acroForm2.getField(\"SampleField\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.interactive.form.TestCreateSimpleForms",
    "testName": "testCreateSimpleFormWithEmbeddedFont",
    "signature": "testCreateSimpleFormWithEmbeddedFont()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"SampleField\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "textBox.setValue(\"Łódź\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.interactive.form.TestCreateSimpleForms",
    "testName": "testCreateMultiWidgetsForm",
    "signature": "testCreateMultiWidgetsForm()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "new PDFRenderer(doc).renderImage(1)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"SampleField\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "doc.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "doc.getPage(1)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.interactive.form.TestCreateSimpleForms",
    "testName": "testCreateCheckBox",
    "signature": "testCreateCheckBox()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new PDFRenderer(doc1).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDCheckBox) (acroForm1.getField(\"MyCheckBox\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "doc1.save(\"target/CheckBoxSample-modified.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "new PDFRenderer(doc2).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDCheckBox) (acroForm2.getField(\"MyCheckBox\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.interactive.form.TestCreateSimpleForms",
    "testName": "testRadioButtons",
    "signature": "testRadioButtons()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new PDFRenderer(doc1).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDRadioButton) (acroForm1.getField(\"MyRadioButton\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "radioButton1.setValue(\"b\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "doc1.save(\"target/RadioButtonsSample-modified.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "new PDFRenderer(doc2).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "((PDRadioButton) (acroForm2.getField(\"MyRadioButton\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateGradientShadingPDF",
    "testName": "testCreateGradientShading",
    "signature": "testCreateGradientShading()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "creator.create(filename)",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.CreateGradientShadingPDF.create(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.CreateGradientShadingPDF",
        "methodName": "create",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "new PDFRenderer(document).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testDetachedSHA256",
    "signature": "testDetachedSHA256()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "signing.setExternalSigning(externallySign)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "getOutputFileName(\"signed{0}.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "getOutputFileName(\"signed{0}-late-tsa.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testDetachedSHA256WithTSA",
    "signature": "testDetachedSHA256WithTSA()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "response.setMockResponseContentType(\"application/timestamp-reply\")",
        "fullMethodSignature": "org.apache.wink.client.MockHttpServer$MockHttpServerResponse.setMockResponseContentType(java.lang.String)",
        "methodDeclaringType": "org.apache.wink.client.MockHttpServer$MockHttpServerResponse",
        "methodName": "setMockResponseContentType",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "response.setMockResponseCode(200)",
        "fullMethodSignature": "org.apache.wink.client.MockHttpServer$MockHttpServerResponse.setMockResponseCode(int)",
        "methodDeclaringType": "org.apache.wink.client.MockHttpServer$MockHttpServerResponse",
        "methodName": "setMockResponseCode",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "getOutputFileName(\"signed{0}_tsa.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "signing1.setExternalSigning(externallySign)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "signing2.setExternalSigning(externallySign)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testCreateSignedTimeStamp",
    "signature": "testCreateSignedTimeStamp()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testCreateVisibleSignature",
    "signature": "testCreateVisibleSignature()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "signing.setVisibleSignatureProperties(\"name\", \"location\", \"Security\", 0, 1, true)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateVisibleSignature.setVisibleSignatureProperties(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateVisibleSignature",
        "methodName": "setVisibleSignatureProperties",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int",
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "signing.setExternalSigning(externallySign)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "getOutputFileName(\"signed{0}_visible.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testCreateVisibleSignature2",
    "signature": "testCreateVisibleSignature2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "signing.setExternalSigning(externallySign)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "getOutputFileName(\"signed{0}_visible2.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testPDFBox3978",
    "signature": "testPDFBox3978()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "signing1.setExternalSigning(false)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "signing2.setVisibleSignatureProperties(\"name\", \"location\", \"Security\", 0, 1, true)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateVisibleSignature.setVisibleSignatureProperties(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateVisibleSignature",
        "methodName": "setVisibleSignatureProperties",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int",
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "signing2.setExternalSigning(true)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testPDFBox3811",
    "signature": "testPDFBox3811()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// for stable digest\ndocument.setDocumentId(12345L)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.setDocumentId(java.lang.Long)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "setDocumentId",
        "methodParameterTypes": [
          "long"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testSaveIncrementalAfterSign",
    "signature": "testSaveIncrementalAfterSign()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "signing.setExternalSigning(externallySign)",
        "fullMethodSignature": "org.apache.pdfbox.examples.signature.CreateSignatureBase.setExternalSigning(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.examples.signature.CreateSignatureBase",
        "methodName": "setExternalSigning",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "getOutputFileName(\"SimpleForm_signed{0}.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "getOutputFileName(\"SimpleForm_signed{0}_incrementallyresaved1.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "getOutputFileName(\"SimpleForm_signed{0}_incrementallyresaved2.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature.getOutputFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
        "methodName": "getOutputFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "doc.getDocumentCatalog().getAcroForm().getField(\"SampleField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"New Value 1\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "// old style incremental save: create a \"path\" from the root to the objects that need an update\ndoc.getDocumentCatalog().getCOSObject().setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "doc.getDocumentCatalog().getAcroForm().getCOSObject().setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "field.getCOSObject().setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "field.getWidgets().get(0).getAppearance().getCOSObject().setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((COSDictionary) (field.getWidgets().get(0).getAppearance().getNormalAppearance().getCOSObject())).setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "doc.getDocumentCatalog().getAcroForm().getField(\"SampleField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "doc.getDocumentCatalog().getAcroForm().getField(\"SampleField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"New Value 2\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "doc.getDocumentCatalog().getAcroForm().getField(\"SampleField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "new PDFRenderer(doc).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testPDFBox4784",
    "signature": "testPDFBox4784()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testCRL",
    "signature": "testCRL()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "Hex.decodeHex(hexSignature)",
        "fullMethodSignature": "org.apache.pdfbox.util.Hex.decodeHex(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.Hex",
        "methodName": "decodeHex",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestCreateSignature",
    "testName": "testAddValidationInformation",
    "signature": "testAddValidationInformation()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestEmbeddedFiles",
    "testName": "testEmbeddedFiles",
    "signature": "testEmbeddedFiles()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestHelloWorld",
    "testName": "testHelloWorldTTF",
    "signature": "testHelloWorldTTF()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkOutputFile(outputFile, message)",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestHelloWorld.checkOutputFile(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestHelloWorld",
        "methodName": "checkOutputFile",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestHelloWorld",
    "testName": "testHelloWorld",
    "signature": "testHelloWorld()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkOutputFile(outputFile, message)",
        "fullMethodSignature": "org.apache.pdfbox.examples.pdmodel.TestHelloWorld.checkOutputFile(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.examples.pdmodel.TestHelloWorld",
        "methodName": "checkOutputFile",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.examples.pdmodel.TestRubberStampWithImage",
    "testName": "test",
    "signature": "test()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new PDFRenderer(doc1).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "new PDFRenderer(doc2).renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "doc2.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "COSName.getPDFName(\"Im1\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.cos.COSDictionaryTest",
    "testName": "testCOSDictionaryNotEqualsCOSStream",
    "signature": "testCOSDictionaryNotEqualsCOSStream()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.cos.COSObjectKeyTest",
    "testName": "compareToInputNotNullOutputZero",
    "signature": "compareToInputNotNullOutputZero()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.cos.COSObjectKeyTest",
    "testName": "compareToInputNotNullOutputPositive",
    "signature": "compareToInputNotNullOutputPositive()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.cos.COSObjectKeyTest",
    "testName": "checkHashCode",
    "signature": "checkHashCode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.cos.PDFDocEncodingTest",
    "testName": "testDeviations",
    "signature": "testDeviations()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.cos.PDFDocEncodingTest",
    "testName": "testPDFBox3864",
    "signature": "testPDFBox3864()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSString.parseHex(hex)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSString.parseHex(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSString",
        "methodName": "parseHex",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSString"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.cos.TestCOSName",
    "testName": "PDFBox4076",
    "signature": "PDFBox4076()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(special)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "catalogDict.containsKey(special)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.containsKey(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "containsKey",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "boolean"
      },
      {
        "invocation": "catalogDict.getString(special)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.getString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "getString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.cos.TestCOSUpdateInfo",
    "testName": "testIsSetNeedToBeUpdate",
    "signature": "testIsSetNeedToBeUpdate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testCOSDictionary.setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSUpdateInfo.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSUpdateInfo",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCOSDictionary.setNeedToBeUpdated(false)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSUpdateInfo.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSUpdateInfo",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCOSObject.setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSUpdateInfo.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSUpdateInfo",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCOSObject.setNeedToBeUpdated(false)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSUpdateInfo.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSUpdateInfo",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.filter.PredictorTest",
    "testName": "testGetBitSeq",
    "signature": "testGetBitSeq()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "getBitSeq(Integer.parseInt(\"11111111\", 2), 0, 8)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00000000\", 2), 0, 8)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"11111111\", 2), 0, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00000000\", 2), 0, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00110001\", 2), 0, 3)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 0, 8)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 0, 2)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 1, 2)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 2, 2)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 3, 3)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 1, 7)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"10101010\", 2), 3, 2)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00110001\", 2), 0, 8)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00110001\", 2), 0, 5)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00110001\", 2), 4, 4)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00110001\", 2), 3, 3)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"00110001\", 2), 6, 2)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"11110000\", 2), 4, 4)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"11110000\", 2), 6, 2)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "getBitSeq(Integer.parseInt(\"11110000\", 2), 0, 4)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.getBitSeq(int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "getBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.filter.PredictorTest",
    "testName": "testCalcSetBitSeq",
    "signature": "testCalcSetBitSeq()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 8, 0)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 8, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 2, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 3, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 0, 2, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 4, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 1, 4, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 1, 1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 7, 1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 7, 1, 0)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 7, 1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 7, 1, 0)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 6, 1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 6, 1, 0)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 3, 3, 6)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 4, 3, 6)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 5, 3, 6)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 0, 8, 0xff)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"11111111\", 2), 0, 8, 0xff)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(0xa5, 0, 8, 0xd9 + 0xa5)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "calcSetBitSeq(Integer.parseInt(\"00000000\", 2), 1, 1, 3)",
        "fullMethodSignature": "org.apache.pdfbox.filter.Predictor.calcSetBitSeq(int,int,int,int)",
        "methodDeclaringType": "org.apache.pdfbox.filter.Predictor",
        "methodName": "calcSetBitSeq",
        "methodParameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "int"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.ScratchFileBufferTest",
    "testName": "testEOFBugInSeek",
    "signature": "testEOFBugInSeek()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "scratchFileBuffer.seek(0)",
        "fullMethodSignature": "org.apache.pdfbox.io.ScratchFileBuffer.seek(long)",
        "methodDeclaringType": "org.apache.pdfbox.io.ScratchFileBuffer",
        "methodName": "seek",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "scratchFileBuffer.seek((i * 2) * PAGE_SIZE)",
        "fullMethodSignature": "org.apache.pdfbox.io.ScratchFileBuffer.seek(long)",
        "methodDeclaringType": "org.apache.pdfbox.io.ScratchFileBuffer",
        "methodName": "seek",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testUnmodifiableCOSDictionary",
    "signature": "testUnmodifiableCOSDictionary()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setNeedToBeUpdated(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setNeedToBeUpdated",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetItem",
    "signature": "testSetItem()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetBoolean",
    "signature": "testSetBoolean()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setBoolean(\"A\", true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setBoolean(java.lang.String,boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setBoolean",
        "methodParameterTypes": [
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetName",
    "signature": "testSetName()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setName(\"A\", \"A\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setName(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setName",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetDate",
    "signature": "testSetDate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetEmbeddedDate",
    "signature": "testSetEmbeddedDate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetString",
    "signature": "testSetString()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setString(\"A\", \"A\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setString(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setString",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetEmbeddedString",
    "signature": "testSetEmbeddedString()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setEmbeddedString(\"Embedded\", \"A\", \"A\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setEmbeddedString(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setEmbeddedString",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetInt",
    "signature": "testSetInt()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setInt(\"A\", 0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setInt(java.lang.String,int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setInt",
        "methodParameterTypes": [
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetEmbeddedInt",
    "signature": "testSetEmbeddedInt()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setEmbeddedInt(\"Embedded\", \"A\", 0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt(java.lang.String,java.lang.String,int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setEmbeddedInt",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetLong",
    "signature": "testSetLong()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setLong(\"A\", 0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setLong(java.lang.String,long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setLong",
        "methodParameterTypes": [
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.io.UnmodifiableCOSDictionaryTest",
    "testName": "testSetFloat",
    "signature": "testSetFloat()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "unmodifiableCOSDictionary.setFloat(\"A\", 0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSDictionary.setFloat(java.lang.String,float)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSDictionary",
        "methodName": "setFloat",
        "methodParameterTypes": [
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"An UnsupportedOperationException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.multipdf.MergeAcroFormsTest",
    "testName": "testLegacyModeMerge",
    "signature": "testLegacyModeMerge()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "merger.setDestinationFileName(pdfOutput.getAbsolutePath())",
        "fullMethodSignature": "org.apache.pdfbox.multipdf.PDFMergerUtility.setDestinationFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.multipdf.PDFMergerUtility",
        "methodName": "setDestinationFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "toBeComparedAcroForm.getField(compliantField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "toBeComparedAcroForm.getField(compliantField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "compliantAcroForm.getField(toBeComparedField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "compliantAcroForm.getField(toBeComparedField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.multipdf.MergeAcroFormsTest",
    "testName": "testJoinFieldsMerge_TextFieldsOnly_SameMerged",
    "signature": "testJoinFieldsMerge_TextFieldsOnly_SameMerged()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "merger.setDestinationFileName(pdfOutput.getAbsolutePath())",
        "fullMethodSignature": "org.apache.pdfbox.multipdf.PDFMergerUtility.setDestinationFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.multipdf.PDFMergerUtility",
        "methodName": "setDestinationFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "toBeComparedAcroForm.getField(compliantField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "toBeComparedAcroForm.getField(compliantField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "compliantAcroForm.getField(toBeComparedField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "compliantAcroForm.getField(toBeComparedField.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.multipdf.MergeAcroFormsTest",
    "testName": "testAnnotsEntry",
    "signature": "testAnnotsEntry()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "merger.setDestinationFileName(pdfOutput.getAbsolutePath())",
        "fullMethodSignature": "org.apache.pdfbox.multipdf.PDFMergerUtility.setDestinationFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.multipdf.PDFMergerUtility",
        "methodName": "setDestinationFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "mergedPDF.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "mergedPDF.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "mergedPDF.getPage(1)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "mergedPDF.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.multipdf.MergeAcroFormsTest",
    "testName": "testAPEntry",
    "signature": "testAPEntry()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "merger.setDestinationFileName(pdfOutput.getAbsolutePath())",
        "fullMethodSignature": "org.apache.pdfbox.multipdf.PDFMergerUtility.setDestinationFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.multipdf.PDFMergerUtility",
        "methodName": "setDestinationFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"Testfeld\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "acroForm.getField(\"Testfeld2\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.multipdf.MergeAnnotationsTest",
    "testName": "testLinkAnnotations",
    "signature": "testLinkAnnotations()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "merger.setDestinationFileName(pdfOutput.getAbsolutePath())",
        "fullMethodSignature": "org.apache.pdfbox.multipdf.PDFMergerUtility.setDestinationFileName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.multipdf.PDFMergerUtility",
        "methodName": "setDestinationFileName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "mergedPDF.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "mergedPDF.getPage(3)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "mergedPDF.getPage(2)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "mergedPDF.getPage(5)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.EndstreamOutputStreamTest",
    "testName": "testEndstreamOutputStream",
    "signature": "testEndstreamOutputStream()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.EndstreamOutputStreamTest",
    "testName": "testPDFBox2079EmbeddedFile",
    "signature": "testPDFBox2079EmbeddedFile()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.InputStreamSourceTest",
    "testName": "testPositionReadFully",
    "signature": "testPositionReadFully()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "inputStreamSource.readFully(5)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.InputStreamSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.InputStreamSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      },
      {
        "invocation": "inputStreamSource.readFully(10)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.InputStreamSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.InputStreamSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.InputStreamSourceTest",
    "testName": "testPositionRead",
    "signature": "testPositionRead()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.InputStreamSourceTest",
    "testName": "testPositionReadBytes",
    "signature": "testPositionReadBytes()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.InputStreamSourceTest",
    "testName": "testPositionPeek",
    "signature": "testPositionPeek()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "inputStreamSource.readFully(6)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.InputStreamSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.InputStreamSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.InputStreamSourceTest",
    "testName": "testPositionUnreadBytes",
    "signature": "testPositionUnreadBytes()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "inputStreamSource.readFully(6)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.InputStreamSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.InputStreamSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.PDFObjectStreamParserTest",
    "testName": "testOffsetParsing",
    "signature": "testOffsetParsing()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSInteger.get(8)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSInteger.get(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSInteger",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSInteger"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.RandomAccessSourceTest",
    "testName": "testPositionReadFully",
    "signature": "testPositionReadFully()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "randomAccessSource.readFully(5)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.RandomAccessSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.RandomAccessSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      },
      {
        "invocation": "randomAccessSource.readFully(10)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.RandomAccessSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.RandomAccessSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.RandomAccessSourceTest",
    "testName": "testPositionRead",
    "signature": "testPositionRead()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.RandomAccessSourceTest",
    "testName": "testPositionReadBytes",
    "signature": "testPositionReadBytes()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.RandomAccessSourceTest",
    "testName": "testPositionPeek",
    "signature": "testPositionPeek()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "randomAccessSource.readFully(6)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.RandomAccessSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.RandomAccessSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.RandomAccessSourceTest",
    "testName": "testPositionUnreadBytes",
    "signature": "testPositionUnreadBytes()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "randomAccessSource.readFully(6)",
        "fullMethodSignature": "org.apache.pdfbox.pdfparser.RandomAccessSource.readFully(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdfparser.RandomAccessSource",
        "methodName": "readFully",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFParserFile",
    "signature": "testPDFParserFile()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFParserInputStream",
    "signature": "testPDFParserInputStream()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFParserFileScratchFile",
    "signature": "testPDFParserFileScratchFile()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFParserInputStreamScratchFile",
    "signature": "testPDFParserInputStreamScratchFile()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFParserMissingCatalog",
    "signature": "testPDFParserMissingCatalog()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3208",
    "signature": "testPDFBox3208()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"D:20140326142505-02\u002700\u0027\")",
        "fullMethodSignature": "org.apache.pdfbox.util.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"20140326172513Z\")",
        "fullMethodSignature": "org.apache.pdfbox.util.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3940",
    "signature": "testPDFBox3940()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"Tuesday, July 28, 1998 4:00:09 PM\")",
        "fullMethodSignature": "org.apache.pdfbox.util.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3783",
    "signature": "testPDFBox3783()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3785",
    "signature": "testPDFBox3785()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3947",
    "signature": "testPDFBox3947()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3948",
    "signature": "testPDFBox3948()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3949",
    "signature": "testPDFBox3949()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3950",
    "signature": "testPDFBox3950()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "renderer.renderImage(i)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3951",
    "signature": "testPDFBox3951()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3964",
    "signature": "testPDFBox3964()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox3977",
    "signature": "testPDFBox3977()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"D:20070608151915+02\u002700\u0027\")",
        "fullMethodSignature": "org.apache.pdfbox.util.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"D:20080604152122+02\u002700\u0027\")",
        "fullMethodSignature": "org.apache.pdfbox.util.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testParseGenko",
    "signature": "testParseGenko()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox4338",
    "signature": "testPDFBox4338()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox4339",
    "signature": "testPDFBox4339()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox4153",
    "signature": "testPDFBox4153()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfparser.TestPDFParser",
    "testName": "testPDFBox4490",
    "signature": "testPDFBox4490()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfwriter.COSWriterTest",
    "testName": "testPDFBox4241",
    "signature": "testPDFBox4241()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfwriter.COSWriterXRefEntryTest",
    "testName": "compareToInputNullOutputNegative",
    "signature": "compareToInputNullOutputNegative()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdfwriter.ContentStreamWriterTest",
    "testName": "testPDFBox4750",
    "signature": "testPDFBox4750()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "r.renderImageWithDPI(i, 96)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(int,float)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImageWithDPI",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      },
      {
        "invocation": "doc.getPage(i)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "fail(\"Rendering failed or is not identical, see in \" + testDirOut)",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "getFromList",
    "signature": "getFromList()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cosArrayList.get(i)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      },
      {
        "invocation": "annotationsArray.get(i)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "addToList",
    "signature": "addToList()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeFromListByIndex",
    "signature": "removeFromListByIndex()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cosArrayList.get(positionToRemove)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      },
      {
        "invocation": "cosArrayList.remove(positionToRemove)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.remove(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "remove",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeUniqueFromListByObject",
    "signature": "removeUniqueFromListByObject()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cosArrayList.get(2)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      },
      {
        "invocation": "annotationsArray.get(2)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "annotationsArray.get(2)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeAllUniqueFromListByObject",
    "signature": "removeAllUniqueFromListByObject()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeMultipleFromListByObject",
    "signature": "removeMultipleFromListByObject()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeAllMultipleFromListByObject",
    "signature": "removeAllMultipleFromListByObject()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeFromFilteredListByIndex",
    "signature": "removeFromFilteredListByIndex()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// this call should fail\ncosArrayList.remove(1)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.remove(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "remove",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeFromFilteredListByObject",
    "signature": "removeFromFilteredListByObject()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cosArrayList.get(positionToRemove)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeSingleDirectObject",
    "signature": "removeSingleDirectObject()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// enforce the COSDictionaries to be written directly into the COSArray\ntxtMark.getCOSObject().getCOSObject().setDirect(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSBase.setDirect(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSBase",
        "methodName": "setDirect",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "txtLink.getCOSObject().getCOSObject().setDirect(true)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSBase.setDirect(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSBase",
        "methodName": "setDirect",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.save(OUT_DIR + \"/removeSingleDirectObjectTest.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "annotations.get(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeSingleIndirectObject",
    "signature": "removeSingleIndirectObject()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdf.save(OUT_DIR + \"/removeSingleIndirectObjectTest.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "annotations.get(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.COSArrayListTest",
    "testName": "removeIndirectObject",
    "signature": "removeIndirectObject()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdf.save(OUT_DIR + \"/removeIndirectObjectTest.pdf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "annotations.get(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.common.COSArrayList.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.common.COSArrayList",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.PDStreamTest",
    "testName": "testCreateInputStreamNullFilters",
    "signature": "testCreateInputStreamNullFilters()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.PDStreamTest",
    "testName": "testCreateInputStreamEmptyFilters",
    "signature": "testCreateInputStreamEmptyFilters()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.PDStreamTest",
    "testName": "testCreateInputStreamNullStopFilters",
    "signature": "testCreateInputStreamNullStopFilters()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.TestEmbeddedFiles",
    "testName": "testNullEmbeddedFile",
    "signature": "testNullEmbeddedFile()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.common.TestEmbeddedFiles",
    "testName": "testOSSpecificAttachments",
    "signature": "testOSSpecificAttachments()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElementTest",
    "testName": "testPDFBox4197",
    "signature": "testPDFBox4197()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTest",
    "testName": "loadXFDFAnnotations",
    "signature": "loadXFDFAnnotations()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.fdf.FDFFieldTest",
    "testName": "testCOSStringValue",
    "signature": "testCOSStringValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.fdf.FDFFieldTest",
    "testName": "testTextAsCOSStreamValue",
    "signature": "testTextAsCOSStreamValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.fdf.FDFFieldTest",
    "testName": "testCOSNameValue",
    "signature": "testCOSNameValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(testString)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.fdf.FDFFieldTest",
    "testName": "testCOSArrayValue",
    "signature": "testCOSArrayValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testPDFBox988",
    "signature": "testPDFBox988()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "renderer.renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testPDFBox3747",
    "signature": "testPDFBox3747()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cs.showText(\"PDFBOX-3747\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.showText(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "showText",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testPDFBox3826",
    "signature": "testPDFBox3826()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testPDFBOX4115",
    "signature": "testPDFBOX4115()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "contentStream.newLineAtOffset(10, 700)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.newLineAtOffset(float,float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "newLineAtOffset",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "contentStream.showText(text)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.showText(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "showText",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "doc.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "COSName.getPDFName(\"F1\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "font.getEncoding().getName(c)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.encoding.Encoding",
        "methodName": "getName",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "font.getPath(name)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDType1Font.getPath(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDType1Font",
        "methodName": "getPath",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.awt.geom.GeneralPath"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testPDFox4318",
    "signature": "testPDFox4318()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PDType1Font.HELVETICA_BOLD.encode(\"\\u0080\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.encode(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "encode",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "byte[]"
      },
      {
        "invocation": "PDType1Font.HELVETICA_BOLD.encode(\"€\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.encode(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "encode",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "byte[]"
      },
      {
        "invocation": "PDType1Font.HELVETICA_BOLD.encode(\"\\u0080\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.encode(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "encode",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "byte[]"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testFullEmbeddingTTC",
    "signature": "testFullEmbeddingTTC()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "ttc.getFontByName(names.get(0))",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeCollection.getFontByName(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeCollection",
        "methodName": "getFontByName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.TrueTypeFont"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testPDFox5048",
    "signature": "testPDFox5048()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "doc.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      },
      {
        "invocation": "COSName.getPDFName(\"F70\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "font.getHeight(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFontLike.getHeight(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFontLike",
        "methodName": "getHeight",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "font.getStringWidth(\"Pa\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.getStringWidth(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "getStringWidth",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "float"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testDeleteFont",
    "signature": "testDeleteFont()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cs.newLineAtOffset(50, 700)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.newLineAtOffset(float,float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "newLineAtOffset",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "cs.showText(text)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.showText(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "showText",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.PDFontTest",
    "testName": "testSoftHyphen",
    "signature": "testSoftHyphen()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "font1.getStringWidth(\"-\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.getStringWidth(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "getStringWidth",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "font1.getStringWidth(\"­\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.getStringWidth(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "getStringWidth",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "font2.getStringWidth(\"-\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.getStringWidth(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "getStringWidth",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "font2.getStringWidth(\"­\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.font.PDFont.getStringWidth(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.font.PDFont",
        "methodName": "getStringWidth",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "cs.newLineAtOffset(100, 500)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.newLineAtOffset(float,float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "newLineAtOffset",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "cs.showText(text)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.showText(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "showText",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "cs.newLineAtOffset(0, 100)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.newLineAtOffset(float,float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "newLineAtOffset",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "cs.showText(text)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageContentStream.showText(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageContentStream",
        "methodName": "showText",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "stripper.setLineSeparator(\"\\n\")",
        "fullMethodSignature": "org.apache.pdfbox.text.PDFTextStripper.setLineSeparator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.text.PDFTextStripper",
        "methodName": "setLineSeparator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.font.TestTTFParser",
    "testName": "testPostTable",
    "signature": "testPostTable()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "cmap.getGlyphId(0x2122)",
        "fullMethodSignature": "org.apache.fontbox.ttf.CmapSubtable.getGlyphId(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.CmapSubtable",
        "methodName": "getGlyphId",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "cmap.getGlyphId(0x20ac)",
        "fullMethodSignature": "org.apache.fontbox.ttf.CmapSubtable.getGlyphId(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.CmapSubtable",
        "methodName": "getGlyphId",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.blend.BlendModeTest",
    "testName": "testInstances",
    "signature": "testInstances()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.blend.BlendModeTest",
    "testName": "testCOSNames",
    "signature": "testCOSNames()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.color.PDICCBasedTest",
    "testName": "testConstructor",
    "signature": "testConstructor()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
    "testName": "testCreateFromFileByExtension",
    "signature": "testCreateFromFileByExtension()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByCCITTFactory(\"ccittg4.tif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByCCITTFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByCCITTFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByJPEGFactory(\"jpeg.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByJPEGFactory(\"jpegcmyk.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(\"gif.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(\"gif-1bit-transparent.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(\"png_indexed_8bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(\"png.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileByExtensionWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileByExtensionWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
    "testName": "testCreateFromFile",
    "signature": "testCreateFromFile()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testCompareCreatedFileWithCreatedByCCITTFactory(\"ccittg4.tif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByCCITTFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByCCITTFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileWithCreatedByJPEGFactory(\"jpeg.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileWithCreatedByJPEGFactory(\"jpegcmyk.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileWithCreatedByLosslessFactory(\"gif.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileWithCreatedByLosslessFactory(\"gif-1bit-transparent.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileWithCreatedByLosslessFactory(\"png_indexed_8bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFileWithCreatedByLosslessFactory(\"png.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFileWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFileWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
    "testName": "testCreateFromFileByContent",
    "signature": "testCreateFromFileByContent()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testCompareCreateByContentWithCreatedByCCITTFactory(\"ccittg4.tif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreateByContentWithCreatedByCCITTFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreateByContentWithCreatedByCCITTFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedByContentWithCreatedByJPEGFactory(\"jpeg.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedByContentWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedByContentWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedByContentWithCreatedByJPEGFactory(\"jpegcmyk.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedByContentWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedByContentWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedByContentWithCreatedByLosslessFactory(\"gif.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedByContentWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedByContentWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedByContentWithCreatedByLosslessFactory(\"gif-1bit-transparent.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedByContentWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedByContentWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedByContentWithCreatedByLosslessFactory(\"png_indexed_8bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedByContentWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedByContentWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedByContentWithCreatedByLosslessFactory(\"png.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedByContentWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedByContentWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
    "testName": "testCreateFromByteArray",
    "signature": "testCreateFromByteArray()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByCCITTFactory(\"ccittg4.tif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByCCITTFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByCCITTFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByJPEGFactory(\"jpeg.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByJPEGFactory(\"jpegcmyk.jpg\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByJPEGFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByJPEGFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(\"gif.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(\"gif-1bit-transparent.gif\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(\"png_indexed_8bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(\"png.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest.testCompareCreatedFromByteArrayWithCreatedByLosslessFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObjectTest",
        "methodName": "testCompareCreatedFromByteArrayWithCreatedByLosslessFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGB",
    "signature": "testImageConversionRGB()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBGamma",
    "signature": "testImageConversionRGBGamma()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_rgb_gamma.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGB16BitICC",
    "signature": "testImageConversionRGB16BitICC()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_rgb_romm_16bit.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBIndexed",
    "signature": "testImageConversionRGBIndexed()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_indexed.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBIndexedAlpha1Bit",
    "signature": "testImageConversionRGBIndexedAlpha1Bit()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_indexed_1bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBIndexedAlpha2Bit",
    "signature": "testImageConversionRGBIndexedAlpha2Bit()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_indexed_2bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBIndexedAlpha4Bit",
    "signature": "testImageConversionRGBIndexedAlpha4Bit()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_indexed_4bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBIndexedAlpha8Bit",
    "signature": "testImageConversionRGBIndexedAlpha8Bit()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"png_indexed_8bit_alpha.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionRGBAlpha",
    "signature": "testImageConversionRGBAlpha()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// We can\u0027t handle Alpha RGB\ncheckImageConvertFail(\"png_alpha_rgb.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvertFail(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvertFail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionGrayAlpha",
    "signature": "testImageConversionGrayAlpha()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// We can\u0027t handle Alpha RGB\ncheckImageConvertFail(\"png_alpha_gray.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvertFail(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvertFail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionGray",
    "signature": "testImageConversionGray()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvertFail(\"png_gray.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvertFail(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvertFail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionGrayGamma",
    "signature": "testImageConversionGrayGamma()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvertFail(\"png_gray_with_gama.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvertFail(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvertFail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testCheckConverterState",
    "signature": "testCheckConverterState()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testChunkSane",
    "signature": "testChunkSane()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testCRCImpl",
    "signature": "testCRCImpl()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testMapPNGRenderIntent",
    "signature": "testMapPNGRenderIntent()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PNGConverter.mapPNGRenderIntent(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter.mapPNGRenderIntent(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter",
        "methodName": "mapPNGRenderIntent",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "PNGConverter.mapPNGRenderIntent(1)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter.mapPNGRenderIntent(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter",
        "methodName": "mapPNGRenderIntent",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "PNGConverter.mapPNGRenderIntent(2)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter.mapPNGRenderIntent(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter",
        "methodName": "mapPNGRenderIntent",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "PNGConverter.mapPNGRenderIntent(3)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter.mapPNGRenderIntent(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter",
        "methodName": "mapPNGRenderIntent",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "PNGConverter.mapPNGRenderIntent(-1)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter.mapPNGRenderIntent(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter",
        "methodName": "mapPNGRenderIntent",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "PNGConverter.mapPNGRenderIntent(4)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter.mapPNGRenderIntent(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter",
        "methodName": "mapPNGRenderIntent",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
    "testName": "testImageConversionIntentIndexed",
    "signature": "testImageConversionIntentIndexed()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "checkImageConvert(\"929316.png\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest.checkImageConvert(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.image.PNGConverterTest",
        "methodName": "checkImageConvert",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "fromStringInputNotNullOutputNotNull",
    "signature": "fromStringInputNotNullOutputNotNull()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "RenderingIntent.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "fromStringInputNotNullOutputNotNull2",
    "signature": "fromStringInputNotNullOutputNotNull2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "RenderingIntent.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "fromStringInputNotNullOutputNotNull3",
    "signature": "fromStringInputNotNullOutputNotNull3()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "RenderingIntent.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "fromStringInputNotNullOutputNotNull4",
    "signature": "fromStringInputNotNullOutputNotNull4()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "RenderingIntent.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "fromStringInputNotNullOutputNotNull5",
    "signature": "fromStringInputNotNullOutputNotNull5()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "RenderingIntent.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "stringValueOutputNotNull",
    "signature": "stringValueOutputNotNull()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntentTest",
    "testName": "testIsFill",
    "signature": "testIsFill()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.graphics.PDLineDashPatternTest",
    "testName": "testGetCOSObject",
    "signature": "testGetCOSObject()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((COSArray) (dashBase.getObject(0)))",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.getObject(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "getObject",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "dashArray.get(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "dashArray.get(1)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "dashBase.get(1)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURITest",
    "testName": "testUTF8URI",
    "signature": "testUTF8URI()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "actionURI.setURI(\"http://çµ„åŒ¶æ›¿ç¶Ž.com/\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI.setURI(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI",
        "methodName": "setURI",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURITest",
    "testName": "testUTF16BEURI",
    "signature": "testUTF16BEURI()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSString.parseHex((\"FEFF0068007400740070003A002F002F00770077\" + \"0077002E006E00610070002E006500640075002F0063006100740061006C006F006700\") + \"2F00310031003100340030002E00680074006D006C\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSString.parseHex(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSString",
        "methodName": "parseHex",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSString"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURITest",
    "testName": "testUTF16LEURI",
    "signature": "testUTF16LEURI()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSString.parseHex(\"FFFE68007400740070003A00\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSString.parseHex(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSString",
        "methodName": "parseHex",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSString"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURITest",
    "testName": "testUTF7URI",
    "signature": "testUTF7URI()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "actionURI.setURI(\"http://pdfbox.apache.org/\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI.setURI(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI",
        "methodName": "setURI",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTest",
    "testName": "createDefaultWidgetAnnotation",
    "signature": "createDefaultWidgetAnnotation()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTest",
    "testName": "createWidgetAnnotationFromField",
    "signature": "createWidgetAnnotationFromField()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutlineTest",
    "testName": "outlinesCountShouldNotBeNegative",
    "signature": "outlinesCountShouldNotBeNegative()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutlineTest",
    "testName": "outlinesCount",
    "signature": "outlinesCount()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIteratorTest",
    "testName": "singleItem",
    "signature": "singleItem()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIteratorTest",
    "testName": "multipleItem",
    "signature": "multipleItem()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIteratorTest",
    "testName": "removeUnsupported",
    "signature": "removeUnsupported()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIteratorTest",
    "testName": "noChildren",
    "signature": "noChildren()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingAfter_OpenChildToOpenParent",
    "signature": "insertSiblingAfter_OpenChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingBefore_OpenChildToOpenParent",
    "signature": "insertSiblingBefore_OpenChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingAfter_OpenChildToClosedParent",
    "signature": "insertSiblingAfter_OpenChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingBefore_OpenChildToClosedParent",
    "signature": "insertSiblingBefore_OpenChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingAfter_ClosedChildToOpenParent",
    "signature": "insertSiblingAfter_ClosedChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingBefore_ClosedChildToOpenParent",
    "signature": "insertSiblingBefore_ClosedChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingAfter_ClosedChildToClosedParent",
    "signature": "insertSiblingAfter_ClosedChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingBefore_ClosedChildToClosedParent",
    "signature": "insertSiblingBefore_ClosedChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingTop",
    "signature": "insertSiblingTop()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingTopNoParent",
    "signature": "insertSiblingTopNoParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingBottom",
    "signature": "insertSiblingBottom()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "insertSiblingBottomNoParent",
    "signature": "insertSiblingBottomNoParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "cannotInsertSiblingBeforeAList",
    "signature": "cannotInsertSiblingBeforeAList()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemTest",
    "testName": "cannotInsertSiblingAfterAList",
    "signature": "cannotInsertSiblingAfterAList()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "getParent",
    "signature": "getParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "nullLastChild",
    "signature": "nullLastChild()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "nullFirstChild",
    "signature": "nullFirstChild()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "openAlreadyOpenedRootNode",
    "signature": "openAlreadyOpenedRootNode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "closeAlreadyClosedRootNode",
    "signature": "closeAlreadyClosedRootNode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "openLeaf",
    "signature": "openLeaf()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "nodeClosedByDefault",
    "signature": "nodeClosedByDefault()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "closeNodeWithOpendParent",
    "signature": "closeNodeWithOpendParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "closeNodeWithClosedParent",
    "signature": "closeNodeWithClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "openNodeWithOpendParent",
    "signature": "openNodeWithOpendParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "openNodeWithClosedParent",
    "signature": "openNodeWithClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addLastSingleChild",
    "signature": "addLastSingleChild()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addFirstSingleChild",
    "signature": "addFirstSingleChild()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addLastOpenChildToOpenParent",
    "signature": "addLastOpenChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addFirstOpenChildToOpenParent",
    "signature": "addFirstOpenChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addLastOpenChildToClosedParent",
    "signature": "addLastOpenChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addFirstOpenChildToClosedParent",
    "signature": "addFirstOpenChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addLastClosedChildToOpenParent",
    "signature": "addLastClosedChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addFirstClosedChildToOpenParent",
    "signature": "addFirstClosedChildToOpenParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addLastClosedChildToClosedParent",
    "signature": "addLastClosedChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "addFirstClosedChildToClosedParent",
    "signature": "addFirstClosedChildToClosedParent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "cannotAddLastAList",
    "signature": "cannotAddLastAList()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "cannotAddFirstAList",
    "signature": "cannotAddFirstAList()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "equalsNode",
    "signature": "equalsNode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "iterator",
    "signature": "iterator()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "iteratorNoChildre",
    "signature": "iteratorNoChildre()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNodeTest",
    "testName": "openNodeAndAppend",
    "signature": "openNodeAndAppend()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.AcroFormsRotationTest",
    "testName": "fillFields",
    "signature": "fillFields()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.single.rotation0\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(field.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.single.rotation90\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(field.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.single.rotation180\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(field.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.single.rotation270\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(field.getFullyQualifiedName())",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.multi.rotation0\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.multi.rotation90\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.multi.rotation180\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.portrait.multi.rotation270\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.single.rotation0\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"pdfbox.page90.single.rotation0\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.single.rotation90\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"pdfbox.page90.single.rotation90\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.single.rotation180\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"pdfbox.page90.single.rotation180\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.single.rotation270\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"pdfbox.page90.single.rotation270\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.multi.rotation0\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.multi.rotation90\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.multi.rotation180\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox.page90.multi.rotation270\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue((field.getFullyQualifiedName() + \"\\n\") + TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.AlignmentTest",
    "testName": "fillFields",
    "signature": "fillFields()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Small\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Medium\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Wide\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Wide_Clipped\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Small_Outside\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Small\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Medium\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Wide\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Wide_Clipped\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Medium_Outside\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Small\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Medium\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Wide\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Wide_Clipped\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Wide_Outside\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterNUL",
    "signature": "characterNUL()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-nul\").setValue(\"NUL\\u0000NUL\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox-nul\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterTAB",
    "signature": "characterTAB()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-tab\").setValue(\"TAB\\tTAB\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"pdfbox-tab\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterSPACE",
    "signature": "characterSPACE()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-space\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"SPACE SPACE\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-space\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterCR",
    "signature": "characterCR()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-cr\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"CR\\rCR\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-cr\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterLF",
    "signature": "characterLF()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-lf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"LF\\nLF\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-lf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterCRLF",
    "signature": "characterCRLF()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-crlf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"CRLF\\r\\nCRLF\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-crlf\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterLFCR",
    "signature": "characterLFCR()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-lfcr\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"LFCR\\n\\rLFCR\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-lfcr\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterUnicodeLinebreak",
    "signature": "characterUnicodeLinebreak()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-linebreak\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"linebreak\u2028linebreak\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-linebreak\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.ControlCharacterTest",
    "testName": "characterUnicodeParagraphbreak",
    "signature": "characterUnicodeParagraphbreak()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"pdfbox-paragraphbreak\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"paragraphbreak\u2029paragraphbreak\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"acrobat-paragraphbreak\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.HandleDifferentDALevelsTest",
    "testName": "checkSingleAnnotation",
    "signature": "checkSingleAnnotation()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"SingleAnnotation\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.HandleDifferentDALevelsTest",
    "testName": "checkSameLayout",
    "signature": "checkSameLayout()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"MultipeAnnotations-SameLayout\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.HandleDifferentDALevelsTest",
    "testName": "checkDifferentLayout",
    "signature": "checkDifferentLayout()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"MultipleAnnotations-DifferentLayout\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.MultilineFieldsTest",
    "testName": "fillFields",
    "signature": "fillFields()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Small\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Small\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Small\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Medium\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Medium\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Medium\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignLeft-Border_Wide\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignMiddle-Border_Wide\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"AlignRight-Border_Wide\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(TEST_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.MultilineFieldsTest",
    "testName": "testMultilineAuto",
    "signature": "testMultilineAuto()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"Multiline\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"Singleline\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"MultilineAutoscale\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "((PDTextField) (acroForm.getField(\"SinglelineAutoscale\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "fieldMultiline.setValue(\"Multiline - Fixed\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fieldSingleline.setValue(\"Singleline - Fixed\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fieldMultilineAutoscale.setValue(\"Multiline - auto\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fieldSinglelineAutoscale.setValue(\"Singleline - auto\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.MultilineFieldsTest",
    "testName": "testMultilineBreak",
    "signature": "testMultilineBreak()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDTextField) (acroForm.getField(\"filled\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "fieldInput.setValue(fieldValue)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX2469Empty",
    "signature": "testFlattenPDFBOX2469Empty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX2586",
    "signature": "testFlattenPDFBOX2586()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX3262",
    "signature": "testFlattenPDFBOX3262()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX3396_1",
    "signature": "testFlattenPDFBOX3396_1()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX3396_2",
    "signature": "testFlattenPDFBOX3396_2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX3396_3",
    "signature": "testFlattenPDFBOX3396_3()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBOX3396_4",
    "signature": "testFlattenPDFBOX3396_4()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBox4693",
    "signature": "testFlattenPDFBox4693()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBox4788",
    "signature": "testFlattenPDFBox4788()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBox4889",
    "signature": "testFlattenPDFBox4889()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
    "testName": "testFlattenPDFBox4955",
    "signature": "testFlattenPDFBox4955()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "flattenAndCompare(sourceUrl, targetFileName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest.flattenAndCompare(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFlattenTest",
        "methodName": "flattenAndCompare",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots4985DefaultMode",
    "signature": "testFromAnnots4985DefaultMode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots4985CorrectionMode",
    "signature": "testFromAnnots4985CorrectionMode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots4985WithoutCorrectionMode",
    "signature": "testFromAnnots4985WithoutCorrectionMode()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots3891DontCreateFields",
    "signature": "testFromAnnots3891DontCreateFields()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots3891CreateFields",
    "signature": "testFromAnnots3891CreateFields()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(fieldName)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots3891ValidateFont",
    "signature": "testFromAnnots3891ValidateFont()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormFromAnnotsTest",
    "testName": "testFromAnnots3891NullField",
    "signature": "testFromAnnots3891NullField()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormGenerateAppearancesTest",
    "testName": "test5041MissingFontDescriptor",
    "signature": "test5041MissingFontDescriptor()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormGenerateAppearancesTest",
    "testName": "test4086CharNotEncodable",
    "signature": "test4086CharNotEncodable()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormGenerateAppearancesTest",
    "testName": "test5043PaperMetaData",
    "signature": "test5043PaperMetaData()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testFieldsEntry",
    "signature": "testFieldsEntry()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.getField(\"foo\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "acroForm.getField(\"foo\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testAcroFormProperties",
    "signature": "testAcroFormProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroForm.setDefaultAppearance(\"/Helv 0 Tf 0 g\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setDefaultAppearance(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "setDefaultAppearance",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testFlatten",
    "signature": "testFlatten()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testFlattenWidgetNoRef",
    "signature": "testFlattenWidgetNoRef()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testPdf.getPage(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testFlattenSpecificFieldsOnly",
    "signature": "testFlattenSpecificFieldsOnly()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acroFormToFlatten.getField(\"AlignLeft-Border_Small-Filled\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "acroFormToFlatten.getField(\"AlignLeft-Border_Medium-Filled\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "acroFormToFlatten.getField(\"AlignLeft-Border_Wide-Filled\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "acroFormToFlatten.getField(\"AlignLeft-Border_Wide_Clipped-Filled\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testDontAddMissingInformationOnDocumentLoad",
    "signature": "testDontAddMissingInformationOnDocumentLoad()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testAddMissingInformationOnAcroFormAccess",
    "signature": "testAddMissingInformationOnAcroFormAccess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"Helv\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "COSName.getPDFName(\"Helv\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "COSName.getPDFName(\"ZaDb\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "COSName.getPDFName(\"ZaDb\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testDontAddMissingInformationOnAcroFormAccess",
    "signature": "testDontAddMissingInformationOnAcroFormAccess()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testBadDA",
    "signature": "testBadDA()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "textBox.setPartialName(\"SampleField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setPartialName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// https://stackoverflow.com/questions/50609478/\n// \"tf\" is a typo, should have been \"Tf\" and this results that no font is chosen\ntextBox.setDefaultAppearance(\"/Helv 0 tf 0 g\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText.setDefaultAppearance(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText",
        "methodName": "setDefaultAppearance",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "textBox.setValue(\"huhu\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDTextField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"IllegalArgumentException should have been thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testAcroFormDefaultFonts",
    "signature": "testAcroFormDefaultFonts()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroFormTest",
    "testName": "testIllegalFieldsDefinition",
    "signature": "testIllegalFieldsDefinition()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "createCheckBox",
    "signature": "createCheckBox()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "createPushButton",
    "signature": "createPushButton()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "createRadioButton",
    "signature": "createRadioButton()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "changeRadioButtonToPushButton",
    "signature": "changeRadioButtonToPushButton()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// change to push button\nbuttonField.setPushButton(true)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setPushButton(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setPushButton",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "changePushButtonToRadioButton",
    "signature": "changePushButtonToRadioButton()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// change to push button\nbuttonField.setRadioButton(true)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setRadioButton(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setRadioButton",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "testRadioButtonWithOptions",
    "signature": "testRadioButtonWithOptions()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (pdfDocument.getDocumentCatalog().getAcroForm().getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "radioButton.setValue(\"Off\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"Unexpected IOException \" + e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "testOptionsAndNamesNotNumbers",
    "signature": "testOptionsAndNamesNotNumbers()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfDocument.getDocumentCatalog().getAcroForm().getField(\"RadioButton\").setValue(\"c\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdfDocument.getDocumentCatalog().getAcroForm().getField(\"RadioButton\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "((PDRadioButton) (pdfDocument.getDocumentCatalog().getAcroForm().getField(\"RadioButton\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "radioButton.setValue(\"c\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"Unexpected IOException \" + e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "retrieveAcrobatCheckBoxProperties",
    "signature": "retrieveAcrobatCheckBoxProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDCheckBox) (acrobatAcroForm.getField(\"Checkbox\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "testAcrobatCheckBoxProperties",
    "signature": "testAcrobatCheckBoxProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDCheckBox) (acrobatAcroForm.getField(\"Checkbox\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "checkbox.setValue(\"Yes\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "checkbox.setValue(\"Off\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDCheckBox) (acrobatAcroForm.getField(\"Checkbox-DefaultValue\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "checkbox.setDefaultValue(\"Off\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setDefaultValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setDefaultValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setValueForAbstractedAcrobatCheckBox",
    "signature": "setValueForAbstractedAcrobatCheckBox()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acrobatAcroForm.getField(\"Checkbox\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "checkbox.setValue(\"Yes\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "checkbox.setValue(\"Off\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "testAcrobatCheckBoxGroupProperties",
    "signature": "testAcrobatCheckBoxGroupProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDCheckBox) (acrobatAcroForm.getField(\"CheckboxGroup\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// test a value which sets one of the individual checkboxes within the group\ncheckbox.setValue(\"Option1\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// test a value which sets two of the individual chekboxes within the group\n// as the have the same name entry for being checked\ncheckbox.setValue(\"Option3\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setValueForAbstractedCheckBoxGroup",
    "signature": "setValueForAbstractedCheckBoxGroup()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acrobatAcroForm.getField(\"CheckboxGroup\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// test a value which sets one of the individual checkboxes within the group\ncheckbox.setValue(\"Option1\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// test a value which sets two of the individual chekboxes within the group\n// as the have the same name entry for being checked\ncheckbox.setValue(\"Option3\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setCheckboxInvalidValue",
    "signature": "setCheckboxInvalidValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDCheckBox) (acrobatAcroForm.getField(\"Checkbox\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set a value which doesn\u0027t match the radio button list\ncheckbox.setValue(\"InvalidValue\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setCheckboxGroupInvalidValue",
    "signature": "setCheckboxGroupInvalidValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDCheckBox) (acrobatAcroForm.getField(\"CheckboxGroup\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set a value which doesn\u0027t match the radio button list\ncheckbox.setValue(\"InvalidValue\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setAbstractedCheckboxInvalidValue",
    "signature": "setAbstractedCheckboxInvalidValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acrobatAcroForm.getField(\"Checkbox\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set a value which doesn\u0027t match the radio button list\ncheckbox.setValue(\"InvalidValue\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setAbstractedCheckboxGroupInvalidValue",
    "signature": "setAbstractedCheckboxGroupInvalidValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acrobatAcroForm.getField(\"CheckboxGroup\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set a value which doesn\u0027t match the radio button list\ncheckbox.setValue(\"InvalidValue\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "retrieveAcrobatRadioButtonProperties",
    "signature": "retrieveAcrobatRadioButtonProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acrobatAcroForm.getField(\"RadioButtonGroup\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "testAcrobatRadioButtonProperties",
    "signature": "testAcrobatRadioButtonProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acrobatAcroForm.getField(\"RadioButtonGroup\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set value so that first radio button option is selected\nradioButton.setValue(\"RadioButton01\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "COSName.getPDFName(\"RadioButton01\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "// Set value so that second radio button option is selected\nradioButton.setValue(\"RadioButton02\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "COSName.getPDFName(\"RadioButton02\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setValueForAbstractedAcrobatRadioButton",
    "signature": "setValueForAbstractedAcrobatRadioButton()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acrobatAcroForm.getField(\"RadioButtonGroup\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set value so that first radio button option is selected\nradioButton.setValue(\"RadioButton01\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "COSName.getPDFName(\"RadioButton01\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "// Set value so that second radio button option is selected\nradioButton.setValue(\"RadioButton02\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "COSName.getPDFName(\"RadioButton02\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setRadioButtonInvalidValue",
    "signature": "setRadioButtonInvalidValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acrobatAcroForm.getField(\"RadioButtonGroup\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set a value which doesn\u0027t match the radio button list\nradioButton.setValue(\"InvalidValue\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDButtonTest",
    "testName": "setAbstractedRadioButtonInvalidValue",
    "signature": "setAbstractedRadioButtonInvalidValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "acrobatAcroForm.getField(\"RadioButtonGroup\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// Set a value which doesn\u0027t match the radio button list\nradioButton.setValue(\"InvalidValue\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDChoiceTest",
    "testName": "createListBox",
    "signature": "createListBox()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDChoiceTest",
    "testName": "createComboBox",
    "signature": "createComboBox()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDChoiceTest",
    "testName": "getOptionsFromStrings",
    "signature": "getOptionsFromStrings()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDChoiceTest",
    "testName": "getOptionsFromCOSArray",
    "signature": "getOptionsFromCOSArray()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDChoiceTest",
    "testName": "getOptionsFromMixed",
    "signature": "getOptionsFromMixed()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceStringTest",
    "testName": "testParseDAString",
    "signature": "testParseDAString()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceStringTest",
    "testName": "testFontResourceUnavailable",
    "signature": "testFontResourceUnavailable()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceStringTest",
    "testName": "testWrongNumberOfColorArguments",
    "signature": "testWrongNumberOfColorArguments()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTreeTest",
    "testName": "test5044",
    "signature": "test5044()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureFieldTest",
    "testName": "createDefaultSignatureField",
    "signature": "createDefaultSignatureField()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "sigField.setPartialName(\"SignatureField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setPartialName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "acroForm.getField(\"SignatureField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureFieldTest",
    "testName": "setValueForAbstractedSignatureField",
    "signature": "setValueForAbstractedSignatureField()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "sigField.setPartialName(\"SignatureField\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setPartialName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((PDField) (sigField)).setValue(\"Can\u0027t set value using String\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDField.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDField",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureFieldTest",
    "testName": "testGetContents",
    "signature": "testGetContents()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDTextFieldTest",
    "testName": "createDefaultTextField",
    "signature": "createDefaultTextField()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PDTextFieldTest",
    "testName": "createWidgetForGet",
    "signature": "createWidgetForGet()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PlainTextTest",
    "testName": "characterCR",
    "signature": "characterCR()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PlainTextTest",
    "testName": "characterLF",
    "signature": "characterLF()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PlainTextTest",
    "testName": "characterCRLF",
    "signature": "characterCRLF()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PlainTextTest",
    "testName": "characterLFCR",
    "signature": "characterLFCR()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PlainTextTest",
    "testName": "characterUnicodeLinebreak",
    "signature": "characterUnicodeLinebreak()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.PlainTextTest",
    "testName": "characterUnicodeParagraphbreak",
    "signature": "characterUnicodeParagraphbreak()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testRadioButtonPDModel",
    "signature": "testRadioButtonPDModel()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "widget.setAppearanceState(\"Off\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearanceState(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation",
        "methodName": "setAppearanceState",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "radioButton.setValue(\"Value01\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "radioButton.setValue(\"Value02\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "radioButton.setValue(\"Off\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "optItem.getString(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.getString(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "getString",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox3656NotInUnison",
    "signature": "testPDFBox3656NotInUnison()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox3656ByValidExportValue",
    "signature": "testPDFBox3656ByValidExportValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// set the field to a valid export value\nfield.setValue(\"Checking\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox3656ByInvalidExportValue",
    "signature": "testPDFBox3656ByInvalidExportValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"Invalid\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"Expected an IndexOutOfBoundsException to be thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox3656ByValidIndex",
    "signature": "testPDFBox3656ByValidIndex()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "// set the field to a valid index\nfield.setValue(4)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox3656ByInvalidIndex",
    "signature": "testPDFBox3656ByInvalidIndex()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(6)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(\"Expected an IndexOutOfBoundsException to be thrown\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox4617IndexNoneSelected",
    "signature": "testPDFBox4617IndexNoneSelected()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox4617IndexForSetByOption",
    "signature": "testPDFBox4617IndexForSetByOption()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(\"Checking\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.form.TestRadioButtons",
    "testName": "testPDFBox4617IndexForSetByIndex",
    "signature": "testPDFBox4617IndexForSetByIndex()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "((PDRadioButton) (acroForm.getField(\"Checking/Savings\")))",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm",
        "methodName": "getField",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.interactive.form.PDField"
      },
      {
        "invocation": "field.setValue(4)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.form.PDButton.setValue(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.form.PDButton",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirectionTest",
    "testName": "getCOSBase",
    "signature": "getCOSBase()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "defaultStyle",
    "signature": "defaultStyle()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "getStyle",
    "signature": "getStyle()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "defaultValues",
    "signature": "defaultValues()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "dimension",
    "signature": "dimension()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "directionNone",
    "signature": "directionNone()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "directionNumber",
    "signature": "directionNumber()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "motion",
    "signature": "motion()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "duration",
    "signature": "duration()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "transition.setDuration(4)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition.setDuration(float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition",
        "methodName": "setDuration",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "flyScale",
    "signature": "flyScale()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "transition.setFlyScale(4)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition.setFlyScale(float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition",
        "methodName": "setFlyScale",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionTest",
    "testName": "flyArea",
    "signature": "flyArea()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "transition.setFlyAreaOpaque(true)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition.setFlyAreaOpaque(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition",
        "methodName": "setFlyAreaOpaque",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageLayoutTest",
    "testName": "testValues",
    "signature": "testValues()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageLayout.fromString(s)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageLayout.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageLayout",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageLayout"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageLayoutTest",
    "testName": "fromStringInputNotNullOutputIllegalArgumentException",
    "signature": "fromStringInputNotNullOutputIllegalArgumentException()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageLayout.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageLayout.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageLayout",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageLayout"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputNotNull",
    "signature": "fromStringInputNotNullOutputNotNull()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputNotNull2",
    "signature": "fromStringInputNotNullOutputNotNull2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputNotNull3",
    "signature": "fromStringInputNotNullOutputNotNull3()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputNotNull4",
    "signature": "fromStringInputNotNullOutputNotNull4()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputNotNull5",
    "signature": "fromStringInputNotNullOutputNotNull5()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputNotNull6",
    "signature": "fromStringInputNotNullOutputNotNull6()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputIllegalArgumentException",
    "signature": "fromStringInputNotNullOutputIllegalArgumentException()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "fromStringInputNotNullOutputIllegalArgumentException2",
    "signature": "fromStringInputNotNullOutputIllegalArgumentException2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "PageMode.fromString(value)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PageMode.fromString(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PageMode",
        "methodName": "fromString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PageMode"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.PageModeTest",
    "testName": "stringValueOutputNotNull",
    "signature": "stringValueOutputNotNull()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDDocumentCatalog",
    "testName": "retrievePageLabels",
    "signature": "retrievePageLabels()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDDocumentCatalog",
    "testName": "retrievePageLabelsOnMalformedPdf",
    "signature": "retrievePageLabelsOnMalformedPdf()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDDocumentCatalog",
    "testName": "retrieveNumberOfPages",
    "signature": "retrieveNumberOfPages()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDDocumentCatalog",
    "testName": "handleOutputIntents",
    "signature": "handleOutputIntents()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "oi.setInfo(\"sRGB IEC61966-2.1\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent.setInfo(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent",
        "methodName": "setInfo",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "oi.setOutputCondition(\"sRGB IEC61966-2.1\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent.setOutputCondition(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent",
        "methodName": "setOutputCondition",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "oi.setOutputConditionIdentifier(\"sRGB IEC61966-2.1\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent.setOutputConditionIdentifier(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent",
        "methodName": "setOutputConditionIdentifier",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "oi.setRegistryName(\"http://www.color.org\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent.setRegistryName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent",
        "methodName": "setRegistryName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDDocumentCatalog",
    "testName": "handleBooleanInOpenAction",
    "signature": "handleBooleanInOpenAction()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageAnnotationsFiltering",
    "testName": "validateNoFiltering",
    "signature": "validateNoFiltering()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageAnnotationsFiltering",
    "testName": "validateAllFiltered",
    "signature": "validateAllFiltered()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageAnnotationsFiltering",
    "testName": "validateSelectedFew",
    "signature": "validateSelectedFew()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageTransitions",
    "testName": "readTransitions",
    "signature": "readTransitions()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "doc.getPages().get(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageTree.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageTree",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageTransitions",
    "testName": "saveAndReadTransitions",
    "signature": "saveAndReadTransitions()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "transition.setFlyScale(0.5F)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition.setFlyScale(float)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition",
        "methodName": "setFlyScale",
        "methodParameterTypes": [
          "float"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "doc.getPages().get(0)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDPageTree.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDPageTree",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageTree",
    "testName": "indexOfPageFromOutlineDestination",
    "signature": "indexOfPageFromOutlineDestination()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageTree",
    "testName": "positiveSingleLevel",
    "signature": "positiveSingleLevel()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "doc.getPage(i)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageTree",
    "testName": "positiveMultipleLevel",
    "signature": "positiveMultipleLevel()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "doc.getPage(i)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocument.getPage(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocument",
        "methodName": "getPage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.pdmodel.PDPage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.pdmodel.TestPDPageTree",
    "testName": "negative",
    "signature": "negative()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.rendering.TestPDFToImage",
    "testName": "testRenderImage",
    "signature": "testRenderImage()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(\"failure, see test log for details\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.rendering.TestRendering",
    "testName": "render",
    "signature": "render()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "renderer.renderImage(0)",
        "fullMethodSignature": "org.apache.pdfbox.rendering.PDFRenderer.renderImage(int)",
        "methodDeclaringType": "org.apache.pdfbox.rendering.PDFRenderer",
        "methodName": "renderImage",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.awt.image.BufferedImage"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.text.BidiTest",
    "testName": "testSorted",
    "signature": "testSorted()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.text.BidiTest",
    "testName": "testNotSorted",
    "signature": "testNotSorted()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testConstructionAndCopy",
    "signature": "testConstructionAndCopy()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testGetScalingFactor",
    "signature": "testGetScalingFactor()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testCreateMatrixUsingInvalidInput",
    "signature": "testCreateMatrixUsingInvalidInput()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testMultiplication",
    "signature": "testMultiplication()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "const1.setValue(x, y, x + y)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "const2.setValue(x, y, (8 + x) + y)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testOldMultiplication",
    "signature": "testOldMultiplication()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testMatrix.setValue(x, y, x + y)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testIllegalValueNaN1",
    "signature": "testIllegalValueNaN1()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "m.setValue(0, 0, Float.MAX_VALUE)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "float"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testIllegalValueNaN2",
    "signature": "testIllegalValueNaN2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "m.setValue(0, 0, Float.NaN)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "float"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testIllegalValuePositiveInfinity",
    "signature": "testIllegalValuePositiveInfinity()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "m.setValue(0, 0, Float.POSITIVE_INFINITY)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "float"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testIllegalValueNegativeInfinity",
    "signature": "testIllegalValueNegativeInfinity()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "m.setValue(0, 0, Float.NEGATIVE_INFINITY)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.setValue(int,int,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "setValue",
        "methodParameterTypes": [
          "int",
          "int",
          "float"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testPdfbox2872",
    "signature": "testPdfbox2872()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "toCOSArray.get(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "toCOSArray.get(1)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "toCOSArray.get(2)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "toCOSArray.get(3)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "toCOSArray.get(4)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      },
      {
        "invocation": "toCOSArray.get(5)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSArray.get(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSArray",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSBase"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testGetValues",
    "signature": "testGetValues()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testScaling",
    "signature": "testScaling()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "m.scale(2, 3)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.scale(float,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "scale",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "m.getValue(0, 0)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(0, 1)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(0, 2)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(1, 0)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(1, 2)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(2, 0)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(2, 1)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(2, 2)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.util.MatrixTest",
    "testName": "testTranslation",
    "signature": "testTranslation()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "m.translate(2, 3)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.translate(float,float)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "translate",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "m.getValue(0, 0)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(0, 1)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(0, 2)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(1, 0)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(1, 1)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(1, 2)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(2, 0)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(2, 1)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      },
      {
        "invocation": "m.getValue(2, 2)",
        "fullMethodSignature": "org.apache.pdfbox.util.Matrix.getValue(int,int)",
        "methodDeclaringType": "org.apache.pdfbox.util.Matrix",
        "methodName": "getValue",
        "methodParameterTypes": [
          "int",
          "int"
        ],
        "methodReturnType": "float"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
    "testName": "testProtectionError",
    "signature": "testProtectionError()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "policy.setEncryptionKeyLength(keyLength)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.setEncryptionKeyLength(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy",
        "methodName": "setEncryptionKeyLength",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "save(\"testProtectionError\")",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.File"
      },
      {
        "invocation": "getKeyStore(keyStore2)",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.getKeyStore(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "getKeyStore",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.InputStream"
      },
      {
        "invocation": "fail(\"No exception when using an incorrect decryption key\")",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
    "testName": "testProtection",
    "signature": "testProtection()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "policy.setEncryptionKeyLength(keyLength)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.setEncryptionKeyLength(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy",
        "methodName": "setEncryptionKeyLength",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "save(\"testProtection\")",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.File"
      },
      {
        "invocation": "getKeyStore(keyStore1)",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.getKeyStore(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "getKeyStore",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.InputStream"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
    "testName": "testMultipleRecipients",
    "signature": "testMultipleRecipients()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "policy.setEncryptionKeyLength(keyLength)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.setEncryptionKeyLength(int)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy",
        "methodName": "setEncryptionKeyLength",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "save(\"testMultipleRecipients\")",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.save(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "save",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.File"
      },
      {
        "invocation": "getKeyStore(keyStore1)",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.getKeyStore(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "getKeyStore",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.InputStream"
      },
      {
        "invocation": "getKeyStore(keyStore2)",
        "fullMethodSignature": "org.apache.pdfbox.encryption.TestPublicKeyEncryption.getKeyStore(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
        "methodName": "getKeyStore",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.io.InputStream"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
    "testName": "testReadPubkeyEncryptedAES128",
    "signature": "testReadPubkeyEncryptedAES128()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.encryption.TestPublicKeyEncryption",
    "testName": "testReadPubkeyEncryptedAES256",
    "signature": "testReadPubkeyEncryptedAES256()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
    "testName": "testLaunch",
    "signature": "testLaunch()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "createAction(\"Launch\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction.createAction(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
        "methodName": "createAction",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSDictionary"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
    "testName": "testSound",
    "signature": "testSound()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "createAction(\"Sound\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction.createAction(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
        "methodName": "createAction",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSDictionary"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
    "testName": "testMovie",
    "signature": "testMovie()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "createAction(\"Movie\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction.createAction(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
        "methodName": "createAction",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSDictionary"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
    "testName": "testImportData",
    "signature": "testImportData()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "createAction(\"ImportData\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction.createAction(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
        "methodName": "createAction",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSDictionary"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
    "testName": "testResetForm",
    "signature": "testResetForm()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "createAction(\"ResetForm\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction.createAction(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
        "methodName": "createAction",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSDictionary"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
    "testName": "testJS",
    "signature": "testJS()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "createAction(\"JavaScript\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction.createAction(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.action.pdfa1b.TestForbiddenAction",
        "methodName": "createAction",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSDictionary"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoAction",
    "testName": "testGoto_OK",
    "signature": "testGoto_OK()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"ADest\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoAction",
    "testName": "testGoto_KO_invalidContent",
    "signature": "testGoto_KO_invalidContent()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoAction",
    "testName": "testGoto_KO_missingD",
    "signature": "testGoto_KO_missingD()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoRemoteAction",
    "testName": "testGoto_OK",
    "signature": "testGoto_OK()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"ADest\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      },
      {
        "invocation": "COSName.getPDFName(\"ADest\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoRemoteAction",
    "testName": "testGoto_KO_InvalidContent",
    "signature": "testGoto_KO_InvalidContent()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"ADest\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoRemoteAction",
    "testName": "testGoto_KO_MissingD",
    "signature": "testGoto_KO_MissingD()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"ADest\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestGotoRemoteAction",
    "testName": "testGoto_KO_MissingF",
    "signature": "testGoto_KO_MissingF()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"ADest\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestHideAction",
    "testName": "testHideAction",
    "signature": "testHideAction()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestHideAction",
    "testName": "testHideAction_InvalideH",
    "signature": "testHideAction_InvalideH()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestHideAction",
    "testName": "testHideAction_InvalideT",
    "signature": "testHideAction_InvalideT()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestHideAction",
    "testName": "testHideAction_MissingT",
    "signature": "testHideAction_MissingT()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestNamedAction",
    "testName": "testFirstPage",
    "signature": "testFirstPage()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(PreflightConstants.ACTION_DICTIONARY_VALUE_ATYPE_NAMED_FIRST)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestNamedAction",
    "testName": "testLastPage",
    "signature": "testLastPage()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(PreflightConstants.ACTION_DICTIONARY_VALUE_ATYPE_NAMED_LAST)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestNamedAction",
    "testName": "testNextPage",
    "signature": "testNextPage()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(PreflightConstants.ACTION_DICTIONARY_VALUE_ATYPE_NAMED_NEXT)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestNamedAction",
    "testName": "testPrevPage",
    "signature": "testPrevPage()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(PreflightConstants.ACTION_DICTIONARY_VALUE_ATYPE_NAMED_PREV)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestNamedAction",
    "testName": "testMissingN",
    "signature": "testMissingN()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestNamedAction",
    "testName": "testForbiddenN",
    "signature": "testForbiddenN()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSName.getPDFName(\"unknown\")",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSName.getPDFName(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSName",
        "methodName": "getPDFName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSName"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestSubmitAction",
    "testName": "test",
    "signature": "test()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestSubmitAction",
    "testName": "testMissngF",
    "signature": "testMissngF()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestThreadAction",
    "testName": "test",
    "signature": "test()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestThreadAction",
    "testName": "testMissingD",
    "signature": "testMissingD()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestThreadAction",
    "testName": "testInvalidD",
    "signature": "testInvalidD()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestUriAction",
    "testName": "test",
    "signature": "test()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestUriAction",
    "testName": "testMissingURI",
    "signature": "testMissingURI()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestUriAction",
    "testName": "testInvalidURI",
    "signature": "testInvalidURI()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestUriAction",
    "testName": "testNextValid",
    "signature": "testNextValid()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.action.pdfa1b.TestUriAction",
    "testName": "testNextInvalid",
    "signature": "testNextInvalid()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestMetadataFiles",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "TestNullDocument",
    "signature": "TestNullDocument()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "TestNullMetaData",
    "signature": "TestNullMetaData()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "TestDocumentWithoutInformation",
    "signature": "TestDocumentWithoutInformation()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testEmptyXMP",
    "signature": "testEmptyXMP()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// Writing info in Document Information dictionary\n// TITLE\ndico.setTitle(title)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(author)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(subject)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(creator)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(producer)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testEmptyXMPSchemas",
    "signature": "testEmptyXMPSchemas()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// Writing info in Document Information dictionary\n// TITLE\ndico.setTitle(title)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(author)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(subject)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(creator)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(producer)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testNullArrayValue",
    "signature": "testNullArrayValue()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// AUTHOR\ndico.setAuthor(\"dicoAuthor\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(null)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(\"dicoSubj\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addSubject(null)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testBadSizeOfArrays",
    "signature": "testBadSizeOfArrays()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// Writing info in XMP and Document Information dictionary\n// TITLE\ndico.setTitle(\"dicoTitle\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.setTitle(\"x-default\", \"XMPTitle\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setTitle(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(\"dicoAuthor\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(\"XMPAuthor\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(\"2ndCreator\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(\"dicoSubj\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addSubject(\"XMPSubj\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addSubject(\"2ndSubj\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(\"DicoKeywords\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setKeywords(\"XMPkeywords\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(\"DicoCreator\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "xmp.setCreatorTool(\"XMPCreator\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicSchema.setCreatorTool(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicSchema",
        "methodName": "setCreatorTool",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(\"DicoProducer\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setProducer(\"XMPProducer\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testAllInfoUnsynchronized",
    "signature": "testAllInfoUnsynchronized()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// Writing info in XMP and Document Information dictionary\n// TITLE\ndico.setTitle(\"dicoTitle\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.setTitle(\"x-default\", \"XMPTitle\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setTitle(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(\"dicoAuthor\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(\"XMPAuthor\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(\"dicoSubj\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addSubject(\"XMPSubj\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(\"DicoKeywords\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setKeywords(\"XMPkeywords\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(\"DicoCreator\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "xmp.setCreatorTool(\"XMPCreator\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicSchema.setCreatorTool(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicSchema",
        "methodName": "setCreatorTool",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(\"DicoProducer\")",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setProducer(\"XMPProducer\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testAllInfoSynchronized",
    "signature": "testAllInfoSynchronized()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// Writing info in XMP and Document Information dictionary\n// TITLE\ndico.setTitle(title)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.setTitle(\"x-default\", title)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setTitle(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(author)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(author)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(subject)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addDescription(\"x-default\", subject)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addDescription(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addDescription",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(creator)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "xmp.setCreatorTool(creator)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicSchema.setCreatorTool(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicSchema",
        "methodName": "setCreatorTool",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(producer)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setProducer(producer)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "checkSchemaAccessException",
    "signature": "checkSchemaAccessException()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testBadPrefixSchemas",
    "signature": "testBadPrefixSchemas()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// Writing info in XMP and Document Information dictionary\n// TITLE\ndico.setTitle(title)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.setTitle(\"x-default\", title)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setTitle(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(author)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(author)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(subject)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addDescription(\"x-default\", subject)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addDescription(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addDescription",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(creator)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "xmp.setCreatorTool(creator)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicSchema.setCreatorTool(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicSchema",
        "methodName": "setCreatorTool",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(producer)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setProducer(producer)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testdoublePrefixSchemas",
    "signature": "testdoublePrefixSchemas()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// write some temp info in \u0027false\u0027 schemas\ndc2.setCoverage(\"tmpcover\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setCoverage(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setCoverage",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "xmp2.setCreatorTool(\"tmpcreator\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicSchema.setCreatorTool(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicSchema",
        "methodName": "setCreatorTool",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf2.setKeywords(\"tmpkeys\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// Writing info in XMP and Document Information dictionary\n// TITLE\ndico.setTitle(title)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.setTitle(\"x-default\", title)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setTitle(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setTitle",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// AUTHOR\ndico.setAuthor(author)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setAuthor(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setAuthor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addCreator(author)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// SUBJECT\ndico.setSubject(subject)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setSubject(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setSubject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addDescription(\"x-default\", subject)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addDescription(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addDescription",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// KEYWORDS\ndico.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// CREATOR\ndico.setCreator(creator)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "xmp.setCreatorTool(creator)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicSchema.setCreatorTool(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicSchema",
        "methodName": "setCreatorTool",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "// PRODUCER\ndico.setProducer(producer)",
        "fullMethodSignature": "org.apache.pdfbox.pdmodel.PDDocumentInformation.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.pdmodel.PDDocumentInformation",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setProducer(producer)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.metadata.TestSynchronizedMetadataValidation",
    "testName": "testPDFBox4292",
    "signature": "testPDFBox4292()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"20180817115837+02\u002700\u0027\")",
        "fullMethodSignature": "org.apache.pdfbox.util.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.util.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2018-08-17T09:58:37Z\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestPreflightConfiguration",
    "testName": "testGetValidationProcess_MissingProcess",
    "signature": "testGetValidationProcess_MissingProcess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "configuration.getInstanceOfProcess(\"unknownProcess\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestPreflightConfiguration",
    "testName": "testGetValidationProcess_MissingProcess_NoError",
    "signature": "testGetValidationProcess_MissingProcess_NoError()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "configuration.setErrorOnMissingProcess(false)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.setErrorOnMissingProcess(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "setErrorOnMissingProcess",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "configuration.getInstanceOfProcess(\"unknownProcess\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestPreflightConfiguration",
    "testName": "testReplaceValidationProcess",
    "signature": "testReplaceValidationProcess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "configuration.getInstanceOfProcess(processName)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      },
      {
        "invocation": "configuration.getInstanceOfProcess(processName)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestXmlResultParser",
    "testName": "testOneError",
    "signature": "testOneError()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestXmlResultParser",
    "testName": "testTwoError",
    "signature": "testTwoError()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestXmlResultParser",
    "testName": "testSameErrorTwice",
    "signature": "testSameErrorTwice()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.parser.TestXmlResultParser",
    "testName": "testSameCodeWithDifferentMessages",
    "signature": "testSameCodeWithDifferentMessages()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testIsInteger",
    "signature": "testIsInteger()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "COSInteger.get(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSInteger.get(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSInteger",
        "methodName": "get",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.pdfbox.cos.COSInteger"
      },
      {
        "invocation": "co.setGenerationNumber(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setGenerationNumber(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setGenerationNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "co.setObjectNumber(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setObjectNumber(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setObjectNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testIsFloat",
    "signature": "testIsFloat()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "co.setGenerationNumber(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setGenerationNumber(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setGenerationNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "co.setObjectNumber(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setObjectNumber(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setObjectNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testIsString",
    "signature": "testIsString()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "co.setGenerationNumber(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setGenerationNumber(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setGenerationNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "co.setObjectNumber(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setObjectNumber(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setObjectNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testIsStream",
    "signature": "testIsStream()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "co.setGenerationNumber(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setGenerationNumber(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setGenerationNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "co.setObjectNumber(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setObjectNumber(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setObjectNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testIsDictionary",
    "signature": "testIsDictionary()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "co.setGenerationNumber(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setGenerationNumber(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setGenerationNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "co.setObjectNumber(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setObjectNumber(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setObjectNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testIsArray",
    "signature": "testIsArray()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "co.setGenerationNumber(0)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setGenerationNumber(int)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setGenerationNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "co.setObjectNumber(10)",
        "fullMethodSignature": "org.apache.pdfbox.cos.COSObject.setObjectNumber(long)",
        "methodDeclaringType": "org.apache.pdfbox.cos.COSObject",
        "methodName": "setObjectNumber",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testCloseCOSDocumentNull",
    "signature": "testCloseCOSDocumentNull()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testClosePDDocumentNull",
    "signature": "testClosePDDocumentNull()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.utils.TestCOSUtils",
    "testName": "testCloseCOSDocumentIO",
    "signature": "testCloseCOSDocumentIO()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(e.getMessage())",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.integration.AbstractInvalidFileTester",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "logger.warn(\"This is an empty test\")",
        "fullMethodSignature": "org.apache.commons.logging.Log.warn(java.lang.Object)",
        "methodDeclaringType": "org.apache.commons.logging.Log",
        "methodName": "warn",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "logger.info(\"File invalid as expected (no expected code) :\" + this.path.getAbsolutePath())",
        "fullMethodSignature": "org.apache.commons.logging.Log.info(java.lang.Object)",
        "methodDeclaringType": "org.apache.commons.logging.Log",
        "methodName": "info",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.integration.TestValidFiles",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "logger.warn(\"This is an empty test\")",
        "fullMethodSignature": "org.apache.commons.logging.Log.warn(java.lang.Object)",
        "methodDeclaringType": "org.apache.commons.logging.Log",
        "methodName": "warn",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestInvalidDirectory",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestIsartorBavaria",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "fail(String.format(\"%s : Invalid error code returned. Expected %s, found [%s]\", file.getName(), expectedErrorSet, message.toString().trim()))",
        "fullMethodSignature": "org.junit.Assert.fail(java.lang.String)",
        "methodDeclaringType": "org.junit.Assert",
        "methodName": "fail",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPDFBox3741",
    "testName": "testPDFBox3741",
    "signature": "testPDFBox3741()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetValidationProcess",
    "signature": "testGetValidationProcess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.BOOKMARK_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetValidationPageProcess",
    "signature": "testGetValidationPageProcess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.RESOURCES_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetValidationProcess_noError",
    "signature": "testGetValidationProcess_noError()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.setErrorOnMissingProcess(false)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.setErrorOnMissingProcess(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "setErrorOnMissingProcess",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "confg.removeProcess(PreflightConfiguration.BOOKMARK_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.removeProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "removeProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.BOOKMARK_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetValidationPageProcess_noError",
    "signature": "testGetValidationPageProcess_noError()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.setErrorOnMissingProcess(false)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.setErrorOnMissingProcess(boolean)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "setErrorOnMissingProcess",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "confg.removePageProcess(PreflightConfiguration.RESOURCES_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.removePageProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "removePageProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.RESOURCES_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetMissingValidationProcess",
    "signature": "testGetMissingValidationProcess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.removeProcess(PreflightConfiguration.BOOKMARK_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.removeProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "removeProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.BOOKMARK_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetMissingValidationPageProcess",
    "signature": "testGetMissingValidationPageProcess()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.removePageProcess(PreflightConfiguration.RESOURCES_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.removePageProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "removePageProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.RESOURCES_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetMissingValidationProcess2",
    "signature": "testGetMissingValidationProcess2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.BOOKMARK_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightConfiguration",
    "testName": "testGetMissingValidationPageProcess2",
    "signature": "testGetMissingValidationPageProcess2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "confg.getInstanceOfProcess(PreflightConfiguration.RESOURCES_PROCESS)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightConfiguration.getInstanceOfProcess(java.lang.String)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightConfiguration",
        "methodName": "getInstanceOfProcess",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.pdfbox.preflight.process.ValidationProcess"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightPath",
    "testName": "test",
    "signature": "test()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "path.pushObject(\"a\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightPath.pushObject(java.lang.Object)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightPath",
        "methodName": "pushObject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "boolean"
      },
      {
        "invocation": "path.pushObject(6)",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightPath.pushObject(java.lang.Object)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightPath",
        "methodName": "pushObject",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "boolean"
      },
      {
        "invocation": "path.pushObject(\"b\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightPath.pushObject(java.lang.Object)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightPath",
        "methodName": "pushObject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "boolean"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestPreflightPath",
    "testName": "testPush",
    "signature": "testPush()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "path.pushObject(\"a\")",
        "fullMethodSignature": "org.apache.pdfbox.preflight.PreflightPath.pushObject(java.lang.Object)",
        "methodDeclaringType": "org.apache.pdfbox.preflight.PreflightPath",
        "methodName": "pushObject",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "boolean"
      }
    ]
  },
  {
    "testClassName": "org.apache.pdfbox.preflight.TestValidDirectory",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.fontbox.afm.AFMParserTest",
    "testName": "testEof",
    "signature": "testEof()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.fontbox.cff.CFFParserTest",
    "testName": "testDeltaLists",
    "signature": "testDeltaLists()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.fontbox.ttf.BufferedRandomAccessFileTest",
    "testName": "ensureReadFinishes",
    "signature": "ensureReadFinishes()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.fontbox.ttf.BufferedRandomAccessFileTest",
    "testName": "testReadBuffer",
    "signature": "testReadBuffer()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "braf.seek(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.BufferedRandomAccessFile.seek(long)",
        "methodDeclaringType": "org.apache.fontbox.ttf.BufferedRandomAccessFile",
        "methodName": "seek",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "braf.seek(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.BufferedRandomAccessFile.seek(long)",
        "methodDeclaringType": "org.apache.fontbox.ttf.BufferedRandomAccessFile",
        "methodName": "seek",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "braf.seek(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.BufferedRandomAccessFile.seek(long)",
        "methodDeclaringType": "org.apache.fontbox.ttf.BufferedRandomAccessFile",
        "methodName": "seek",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.RAFDataStreamTest",
    "testName": "testDoubleClose",
    "signature": "testDoubleClose()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TTFSubsetterTest",
    "testName": "testEmptySubset",
    "signature": "testEmptySubset()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new TTFParser().parse(\"src/test/resources/ttf/LiberationSans-Regular.ttf\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFParser.parse(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFParser",
        "methodName": "parse",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.TrueTypeFont"
      },
      {
        "invocation": "subset.nameToGID(\".notdef\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getGlyph().getGlyph(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.GlyphTable.getGlyph(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.GlyphTable",
        "methodName": "getGlyph",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.GlyphData"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TTFSubsetterTest",
    "testName": "testEmptySubset2",
    "signature": "testEmptySubset2()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new TTFParser().parse(\"src/test/resources/ttf/LiberationSans-Regular.ttf\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFParser.parse(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFParser",
        "methodName": "parse",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.TrueTypeFont"
      },
      {
        "invocation": "subset.nameToGID(\".notdef\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getGlyph().getGlyph(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.GlyphTable.getGlyph(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.GlyphTable",
        "methodName": "getGlyph",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.GlyphData"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TTFSubsetterTest",
    "testName": "testNonEmptySubset",
    "signature": "testNonEmptySubset()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new TTFParser().parse(\"src/test/resources/ttf/LiberationSans-Regular.ttf\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFParser.parse(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFParser",
        "methodName": "parse",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.TrueTypeFont"
      },
      {
        "invocation": "ttfSubsetter.add(\u0027a\u0027)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "subset.nameToGID(\".notdef\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"a\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getGlyph().getGlyph(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.GlyphTable.getGlyph(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.GlyphTable",
        "methodName": "getGlyph",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.GlyphData"
      },
      {
        "invocation": "subset.getGlyph().getGlyph(1)",
        "fullMethodSignature": "org.apache.fontbox.ttf.GlyphTable.getGlyph(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.GlyphTable",
        "methodName": "getGlyph",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.GlyphData"
      },
      {
        "invocation": "subset.getGlyph().getGlyph(2)",
        "fullMethodSignature": "org.apache.fontbox.ttf.GlyphTable.getGlyph(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.GlyphTable",
        "methodName": "getGlyph",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.GlyphData"
      },
      {
        "invocation": "full.getAdvanceWidth(full.nameToGID(\"a\"))",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getAdvanceWidth(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getAdvanceWidth",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.nameToGID(\"a\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getAdvanceWidth(subset.nameToGID(\"a\"))",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getAdvanceWidth(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getAdvanceWidth",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"a\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.getHorizontalMetrics().getLeftSideBearing(full.nameToGID(\"a\"))",
        "fullMethodSignature": "org.apache.fontbox.ttf.HorizontalMetricsTable.getLeftSideBearing(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.HorizontalMetricsTable",
        "methodName": "getLeftSideBearing",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.nameToGID(\"a\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getHorizontalMetrics().getLeftSideBearing(subset.nameToGID(\"a\"))",
        "fullMethodSignature": "org.apache.fontbox.ttf.HorizontalMetricsTable.getLeftSideBearing(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.HorizontalMetricsTable",
        "methodName": "getLeftSideBearing",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"a\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TTFSubsetterTest",
    "testName": "testPDFBox3319",
    "signature": "testPDFBox3319()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "ttfSubsetter.add(codePoint)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "full.getAdvanceWidth(oldGID)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getAdvanceWidth(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getAdvanceWidth",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getAdvanceWidth(newGID)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getAdvanceWidth(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getAdvanceWidth",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.getHorizontalMetrics().getLeftSideBearing(oldGID)",
        "fullMethodSignature": "org.apache.fontbox.ttf.HorizontalMetricsTable.getLeftSideBearing(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.HorizontalMetricsTable",
        "methodName": "getLeftSideBearing",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getHorizontalMetrics().getLeftSideBearing(newGID)",
        "fullMethodSignature": "org.apache.fontbox.ttf.HorizontalMetricsTable.getLeftSideBearing(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.HorizontalMetricsTable",
        "methodName": "getLeftSideBearing",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TTFSubsetterTest",
    "testName": "testPDFBox3379",
    "signature": "testPDFBox3379()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "new TTFParser().parse(\"target/pdfs/DejaVuSansMono.ttf\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFParser.parse(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFParser",
        "methodName": "parse",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.fontbox.ttf.TrueTypeFont"
      },
      {
        "invocation": "ttfSubsetter.add(\u0027A\u0027)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "ttfSubsetter.add(\u0027 \u0027)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "ttfSubsetter.add(\u0027B\u0027)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "subset.nameToGID(\".notdef\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"space\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"A\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"B\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.getAdvanceWidth(full.nameToGID(name))",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getAdvanceWidth(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getAdvanceWidth",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.nameToGID(name)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getAdvanceWidth(subset.nameToGID(name))",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getAdvanceWidth(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getAdvanceWidth",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(name)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.getHorizontalMetrics().getLeftSideBearing(full.nameToGID(name))",
        "fullMethodSignature": "org.apache.fontbox.ttf.HorizontalMetricsTable.getLeftSideBearing(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.HorizontalMetricsTable",
        "methodName": "getLeftSideBearing",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "full.nameToGID(name)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.getHorizontalMetrics().getLeftSideBearing(subset.nameToGID(name))",
        "fullMethodSignature": "org.apache.fontbox.ttf.HorizontalMetricsTable.getLeftSideBearing(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.HorizontalMetricsTable",
        "methodName": "getLeftSideBearing",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(name)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TTFSubsetterTest",
    "testName": "testPDFBox3757",
    "signature": "testPDFBox3757()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "ttfSubsetter.add(\u0027Ö\u0027)// \u0027Ö\u0027 doesn\u0027t work with jdk6 (PDFBOX-3757)?\n",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "ttfSubsetter.add(\u0027 \u0027)",
        "fullMethodSignature": "org.apache.fontbox.ttf.TTFSubsetter.add(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TTFSubsetter",
        "methodName": "add",
        "methodParameterTypes": [
          "char"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "subset.nameToGID(\".notdef\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"O\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"Odieresis\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"uni200A\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "subset.nameToGID(\"dieresis.uc\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.nameToGID(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "nameToGID",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "int"
      },
      {
        "invocation": "pst.getName(0)",
        "fullMethodSignature": "org.apache.fontbox.ttf.PostScriptTable.getName(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.PostScriptTable",
        "methodName": "getName",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "pst.getName(1)",
        "fullMethodSignature": "org.apache.fontbox.ttf.PostScriptTable.getName(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.PostScriptTable",
        "methodName": "getName",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "pst.getName(2)",
        "fullMethodSignature": "org.apache.fontbox.ttf.PostScriptTable.getName(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.PostScriptTable",
        "methodName": "getName",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "pst.getName(3)",
        "fullMethodSignature": "org.apache.fontbox.ttf.PostScriptTable.getName(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.PostScriptTable",
        "methodName": "getName",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "pst.getName(4)",
        "fullMethodSignature": "org.apache.fontbox.ttf.PostScriptTable.getName(int)",
        "methodDeclaringType": "org.apache.fontbox.ttf.PostScriptTable",
        "methodName": "getName",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "subset.getPath(\"uni200A\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getPath(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getPath",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.awt.geom.GeneralPath"
      },
      {
        "invocation": "subset.getPath(\"dieresis.uc\")",
        "fullMethodSignature": "org.apache.fontbox.ttf.TrueTypeFont.getPath(java.lang.String)",
        "methodDeclaringType": "org.apache.fontbox.ttf.TrueTypeFont",
        "methodName": "getPath",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.awt.geom.GeneralPath"
      }
    ]
  },
  {
    "testClassName": "org.apache.fontbox.ttf.TestMemoryTTFDataStream",
    "testName": "testEOF",
    "signature": "testEOF()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.fontbox.type1.Type1LexerTest",
    "testName": "testRealNumbers",
    "signature": "testRealNumbers()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testInitializedToNull",
    "signature": "testInitializedToNull()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schema.getProperty(fieldName)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      },
      {
        "invocation": "calculateSimpleGetter(fieldName)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractTypeTester.calculateSimpleGetter(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractTypeTester",
        "methodName": "calculateSimpleGetter",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "calculateArrayGetter(fieldName)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractTypeTester.calculateArrayGetter(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractTypeTester",
        "methodName": "calculateArrayGetter",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testSettingValue",
    "signature": "testSettingValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testRandomSettingValue",
    "signature": "testRandomSettingValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testSettingValueInArray",
    "signature": "testSettingValueInArray()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testRandomSettingValueInArray",
    "signature": "testRandomSettingValueInArray()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testPropertySetterSimple",
    "signature": "testPropertySetterSimple()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testRandomPropertySetterSimple",
    "signature": "testRandomPropertySetterSimple()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testPropertySetterInArray",
    "signature": "testPropertySetterInArray()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractSchemaTester",
    "testName": "testRandomPropertySetterInArray",
    "signature": "testRandomPropertySetterInArray()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
    "testName": "testGetSetValue",
    "signature": "testGetSetValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
    "testName": "testGetSetProperty",
    "signature": "testGetSetProperty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "testGetSetTextListValue(\"seq\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.testGetSetTextListValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "testGetSetTextListValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testGetSetTextListValue(\"seq\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.testGetSetTextListValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "testGetSetTextListValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testGetSetTextListValue(\"bag\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.testGetSetTextListValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "testGetSetTextListValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testGetSetTextListValue(\"bag\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.testGetSetTextListValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "testGetSetTextListValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testGetSetTextListValue(\"bag\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.testGetSetTextListValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "testGetSetTextListValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "testGetSetDateListValue(\"seq\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.testGetSetDateListValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "testGetSetDateListValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "retrievePropertyType(field.get(schema).toString())",
        "fullMethodSignature": "org.apache.xmpbox.schema.AbstractXMPSchemaTest.retrievePropertyType(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AbstractXMPSchemaTest",
        "methodName": "retrievePropertyType",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.PropertyType"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AdobePDFErrorsTest",
    "testName": "testPDFAIdentification",
    "signature": "testPDFAIdentification()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setPDFVersion(pdfVersion)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setPDFVersion(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setPDFVersion",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setProducer(producer)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AdobePDFErrorsTest",
    "testName": "testBadPDFAConformanceId",
    "signature": "testBadPDFAConformanceId()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfaid.setConformance(conformance)",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setConformance(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setConformance",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AdobePDFErrorsTest",
    "testName": "testBadVersionIdValueType",
    "signature": "testBadVersionIdValueType()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfaid.setPartValueWithString(\"1\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setPartValueWithString(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setPartValueWithString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdfaid.setPartValueWithString(\"ojoj\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setPartValueWithString(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setPartValueWithString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AdobePDFTest",
    "testName": "testPDFAIdentification",
    "signature": "testPDFAIdentification()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setKeywords(keywords)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setKeywords(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setKeywords",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setPDFVersion(pdfVersion)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setPDFVersion(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setPDFVersion",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setProducer(producer)",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.AdobePDFTest",
    "testName": "testBadPDFAConformanceId",
    "signature": "testBadPDFAConformanceId()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfaid.setConformance(conformance)",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setConformance(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setConformance",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.BasicJobTicketSchemaTest",
    "testName": "testAddTwoJobs",
    "signature": "testAddTwoJobs()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "basic.addJob(\"zeid1\", \"zename1\", \"zeurl1\", \"aaa\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema.addJob(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema",
        "methodName": "addJob",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "basic.addJob(\"zeid2\", \"zename2\", \"zeurl2\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema.addJob(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema",
        "methodName": "addJob",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.BasicJobTicketSchemaTest",
    "testName": "testAddWithDefaultPrefix",
    "signature": "testAddWithDefaultPrefix()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "basic.addJob(\"zeid2\", \"zename2\", \"zeurl2\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema.addJob(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema",
        "methodName": "addJob",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.BasicJobTicketSchemaTest",
    "testName": "testAddWithDefinedPrefix",
    "signature": "testAddWithDefinedPrefix()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "basic.addJob(\"zeid2\", \"zename2\", \"zeurl2\", \"aaa\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema.addJob(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPBasicJobTicketSchema",
        "methodName": "addJob",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.PDFAIdentificationOthersTest",
    "testName": "testPDFAIdentification",
    "signature": "testPDFAIdentification()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfaid.setPartValueWithInt(versionId)",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setPartValueWithInt(int)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setPartValueWithInt",
        "methodParameterTypes": [
          "int"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdfaid.setAmd(amdId)",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setAmd(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setAmd",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdfaid.setConformance(conformance)",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setConformance(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setConformance",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.PDFAIdentificationOthersTest",
    "testName": "testBadPDFAConformanceId",
    "signature": "testBadPDFAConformanceId()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfaid.setConformance(conformance)",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setConformance(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setConformance",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.PDFAIdentificationOthersTest",
    "testName": "testBadVersionIdValueType",
    "signature": "testBadVersionIdValueType()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "pdfaid.setPartValueWithString(\"1\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setPartValueWithString(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setPartValueWithString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdfaid.setPartValueWithString(\"ojoj\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.PDFAIdentificationSchema.setPartValueWithString(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.PDFAIdentificationSchema",
        "methodName": "setPartValueWithString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.TestExifXmp",
    "testName": "testNonStrict",
    "signature": "testNonStrict()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "builder.setStrictParsing(false)",
        "fullMethodSignature": "org.apache.xmpbox.xml.DomXmpParser.setStrictParsing(boolean)",
        "methodDeclaringType": "org.apache.xmpbox.xml.DomXmpParser",
        "methodName": "setStrictParsing",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((TextType) (schema.getProperty(ExifSchema.SPECTRAL_SENSITIVITY)))",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.TestExifXmp",
    "testName": "testGenerate",
    "signature": "testGenerate()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "tmapping.createInteger(oecf.getNamespace(), oecf.getPrefix(), OECFType.COLUMNS, 14)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createInteger(java.lang.String,java.lang.String,java.lang.String,int)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createInteger",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "oecf.setPropertyName(ExifSchema.OECF)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractField.setPropertyName(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractField",
        "methodName": "setPropertyName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testBagManagement",
    "signature": "testBagManagement()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.getMetadata().getTypeMapping().createText(null, \"rdf\", \"li\", value1)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "schem.addQualifiedBagValue(bagName, value2)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addQualifiedBagValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addQualifiedBagValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedBagValueList(bagName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedBagValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedBagValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.removeUnqualifiedBagValue(bagName, value1)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.removeUnqualifiedBagValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "removeUnqualifiedBagValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedBagValueList(bagName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedBagValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedBagValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testArrayList",
    "signature": "testArrayList()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "tm.createText(null, \"rdf\", \"li\", \"valeur1\")",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "tm.createText(null, \"rdf\", \"li\", \"valeur2\")",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "schem.getUnqualifiedArrayList(\"seqType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedArrayList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedArrayList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testSeqManagement",
    "signature": "testSeqManagement()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "parent.getTypeMapping().createBoolean(null, \"rdf\", \"li\", true)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createBoolean(java.lang.String,java.lang.String,java.lang.String,boolean)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createBoolean",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "schem.addUnqualifiedSequenceValue(seqName, textVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addUnqualifiedSequenceValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addUnqualifiedSequenceValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceDateValueList(seqName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceDateValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceDateValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceValueList(seqName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceDateValueList(seqName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceDateValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceDateValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.removeUnqualifiedSequenceValue(seqName, textVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.removeUnqualifiedSequenceValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "removeUnqualifiedSequenceValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceValueList(seqName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "rdfAboutTest",
    "signature": "rdfAboutTest()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setAboutAsSimple(about)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setAboutAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setAboutAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setAboutAsSimple(\"\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setAboutAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setAboutAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setAboutAsSimple(null)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setAboutAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setAboutAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testBadRdfAbout",
    "signature": "testBadRdfAbout()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testSetSpecifiedSimpleTypeProperty",
    "signature": "testSetSpecifiedSimpleTypeProperty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setTextPropertyValueAsSimple(prop, val)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setTextPropertyValueAsSimple(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setTextPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedTextPropertyValue(prop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextPropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextPropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.setTextPropertyValueAsSimple(prop, val2)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setTextPropertyValueAsSimple(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setTextPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedTextPropertyValue(prop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextPropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextPropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.setTextPropertyValueAsSimple(prop, null)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setTextPropertyValueAsSimple(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setTextPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedTextProperty(prop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testSpecifiedSimplePropertyFormer",
    "signature": "testSpecifiedSimplePropertyFormer()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setTextPropertyValueAsSimple(prop, val)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setTextPropertyValueAsSimple(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setTextPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getMetadata().getTypeMapping().createText(null, schem.getPrefix(), prop, \"value2\")",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "schem.getUnqualifiedTextPropertyValue(prop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextPropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextPropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.getUnqualifiedTextProperty(prop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testAsSimpleMethods",
    "signature": "testAsSimpleMethods()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setBooleanPropertyValueAsSimple(bool, boolVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setBooleanPropertyValueAsSimple(java.lang.String,java.lang.Boolean)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setBooleanPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(langprop, lang, langVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.addBagValueAsSimple(bagprop, bagVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addBagValueAsSimple(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addBagValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.addUnqualifiedSequenceValue(seqprop, seqPropVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addUnqualifiedSequenceValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addUnqualifiedSequenceValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getBooleanProperty(prefSchem + bool)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getBooleanProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getBooleanProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "schem.getDateProperty(prefSchem + date)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getDateProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getDateProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.DateType"
      },
      {
        "invocation": "schem.getIntegerProperty(prefSchem + integ)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getIntegerProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getIntegerProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyValue(langprop, lang)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.getUnqualifiedBagValueList(bagprop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedBagValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedBagValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceValueList(seqprop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceDateValueList(seqdate)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceDateValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceDateValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyLanguagesValue(langprop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyLanguagesValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyLanguagesValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getBooleanPropertyValueAsSimple(bool)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getBooleanPropertyValueAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getBooleanPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.Boolean"
      },
      {
        "invocation": "schem.getDatePropertyValueAsSimple(date)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getDatePropertyValueAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getDatePropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "schem.getIntegerPropertyValueAsSimple(integ)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getIntegerPropertyValueAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getIntegerPropertyValueAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.Integer"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyValue(langprop, lang)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.getUnqualifiedBagValueList(bagprop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedBagValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedBagValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceValueList(seqprop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedSequenceDateValueList(seqdate)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceDateValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceDateValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyLanguagesValue(langprop)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyLanguagesValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyLanguagesValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testProperties",
    "signature": "testProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "// In real cases, rdf ns will be declared before !\nschem.addNamespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \"rdf\")",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.addNamespace(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "addNamespace",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setAboutAsSimple(aboutVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setAboutAsSimple(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setAboutAsSimple",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setTextPropertyValue(textProp, textPropVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setTextPropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setTextPropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedTextPropertyValue(textProp)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextPropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextPropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "parent.getTypeMapping().createText(null, \"nsSchem\", \"textType\", \"GRINGO\")",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "schem.getUnqualifiedTextProperty(\"textType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "schem.getDatePropertyValue(date)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getDatePropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getDatePropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "schem.getDateProperty(\"dateType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getDateProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getDateProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.DateType"
      },
      {
        "invocation": "schem.getBooleanPropertyValue(bool)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getBooleanPropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getBooleanPropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.Boolean"
      },
      {
        "invocation": "parent.getTypeMapping().createBoolean(null, \"nsSchem\", \"boolType\", false)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createBoolean(java.lang.String,java.lang.String,java.lang.String,boolean)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createBoolean",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "schem.getBooleanProperty(\"boolType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getBooleanProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getBooleanProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "schem.getIntegerPropertyValue(intProp)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getIntegerPropertyValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getIntegerPropertyValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.Integer"
      },
      {
        "invocation": "parent.getTypeMapping().createInteger(null, \"nsSchem\", \"intType\", 5)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createInteger(java.lang.String,java.lang.String,java.lang.String,int)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createInteger",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "schem.getIntegerProperty(\"intType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getIntegerProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getIntegerProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "schem.getIntegerProperty(\"boolType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getIntegerProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getIntegerProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "schem.getUnqualifiedTextProperty(\"intType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedTextProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedTextProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      },
      {
        "invocation": "schem.getDateProperty(\"textType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getDateProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getDateProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.DateType"
      },
      {
        "invocation": "schem.getBooleanProperty(\"dateType\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getBooleanProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getBooleanProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testAltProperties",
    "signature": "testAltProperties()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(altProp, usLang, usVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(altProp, defaultLang, defaultVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(altProp, frLang, frVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyValue(altProp, defaultLang)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyValue(altProp, frLang)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyValue(altProp, usLang)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyLanguagesValue(altProp)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyLanguagesValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyLanguagesValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(altProp, frLang, frVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyValue(altProp, frLang)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(altProp, frLang, null)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem.getUnqualifiedLanguagePropertyLanguagesValue(altProp)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyLanguagesValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyLanguagesValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem.setUnqualifiedLanguagePropertyValue(altProp, frLang, frVal)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testMergeSchema",
    "signature": "testMergeSchema()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "schem1.addQualifiedBagValue(bagName, valBagSchem1)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addQualifiedBagValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addQualifiedBagValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem1.addUnqualifiedSequenceValue(seqName, valSeqSchem1)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addUnqualifiedSequenceValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addUnqualifiedSequenceValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem1.setUnqualifiedLanguagePropertyValue(altName, langAltSchem1, valAltSchem1)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem2.addQualifiedBagValue(bagName, valBagSchem2)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addQualifiedBagValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addQualifiedBagValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem2.addUnqualifiedSequenceValue(seqName, valSeqSchem2)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.addUnqualifiedSequenceValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "addUnqualifiedSequenceValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem2.setUnqualifiedLanguagePropertyValue(altName, langAltSchem2, valAltSchem2)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.setUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "setUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "schem1.getUnqualifiedLanguagePropertyValue(altName, langAltSchem2)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem1.getUnqualifiedLanguagePropertyValue(altName, langAltSchem1)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedLanguagePropertyValue(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedLanguagePropertyValue",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "schem1.getUnqualifiedBagValueList(bagName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedBagValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedBagValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      },
      {
        "invocation": "schem1.getUnqualifiedSequenceValueList(seqName)",
        "fullMethodSignature": "org.apache.xmpbox.schema.XMPSchema.getUnqualifiedSequenceValueList(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.XMPSchema",
        "methodName": "getUnqualifiedSequenceValueList",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.List"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.schema.XMPSchemaTest",
    "testName": "testListAndContainerAccessor",
    "signature": "testListAndContainerAccessor()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "parent.getTypeMapping().createBoolean(null, schem.getPrefix(), boolname, boolVal)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createBoolean(java.lang.String,java.lang.String,java.lang.String,boolean)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createBoolean",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "schem.getProperty(boolname)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testInitializedToNull",
    "signature": "testInitializedToNull()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "structured.getProperty(fieldName)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      },
      {
        "invocation": "calculateSimpleGetter(fieldName)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractTypeTester.calculateSimpleGetter(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractTypeTester",
        "methodName": "calculateSimpleGetter",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testSettingValue",
    "signature": "testSettingValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testRandomSettingValue",
    "signature": "testRandomSettingValue()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testPropertyType",
    "signature": "testPropertyType()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testRandomPropertyType",
    "signature": "testRandomPropertyType()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testSetter",
    "signature": "testSetter()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.AbstractStructuredTypeTester",
    "testName": "testRandomSetter",
    "signature": "testRandomSetter()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.AttributeTest",
    "testName": "testAtt",
    "signature": "testAtt()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "att.setNsURI(nsUri2)",
        "fullMethodSignature": "org.apache.xmpbox.type.Attribute.setNsURI(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.Attribute",
        "methodName": "setNsURI",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "att.setName(localName2)",
        "fullMethodSignature": "org.apache.xmpbox.type.Attribute.setName(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.Attribute",
        "methodName": "setName",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "att.setValue(value2)",
        "fullMethodSignature": "org.apache.xmpbox.type.Attribute.setValue(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.Attribute",
        "methodName": "setValue",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.AttributeTest",
    "testName": "testAttWithoutPrefix",
    "signature": "testAttWithoutPrefix()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestAbstractStructuredType",
    "testName": "validate",
    "signature": "validate()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestAbstractStructuredType",
    "testName": "testNonExistingProperty",
    "signature": "testNonExistingProperty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "st.getProperty(\"NOT_EXISTING\")",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestAbstractStructuredType",
    "testName": "testNotValuatedPropertyProperty",
    "signature": "testNotValuatedPropertyProperty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "st.getProperty(MyStructuredType.MYTEXT)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestAbstractStructuredType",
    "testName": "testValuatedTextProperty",
    "signature": "testValuatedTextProperty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "st.addSimpleProperty(MyStructuredType.MYTEXT, s)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractStructuredType.addSimpleProperty(java.lang.String,java.lang.Object)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractStructuredType",
        "methodName": "addSimpleProperty",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "st.getPropertyValueAsString(MyStructuredType.MYTEXT)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractStructuredType.getPropertyValueAsString(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractStructuredType",
        "methodName": "getPropertyValueAsString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "st.getPropertyValueAsString(MyStructuredType.MYDATE)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractStructuredType.getPropertyValueAsString(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractStructuredType",
        "methodName": "getPropertyValueAsString",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      },
      {
        "invocation": "st.getProperty(MyStructuredType.MYTEXT)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestAbstractStructuredType",
    "testName": "testValuatedDateProperty",
    "signature": "testValuatedDateProperty()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "st.getDatePropertyAsCalendar(MyStructuredType.MYDATE)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractStructuredType.getDatePropertyAsCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractStructuredType",
        "methodName": "getDatePropertyAsCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "st.getDatePropertyAsCalendar(MyStructuredType.MYTEXT)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractStructuredType.getDatePropertyAsCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractStructuredType",
        "methodName": "getDatePropertyAsCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "st.getProperty(MyStructuredType.MYDATE)",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractComplexProperty.getProperty(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractComplexProperty",
        "methodName": "getProperty",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.AbstractField"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestDerivedType",
    "testName": "test1",
    "signature": "test1()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testBooleanBadTypeDetection",
    "signature": "testBooleanBadTypeDetection()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testDateBadTypeDetection",
    "signature": "testDateBadTypeDetection()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testIntegerBadTypeDetection",
    "signature": "testIntegerBadTypeDetection()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testRealBadTypeDetection",
    "signature": "testRealBadTypeDetection()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testTextBadTypeDetection",
    "signature": "testTextBadTypeDetection()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testElementAndObjectSynchronization",
    "signature": "testElementAndObjectSynchronization()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "parent.getTypeMapping().createBoolean(null, \"test\", \"boolean\", boolv)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createBoolean(java.lang.String,java.lang.String,java.lang.String,boolean)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createBoolean",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "parent.getTypeMapping().createInteger(null, \"test\", \"integer\", integerv)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createInteger(java.lang.String,java.lang.String,java.lang.String,int)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createInteger",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "parent.getTypeMapping().createReal(null, \"test\", \"real\", realv)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createReal(java.lang.String,java.lang.String,java.lang.String,float)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createReal",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "float"
        ],
        "methodReturnType": "org.apache.xmpbox.type.RealType"
      },
      {
        "invocation": "parent.getTypeMapping().createText(null, \"test\", \"text\", textv)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testCreationFromString",
    "signature": "testCreationFromString()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testObjectCreationWithNamespace",
    "signature": "testObjectCreationWithNamespace()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "parent.getTypeMapping().createBoolean(ns, \"test\", \"boolean\", true)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createBoolean(java.lang.String,java.lang.String,java.lang.String,boolean)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createBoolean",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ],
        "methodReturnType": "org.apache.xmpbox.type.BooleanType"
      },
      {
        "invocation": "parent.getTypeMapping().createInteger(ns, \"test\", \"integer\", 1)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createInteger(java.lang.String,java.lang.String,java.lang.String,int)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createInteger",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int"
        ],
        "methodReturnType": "org.apache.xmpbox.type.IntegerType"
      },
      {
        "invocation": "parent.getTypeMapping().createReal(ns, \"test\", \"real\", ((float) (1.6)))",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createReal(java.lang.String,java.lang.String,java.lang.String,float)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createReal",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "double"
        ],
        "methodReturnType": "org.apache.xmpbox.type.RealType"
      },
      {
        "invocation": "parent.getTypeMapping().createText(ns, \"test\", \"text\", \"TEST\")",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.createText(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "createText",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.TextType"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testExceptionWithCause",
    "signature": "testExceptionWithCause()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.type.TestSimpleMetadataProperties",
    "testName": "testAttribute",
    "signature": "testAttribute()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "integer.getAttribute(value.getName())",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractField.getAttribute(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractField",
        "methodName": "getAttribute",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.Attribute"
      },
      {
        "invocation": "integer.containsAttribute(value.getName())",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractField.containsAttribute(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractField",
        "methodName": "containsAttribute",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "boolean"
      },
      {
        "invocation": "integer.getAttribute(value2.getName())",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractField.getAttribute(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractField",
        "methodName": "getAttribute",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.type.Attribute"
      },
      {
        "invocation": "integer.removeAttribute(value2.getName())",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractField.removeAttribute(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractField",
        "methodName": "removeAttribute",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "integer.containsAttribute(value2.getName())",
        "fullMethodSignature": "org.apache.xmpbox.type.AbstractField.containsAttribute(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.AbstractField",
        "methodName": "containsAttribute",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "boolean"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testStructuredRecursive",
    "signature": "testStructuredRecursive()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testEmptyLi",
    "signature": "testEmptyLi()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testEmptyLi2",
    "signature": "testEmptyLi2()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testGetTitle",
    "signature": "testGetTitle()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "dc.getTitle(null)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.getTitle(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "getTitle",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.lang.String"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testAltBagSeq",
    "signature": "testAltBagSeq()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testIsartorStyleWithThumbs",
    "signature": "testIsartorStyleWithThumbs()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"2008-01-18T16:59:54+01:00\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2008-01-18T16:59:54+01:00\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2008-01-18T16:59:54+01:00\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWithNoXPacketStart",
    "signature": "testWithNoXPacketStart()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWithNoXPacketEnd",
    "signature": "testWithNoXPacketEnd()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWithNoRDFElement",
    "signature": "testWithNoRDFElement()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWithTwoRDFElement",
    "signature": "testWithTwoRDFElement()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWithInvalidRDFElementPrefix",
    "signature": "testWithInvalidRDFElementPrefix()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWithRDFRootAsText",
    "signature": "testWithRDFRootAsText()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testUndefinedSchema",
    "signature": "testUndefinedSchema()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testUndefinedPropertyWithDefinedSchema",
    "signature": "testUndefinedPropertyWithDefinedSchema()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testUndefinedStructuredWithDefinedSchema",
    "signature": "testUndefinedStructuredWithDefinedSchema()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testRdfAboutFound",
    "signature": "testRdfAboutFound()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testWihtAttributesAsProperties",
    "signature": "testWihtAttributesAsProperties()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.parser.DeserializationTest",
    "testName": "testSpaceTextValues",
    "signature": "testSpaceTextValues()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.DateConverterTest",
    "testName": "testDateConversion",
    "signature": "testDateConversion()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-12-08T12:07:00-05:00\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-12-08T12:07-05:00\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2011-11-20T10:09:00Z\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2011-11-20T10:09Z\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02T16:37:19.192Z\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02T16:37:19.192Z\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02T16:37:19.192+02:00\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02T08:37:19.192PST\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02T16:37:19.192Europe/Berlin\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(time)",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(time)",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(time)",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.DateConverterTest",
    "testName": "testDateFormatting",
    "signature": "testDateFormatting()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "DateConverter.toCalendar(\"2015-02-02T16:37:19.192Z\")",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      },
      {
        "invocation": "DateConverter.toCalendar(DateConverter.toISO8601(cal, true))",
        "fullMethodSignature": "org.apache.xmpbox.DateConverter.toCalendar(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.DateConverter",
        "methodName": "toCalendar",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "java.util.Calendar"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.DoubleSameTypeSchemaTest",
    "testName": "testDoubleDublinCore",
    "signature": "testDoubleDublinCore()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "dc1.setFormat(format)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setFormat(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setFormat",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc1.addCreator(creators.get(0))",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc1.addCreator(creators.get(1))",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc2.setCoverage(coverage)",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setCoverage(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setCoverage",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc2.addCreator(creators.get(0))",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc2.addCreator(creators.get(1))",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addCreator(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addCreator",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "((DublinCoreSchema) (metadata.getSchema(stDub.preferedPrefix(), stDub.namespace())))",
        "fullMethodSignature": "org.apache.xmpbox.XMPMetadata.getSchema(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.XMPMetadata",
        "methodName": "getSchema",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.schema.XMPSchema"
      },
      {
        "invocation": "((DublinCoreSchema) (metadata.getSchema(ownPrefix, stDub.namespace())))",
        "fullMethodSignature": "org.apache.xmpbox.XMPMetadata.getSchema(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.XMPMetadata",
        "methodName": "getSchema",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.schema.XMPSchema"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.SaveMetadataHelperTest",
    "testName": "testSchemaParsing",
    "signature": "testSchemaParsing()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "dc.setCoverage(\"coverage\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setCoverage(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setCoverage",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addContributor(\"contributor1\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addContributor(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addContributor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addContributor(\"contributor2\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addContributor(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addContributor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addDescription(\"x-default\", \"Description\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addDescription(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addDescription",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.SaveMetadataHelperTest",
    "testName": "testMetadataParsing",
    "signature": "testMetadataParsing()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "dc.setCoverage(\"coverage\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.setCoverage(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "setCoverage",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addContributor(\"contributor1\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addContributor(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addContributor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addContributor(\"contributor2\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addContributor(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addContributor",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "dc.addDescription(\"x-default\", \"Description\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.DublinCoreSchema.addDescription(java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.DublinCoreSchema",
        "methodName": "addDescription",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setProducer(\"Producer\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setProducer(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setProducer",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      },
      {
        "invocation": "pdf.setPDFVersion(\"1.4\")",
        "fullMethodSignature": "org.apache.xmpbox.schema.AdobePDFSchema.setPDFVersion(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.schema.AdobePDFSchema",
        "methodName": "setPDFVersion",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "void"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.TestValidatePermitedMetadata",
    "testName": "checkExistence",
    "signature": "checkExistence()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "mapping.getSchemaFactory(namespace)",
        "fullMethodSignature": "org.apache.xmpbox.type.TypeMapping.getSchemaFactory(java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.type.TypeMapping",
        "methodName": "getSchemaFactory",
        "methodParameterTypes": [
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.schema.XMPSchemaFactory"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.TestXMPWithDefinedSchemas",
    "testName": "main",
    "signature": "main()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.XMPMetaDataTest",
    "testName": "testAddingSchem",
    "signature": "testAddingSchem()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.XMPMetaDataTest",
    "testName": "testTransformerExceptionMessage",
    "signature": "testTransformerExceptionMessage()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.XMPMetaDataTest",
    "testName": "testTransformerExceptionWithCause",
    "signature": "testTransformerExceptionWithCause()",
    "invocationWithPrimitiveParams": []
  },
  {
    "testClassName": "org.apache.xmpbox.XMPMetaDataTest",
    "testName": "testInitMetaDataWithInfo",
    "signature": "testInitMetaDataWithInfo()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "XMPMetadata.createXMPMetadata(xpacketBegin, xpacketId, xpacketBytes, xpacketEncoding)",
        "fullMethodSignature": "org.apache.xmpbox.XMPMetadata.createXMPMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
        "methodDeclaringType": "org.apache.xmpbox.XMPMetadata",
        "methodName": "createXMPMetadata",
        "methodParameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ],
        "methodReturnType": "org.apache.xmpbox.XMPMetadata"
      }
    ]
  },
  {
    "testClassName": "org.apache.xmpbox.XMPMetaDataTest",
    "testName": "testPDFBOX3257",
    "signature": "testPDFBOX3257()",
    "invocationWithPrimitiveParams": [
      {
        "invocation": "xmpParser.setStrictParsing(false)",
        "fullMethodSignature": "org.apache.xmpbox.xml.DomXmpParser.setStrictParsing(boolean)",
        "methodDeclaringType": "org.apache.xmpbox.xml.DomXmpParser",
        "methodName": "setStrictParsing",
        "methodParameterTypes": [
          "boolean"
        ],
        "methodReturnType": "void"
      }
    ]
  }
]